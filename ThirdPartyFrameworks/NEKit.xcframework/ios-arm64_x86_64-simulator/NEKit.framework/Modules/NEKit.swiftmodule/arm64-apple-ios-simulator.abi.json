{
  "ABIRoot": {
    "kind": "Root",
    "name": "TopLevel",
    "printedName": "TopLevel",
    "children": [
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "TypeDecl",
        "name": "DNSSessionMatchResult",
        "printedName": "DNSSessionMatchResult",
        "children": [
          {
            "kind": "Var",
            "name": "real",
            "printedName": "real",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.DNSSessionMatchResult.Type) -> NEKit.DNSSessionMatchResult",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSSessionMatchResult",
                    "printedName": "NEKit.DNSSessionMatchResult",
                    "usr": "s:5NEKit21DNSSessionMatchResultO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.DNSSessionMatchResult.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSSessionMatchResult",
                        "printedName": "NEKit.DNSSessionMatchResult",
                        "usr": "s:5NEKit21DNSSessionMatchResultO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit21DNSSessionMatchResultO4realyA2CmF",
            "mangledName": "$s5NEKit21DNSSessionMatchResultO4realyA2CmF",
            "moduleName": "NEKit"
          },
          {
            "kind": "Var",
            "name": "fake",
            "printedName": "fake",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.DNSSessionMatchResult.Type) -> NEKit.DNSSessionMatchResult",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSSessionMatchResult",
                    "printedName": "NEKit.DNSSessionMatchResult",
                    "usr": "s:5NEKit21DNSSessionMatchResultO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.DNSSessionMatchResult.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSSessionMatchResult",
                        "printedName": "NEKit.DNSSessionMatchResult",
                        "usr": "s:5NEKit21DNSSessionMatchResultO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit21DNSSessionMatchResultO4fakeyA2CmF",
            "mangledName": "$s5NEKit21DNSSessionMatchResultO4fakeyA2CmF",
            "moduleName": "NEKit"
          },
          {
            "kind": "Var",
            "name": "unknown",
            "printedName": "unknown",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.DNSSessionMatchResult.Type) -> NEKit.DNSSessionMatchResult",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSSessionMatchResult",
                    "printedName": "NEKit.DNSSessionMatchResult",
                    "usr": "s:5NEKit21DNSSessionMatchResultO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.DNSSessionMatchResult.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSSessionMatchResult",
                        "printedName": "NEKit.DNSSessionMatchResult",
                        "usr": "s:5NEKit21DNSSessionMatchResultO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit21DNSSessionMatchResultO7unknownyA2CmF",
            "mangledName": "$s5NEKit21DNSSessionMatchResultO7unknownyA2CmF",
            "moduleName": "NEKit"
          },
          {
            "kind": "Var",
            "name": "pass",
            "printedName": "pass",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.DNSSessionMatchResult.Type) -> NEKit.DNSSessionMatchResult",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSSessionMatchResult",
                    "printedName": "NEKit.DNSSessionMatchResult",
                    "usr": "s:5NEKit21DNSSessionMatchResultO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.DNSSessionMatchResult.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSSessionMatchResult",
                        "printedName": "NEKit.DNSSessionMatchResult",
                        "usr": "s:5NEKit21DNSSessionMatchResultO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit21DNSSessionMatchResultO4passyA2CmF",
            "mangledName": "$s5NEKit21DNSSessionMatchResultO4passyA2CmF",
            "moduleName": "NEKit"
          },
          {
            "kind": "Function",
            "name": "==",
            "printedName": "==(_:_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              },
              {
                "kind": "TypeNominal",
                "name": "DNSSessionMatchResult",
                "printedName": "NEKit.DNSSessionMatchResult",
                "usr": "s:5NEKit21DNSSessionMatchResultO"
              },
              {
                "kind": "TypeNominal",
                "name": "DNSSessionMatchResult",
                "printedName": "NEKit.DNSSessionMatchResult",
                "usr": "s:5NEKit21DNSSessionMatchResultO"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit21DNSSessionMatchResultO2eeoiySbAC_ACtFZ",
            "mangledName": "$s5NEKit21DNSSessionMatchResultO2eeoiySbAC_ACtFZ",
            "moduleName": "NEKit",
            "static": true,
            "implicit": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Var",
            "name": "hashValue",
            "printedName": "hashValue",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit21DNSSessionMatchResultO9hashValueSivp",
            "mangledName": "$s5NEKit21DNSSessionMatchResultO9hashValueSivp",
            "moduleName": "NEKit",
            "implicit": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit21DNSSessionMatchResultO9hashValueSivg",
                "mangledName": "$s5NEKit21DNSSessionMatchResultO9hashValueSivg",
                "moduleName": "NEKit",
                "implicit": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Function",
            "name": "hash",
            "printedName": "hash(into:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Hasher",
                "printedName": "Swift.Hasher",
                "paramValueOwnership": "InOut",
                "usr": "s:s6HasherV"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit21DNSSessionMatchResultO4hash4intoys6HasherVz_tF",
            "mangledName": "$s5NEKit21DNSSessionMatchResultO4hash4intoys6HasherVz_tF",
            "moduleName": "NEKit",
            "implicit": true,
            "funcSelfKind": "NonMutating"
          }
        ],
        "declKind": "Enum",
        "usr": "s:5NEKit21DNSSessionMatchResultO",
        "mangledName": "$s5NEKit21DNSSessionMatchResultO",
        "moduleName": "NEKit",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          }
        ]
      },
      {
        "kind": "Import",
        "name": "UIKit",
        "printedName": "UIKit",
        "declKind": "Import",
        "moduleName": "NEKit",
        "declAttributes": [
          "RawDocComment"
        ]
      },
      {
        "kind": "Import",
        "name": "UserNotifications",
        "printedName": "UserNotifications",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "Import",
        "name": "CocoaLumberjackSwift",
        "printedName": "CocoaLumberjackSwift",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "TypeDecl",
        "name": "HTTPHeader",
        "printedName": "HTTPHeader",
        "children": [
          {
            "kind": "TypeDecl",
            "name": "HTTPHeaderError",
            "printedName": "HTTPHeaderError",
            "children": [
              {
                "kind": "Var",
                "name": "malformedHeader",
                "printedName": "malformedHeader",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(NEKit.HTTPHeader.HTTPHeaderError.Type) -> NEKit.HTTPHeader.HTTPHeaderError",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "HTTPHeaderError",
                        "printedName": "NEKit.HTTPHeader.HTTPHeaderError",
                        "usr": "s:5NEKit10HTTPHeaderC0B5ErrorO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Metatype",
                        "printedName": "NEKit.HTTPHeader.HTTPHeaderError.Type",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "HTTPHeaderError",
                            "printedName": "NEKit.HTTPHeader.HTTPHeaderError",
                            "usr": "s:5NEKit10HTTPHeaderC0B5ErrorO"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "declKind": "EnumElement",
                "usr": "s:5NEKit10HTTPHeaderC0B5ErrorO15malformedHeaderyA2EmF",
                "mangledName": "$s5NEKit10HTTPHeaderC0B5ErrorO15malformedHeaderyA2EmF",
                "moduleName": "NEKit"
              },
              {
                "kind": "Var",
                "name": "invalidRequestLine",
                "printedName": "invalidRequestLine",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(NEKit.HTTPHeader.HTTPHeaderError.Type) -> NEKit.HTTPHeader.HTTPHeaderError",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "HTTPHeaderError",
                        "printedName": "NEKit.HTTPHeader.HTTPHeaderError",
                        "usr": "s:5NEKit10HTTPHeaderC0B5ErrorO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Metatype",
                        "printedName": "NEKit.HTTPHeader.HTTPHeaderError.Type",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "HTTPHeaderError",
                            "printedName": "NEKit.HTTPHeader.HTTPHeaderError",
                            "usr": "s:5NEKit10HTTPHeaderC0B5ErrorO"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "declKind": "EnumElement",
                "usr": "s:5NEKit10HTTPHeaderC0B5ErrorO18invalidRequestLineyA2EmF",
                "mangledName": "$s5NEKit10HTTPHeaderC0B5ErrorO18invalidRequestLineyA2EmF",
                "moduleName": "NEKit"
              },
              {
                "kind": "Var",
                "name": "invalidHeaderField",
                "printedName": "invalidHeaderField",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(NEKit.HTTPHeader.HTTPHeaderError.Type) -> NEKit.HTTPHeader.HTTPHeaderError",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "HTTPHeaderError",
                        "printedName": "NEKit.HTTPHeader.HTTPHeaderError",
                        "usr": "s:5NEKit10HTTPHeaderC0B5ErrorO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Metatype",
                        "printedName": "NEKit.HTTPHeader.HTTPHeaderError.Type",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "HTTPHeaderError",
                            "printedName": "NEKit.HTTPHeader.HTTPHeaderError",
                            "usr": "s:5NEKit10HTTPHeaderC0B5ErrorO"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "declKind": "EnumElement",
                "usr": "s:5NEKit10HTTPHeaderC0B5ErrorO18invalidHeaderFieldyA2EmF",
                "mangledName": "$s5NEKit10HTTPHeaderC0B5ErrorO18invalidHeaderFieldyA2EmF",
                "moduleName": "NEKit"
              },
              {
                "kind": "Var",
                "name": "invalidConnectURL",
                "printedName": "invalidConnectURL",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(NEKit.HTTPHeader.HTTPHeaderError.Type) -> NEKit.HTTPHeader.HTTPHeaderError",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "HTTPHeaderError",
                        "printedName": "NEKit.HTTPHeader.HTTPHeaderError",
                        "usr": "s:5NEKit10HTTPHeaderC0B5ErrorO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Metatype",
                        "printedName": "NEKit.HTTPHeader.HTTPHeaderError.Type",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "HTTPHeaderError",
                            "printedName": "NEKit.HTTPHeader.HTTPHeaderError",
                            "usr": "s:5NEKit10HTTPHeaderC0B5ErrorO"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "declKind": "EnumElement",
                "usr": "s:5NEKit10HTTPHeaderC0B5ErrorO17invalidConnectURLyA2EmF",
                "mangledName": "$s5NEKit10HTTPHeaderC0B5ErrorO17invalidConnectURLyA2EmF",
                "moduleName": "NEKit"
              },
              {
                "kind": "Var",
                "name": "invalidConnectPort",
                "printedName": "invalidConnectPort",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(NEKit.HTTPHeader.HTTPHeaderError.Type) -> NEKit.HTTPHeader.HTTPHeaderError",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "HTTPHeaderError",
                        "printedName": "NEKit.HTTPHeader.HTTPHeaderError",
                        "usr": "s:5NEKit10HTTPHeaderC0B5ErrorO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Metatype",
                        "printedName": "NEKit.HTTPHeader.HTTPHeaderError.Type",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "HTTPHeaderError",
                            "printedName": "NEKit.HTTPHeader.HTTPHeaderError",
                            "usr": "s:5NEKit10HTTPHeaderC0B5ErrorO"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "declKind": "EnumElement",
                "usr": "s:5NEKit10HTTPHeaderC0B5ErrorO18invalidConnectPortyA2EmF",
                "mangledName": "$s5NEKit10HTTPHeaderC0B5ErrorO18invalidConnectPortyA2EmF",
                "moduleName": "NEKit"
              },
              {
                "kind": "Var",
                "name": "invalidURL",
                "printedName": "invalidURL",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(NEKit.HTTPHeader.HTTPHeaderError.Type) -> NEKit.HTTPHeader.HTTPHeaderError",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "HTTPHeaderError",
                        "printedName": "NEKit.HTTPHeader.HTTPHeaderError",
                        "usr": "s:5NEKit10HTTPHeaderC0B5ErrorO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Metatype",
                        "printedName": "NEKit.HTTPHeader.HTTPHeaderError.Type",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "HTTPHeaderError",
                            "printedName": "NEKit.HTTPHeader.HTTPHeaderError",
                            "usr": "s:5NEKit10HTTPHeaderC0B5ErrorO"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "declKind": "EnumElement",
                "usr": "s:5NEKit10HTTPHeaderC0B5ErrorO10invalidURLyA2EmF",
                "mangledName": "$s5NEKit10HTTPHeaderC0B5ErrorO10invalidURLyA2EmF",
                "moduleName": "NEKit"
              },
              {
                "kind": "Var",
                "name": "missingHostField",
                "printedName": "missingHostField",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(NEKit.HTTPHeader.HTTPHeaderError.Type) -> NEKit.HTTPHeader.HTTPHeaderError",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "HTTPHeaderError",
                        "printedName": "NEKit.HTTPHeader.HTTPHeaderError",
                        "usr": "s:5NEKit10HTTPHeaderC0B5ErrorO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Metatype",
                        "printedName": "NEKit.HTTPHeader.HTTPHeaderError.Type",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "HTTPHeaderError",
                            "printedName": "NEKit.HTTPHeader.HTTPHeaderError",
                            "usr": "s:5NEKit10HTTPHeaderC0B5ErrorO"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "declKind": "EnumElement",
                "usr": "s:5NEKit10HTTPHeaderC0B5ErrorO16missingHostFieldyA2EmF",
                "mangledName": "$s5NEKit10HTTPHeaderC0B5ErrorO16missingHostFieldyA2EmF",
                "moduleName": "NEKit"
              },
              {
                "kind": "Var",
                "name": "invalidHostField",
                "printedName": "invalidHostField",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(NEKit.HTTPHeader.HTTPHeaderError.Type) -> NEKit.HTTPHeader.HTTPHeaderError",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "HTTPHeaderError",
                        "printedName": "NEKit.HTTPHeader.HTTPHeaderError",
                        "usr": "s:5NEKit10HTTPHeaderC0B5ErrorO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Metatype",
                        "printedName": "NEKit.HTTPHeader.HTTPHeaderError.Type",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "HTTPHeaderError",
                            "printedName": "NEKit.HTTPHeader.HTTPHeaderError",
                            "usr": "s:5NEKit10HTTPHeaderC0B5ErrorO"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "declKind": "EnumElement",
                "usr": "s:5NEKit10HTTPHeaderC0B5ErrorO16invalidHostFieldyA2EmF",
                "mangledName": "$s5NEKit10HTTPHeaderC0B5ErrorO16invalidHostFieldyA2EmF",
                "moduleName": "NEKit"
              },
              {
                "kind": "Var",
                "name": "invalidHostPort",
                "printedName": "invalidHostPort",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(NEKit.HTTPHeader.HTTPHeaderError.Type) -> NEKit.HTTPHeader.HTTPHeaderError",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "HTTPHeaderError",
                        "printedName": "NEKit.HTTPHeader.HTTPHeaderError",
                        "usr": "s:5NEKit10HTTPHeaderC0B5ErrorO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Metatype",
                        "printedName": "NEKit.HTTPHeader.HTTPHeaderError.Type",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "HTTPHeaderError",
                            "printedName": "NEKit.HTTPHeader.HTTPHeaderError",
                            "usr": "s:5NEKit10HTTPHeaderC0B5ErrorO"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "declKind": "EnumElement",
                "usr": "s:5NEKit10HTTPHeaderC0B5ErrorO15invalidHostPortyA2EmF",
                "mangledName": "$s5NEKit10HTTPHeaderC0B5ErrorO15invalidHostPortyA2EmF",
                "moduleName": "NEKit"
              },
              {
                "kind": "Var",
                "name": "invalidContentLength",
                "printedName": "invalidContentLength",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(NEKit.HTTPHeader.HTTPHeaderError.Type) -> NEKit.HTTPHeader.HTTPHeaderError",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "HTTPHeaderError",
                        "printedName": "NEKit.HTTPHeader.HTTPHeaderError",
                        "usr": "s:5NEKit10HTTPHeaderC0B5ErrorO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Metatype",
                        "printedName": "NEKit.HTTPHeader.HTTPHeaderError.Type",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "HTTPHeaderError",
                            "printedName": "NEKit.HTTPHeader.HTTPHeaderError",
                            "usr": "s:5NEKit10HTTPHeaderC0B5ErrorO"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "declKind": "EnumElement",
                "usr": "s:5NEKit10HTTPHeaderC0B5ErrorO20invalidContentLengthyA2EmF",
                "mangledName": "$s5NEKit10HTTPHeaderC0B5ErrorO20invalidContentLengthyA2EmF",
                "moduleName": "NEKit"
              },
              {
                "kind": "Var",
                "name": "illegalEncoding",
                "printedName": "illegalEncoding",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(NEKit.HTTPHeader.HTTPHeaderError.Type) -> NEKit.HTTPHeader.HTTPHeaderError",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "HTTPHeaderError",
                        "printedName": "NEKit.HTTPHeader.HTTPHeaderError",
                        "usr": "s:5NEKit10HTTPHeaderC0B5ErrorO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Metatype",
                        "printedName": "NEKit.HTTPHeader.HTTPHeaderError.Type",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "HTTPHeaderError",
                            "printedName": "NEKit.HTTPHeader.HTTPHeaderError",
                            "usr": "s:5NEKit10HTTPHeaderC0B5ErrorO"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "declKind": "EnumElement",
                "usr": "s:5NEKit10HTTPHeaderC0B5ErrorO15illegalEncodingyA2EmF",
                "mangledName": "$s5NEKit10HTTPHeaderC0B5ErrorO15illegalEncodingyA2EmF",
                "moduleName": "NEKit"
              },
              {
                "kind": "Function",
                "name": "==",
                "printedName": "==(_:_:)",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Bool",
                    "printedName": "Swift.Bool",
                    "usr": "s:Sb"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "HTTPHeaderError",
                    "printedName": "NEKit.HTTPHeader.HTTPHeaderError",
                    "usr": "s:5NEKit10HTTPHeaderC0B5ErrorO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "HTTPHeaderError",
                    "printedName": "NEKit.HTTPHeader.HTTPHeaderError",
                    "usr": "s:5NEKit10HTTPHeaderC0B5ErrorO"
                  }
                ],
                "declKind": "Func",
                "usr": "s:5NEKit10HTTPHeaderC0B5ErrorO2eeoiySbAE_AEtFZ",
                "mangledName": "$s5NEKit10HTTPHeaderC0B5ErrorO2eeoiySbAE_AEtFZ",
                "moduleName": "NEKit",
                "static": true,
                "implicit": true,
                "funcSelfKind": "NonMutating"
              },
              {
                "kind": "Var",
                "name": "hashValue",
                "printedName": "hashValue",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ],
                "declKind": "Var",
                "usr": "s:5NEKit10HTTPHeaderC0B5ErrorO9hashValueSivp",
                "mangledName": "$s5NEKit10HTTPHeaderC0B5ErrorO9hashValueSivp",
                "moduleName": "NEKit",
                "implicit": true,
                "accessors": [
                  {
                    "kind": "Accessor",
                    "name": "Get",
                    "printedName": "Get()",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Int",
                        "printedName": "Swift.Int",
                        "usr": "s:Si"
                      }
                    ],
                    "declKind": "Accessor",
                    "usr": "s:5NEKit10HTTPHeaderC0B5ErrorO9hashValueSivg",
                    "mangledName": "$s5NEKit10HTTPHeaderC0B5ErrorO9hashValueSivg",
                    "moduleName": "NEKit",
                    "implicit": true,
                    "accessorKind": "get"
                  }
                ]
              },
              {
                "kind": "Function",
                "name": "hash",
                "printedName": "hash(into:)",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Hasher",
                    "printedName": "Swift.Hasher",
                    "paramValueOwnership": "InOut",
                    "usr": "s:s6HasherV"
                  }
                ],
                "declKind": "Func",
                "usr": "s:5NEKit10HTTPHeaderC0B5ErrorO4hash4intoys6HasherVz_tF",
                "mangledName": "$s5NEKit10HTTPHeaderC0B5ErrorO4hash4intoys6HasherVz_tF",
                "moduleName": "NEKit",
                "implicit": true,
                "funcSelfKind": "NonMutating"
              }
            ],
            "declKind": "Enum",
            "usr": "s:5NEKit10HTTPHeaderC0B5ErrorO",
            "mangledName": "$s5NEKit10HTTPHeaderC0B5ErrorO",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "conformances": [
              {
                "kind": "Conformance",
                "name": "Equatable",
                "printedName": "Equatable",
                "usr": "s:SQ",
                "mangledName": "$sSQ"
              },
              {
                "kind": "Conformance",
                "name": "Hashable",
                "printedName": "Hashable",
                "usr": "s:SH",
                "mangledName": "$sSH"
              },
              {
                "kind": "Conformance",
                "name": "Error",
                "printedName": "Error",
                "usr": "s:s5ErrorP",
                "mangledName": "$ss5ErrorP"
              },
              {
                "kind": "Conformance",
                "name": "Sendable",
                "printedName": "Sendable",
                "usr": "s:s8SendableP",
                "mangledName": "$ss8SendableP"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "HTTPVersion",
            "printedName": "HTTPVersion",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit10HTTPHeaderC11HTTPVersionSSvp",
            "mangledName": "$s5NEKit10HTTPHeaderC11HTTPVersionSSvp",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "HasStorage",
              "AccessControl"
            ],
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit10HTTPHeaderC11HTTPVersionSSvg",
                "mangledName": "$s5NEKit10HTTPHeaderC11HTTPVersionSSvg",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit10HTTPHeaderC11HTTPVersionSSvs",
                "mangledName": "$s5NEKit10HTTPHeaderC11HTTPVersionSSvs",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit10HTTPHeaderC11HTTPVersionSSvM",
                "mangledName": "$s5NEKit10HTTPHeaderC11HTTPVersionSSvM",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "method",
            "printedName": "method",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit10HTTPHeaderC6methodSSvp",
            "mangledName": "$s5NEKit10HTTPHeaderC6methodSSvp",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "HasStorage",
              "AccessControl"
            ],
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit10HTTPHeaderC6methodSSvg",
                "mangledName": "$s5NEKit10HTTPHeaderC6methodSSvg",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit10HTTPHeaderC6methodSSvs",
                "mangledName": "$s5NEKit10HTTPHeaderC6methodSSvs",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit10HTTPHeaderC6methodSSvM",
                "mangledName": "$s5NEKit10HTTPHeaderC6methodSSvM",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "isConnect",
            "printedName": "isConnect",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit10HTTPHeaderC9isConnectSbvp",
            "mangledName": "$s5NEKit10HTTPHeaderC9isConnectSbvp",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "HasInitialValue",
              "HasStorage",
              "AccessControl"
            ],
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Bool",
                    "printedName": "Swift.Bool",
                    "usr": "s:Sb"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit10HTTPHeaderC9isConnectSbvg",
                "mangledName": "$s5NEKit10HTTPHeaderC9isConnectSbvg",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Bool",
                    "printedName": "Swift.Bool",
                    "usr": "s:Sb"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit10HTTPHeaderC9isConnectSbvs",
                "mangledName": "$s5NEKit10HTTPHeaderC9isConnectSbvs",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit10HTTPHeaderC9isConnectSbvM",
                "mangledName": "$s5NEKit10HTTPHeaderC9isConnectSbvM",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "path",
            "printedName": "path",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit10HTTPHeaderC4pathSSvp",
            "mangledName": "$s5NEKit10HTTPHeaderC4pathSSvp",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "HasStorage",
              "AccessControl"
            ],
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit10HTTPHeaderC4pathSSvg",
                "mangledName": "$s5NEKit10HTTPHeaderC4pathSSvg",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit10HTTPHeaderC4pathSSvs",
                "mangledName": "$s5NEKit10HTTPHeaderC4pathSSvs",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit10HTTPHeaderC4pathSSvM",
                "mangledName": "$s5NEKit10HTTPHeaderC4pathSSvM",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "foundationURL",
            "printedName": "foundationURL",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Foundation.URL?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "URL",
                    "printedName": "Foundation.URL",
                    "usr": "s:10Foundation3URLV"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit10HTTPHeaderC13foundationURL10Foundation0D0VSgvp",
            "mangledName": "$s5NEKit10HTTPHeaderC13foundationURL10Foundation0D0VSgvp",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "HasInitialValue",
              "HasStorage",
              "AccessControl"
            ],
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "Foundation.URL?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "URL",
                        "printedName": "Foundation.URL",
                        "usr": "s:10Foundation3URLV"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit10HTTPHeaderC13foundationURL10Foundation0D0VSgvg",
                "mangledName": "$s5NEKit10HTTPHeaderC13foundationURL10Foundation0D0VSgvg",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "Foundation.URL?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "URL",
                        "printedName": "Foundation.URL",
                        "usr": "s:10Foundation3URLV"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit10HTTPHeaderC13foundationURL10Foundation0D0VSgvs",
                "mangledName": "$s5NEKit10HTTPHeaderC13foundationURL10Foundation0D0VSgvs",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit10HTTPHeaderC13foundationURL10Foundation0D0VSgvM",
                "mangledName": "$s5NEKit10HTTPHeaderC13foundationURL10Foundation0D0VSgvM",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "homemadeURL",
            "printedName": "homemadeURL",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "NEKit.HTTPURL?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "HTTPURL",
                    "printedName": "NEKit.HTTPURL",
                    "usr": "s:5NEKit7HTTPURLC"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit10HTTPHeaderC11homemadeURLAA7HTTPURLCSgvp",
            "mangledName": "$s5NEKit10HTTPHeaderC11homemadeURLAA7HTTPURLCSgvp",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "HasInitialValue",
              "HasStorage",
              "AccessControl"
            ],
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "NEKit.HTTPURL?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "HTTPURL",
                        "printedName": "NEKit.HTTPURL",
                        "usr": "s:5NEKit7HTTPURLC"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit10HTTPHeaderC11homemadeURLAA7HTTPURLCSgvg",
                "mangledName": "$s5NEKit10HTTPHeaderC11homemadeURLAA7HTTPURLCSgvg",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "NEKit.HTTPURL?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "HTTPURL",
                        "printedName": "NEKit.HTTPURL",
                        "usr": "s:5NEKit7HTTPURLC"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit10HTTPHeaderC11homemadeURLAA7HTTPURLCSgvs",
                "mangledName": "$s5NEKit10HTTPHeaderC11homemadeURLAA7HTTPURLCSgvs",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit10HTTPHeaderC11homemadeURLAA7HTTPURLCSgvM",
                "mangledName": "$s5NEKit10HTTPHeaderC11homemadeURLAA7HTTPURLCSgvM",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "host",
            "printedName": "host",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit10HTTPHeaderC4hostSSvp",
            "mangledName": "$s5NEKit10HTTPHeaderC4hostSSvp",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "HasStorage",
              "AccessControl"
            ],
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit10HTTPHeaderC4hostSSvg",
                "mangledName": "$s5NEKit10HTTPHeaderC4hostSSvg",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit10HTTPHeaderC4hostSSvs",
                "mangledName": "$s5NEKit10HTTPHeaderC4hostSSvs",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit10HTTPHeaderC4hostSSvM",
                "mangledName": "$s5NEKit10HTTPHeaderC4hostSSvM",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "port",
            "printedName": "port",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit10HTTPHeaderC4portSivp",
            "mangledName": "$s5NEKit10HTTPHeaderC4portSivp",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "HasStorage",
              "AccessControl"
            ],
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit10HTTPHeaderC4portSivg",
                "mangledName": "$s5NEKit10HTTPHeaderC4portSivg",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit10HTTPHeaderC4portSivs",
                "mangledName": "$s5NEKit10HTTPHeaderC4portSivs",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit10HTTPHeaderC4portSivM",
                "mangledName": "$s5NEKit10HTTPHeaderC4portSivM",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "contentLength",
            "printedName": "contentLength",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit10HTTPHeaderC13contentLengthSivp",
            "mangledName": "$s5NEKit10HTTPHeaderC13contentLengthSivp",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "HasInitialValue",
              "HasStorage",
              "AccessControl",
              "RawDocComment"
            ],
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit10HTTPHeaderC13contentLengthSivg",
                "mangledName": "$s5NEKit10HTTPHeaderC13contentLengthSivg",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit10HTTPHeaderC13contentLengthSivs",
                "mangledName": "$s5NEKit10HTTPHeaderC13contentLengthSivs",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit10HTTPHeaderC13contentLengthSivM",
                "mangledName": "$s5NEKit10HTTPHeaderC13contentLengthSivM",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "headers",
            "printedName": "headers",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Array",
                "printedName": "[(Swift.String, Swift.String)]",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Tuple",
                    "printedName": "(Swift.String, Swift.String)",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "String",
                        "printedName": "Swift.String",
                        "usr": "s:SS"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "String",
                        "printedName": "Swift.String",
                        "usr": "s:SS"
                      }
                    ]
                  }
                ],
                "usr": "s:Sa"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit10HTTPHeaderC7headersSaySS_SStGvp",
            "mangledName": "$s5NEKit10HTTPHeaderC7headersSaySS_SStGvp",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "HasInitialValue",
              "HasStorage",
              "AccessControl"
            ],
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Array",
                    "printedName": "[(Swift.String, Swift.String)]",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Tuple",
                        "printedName": "(Swift.String, Swift.String)",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "String",
                            "printedName": "Swift.String",
                            "usr": "s:SS"
                          },
                          {
                            "kind": "TypeNominal",
                            "name": "String",
                            "printedName": "Swift.String",
                            "usr": "s:SS"
                          }
                        ]
                      }
                    ],
                    "usr": "s:Sa"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit10HTTPHeaderC7headersSaySS_SStGvg",
                "mangledName": "$s5NEKit10HTTPHeaderC7headersSaySS_SStGvg",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Array",
                    "printedName": "[(Swift.String, Swift.String)]",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Tuple",
                        "printedName": "(Swift.String, Swift.String)",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "String",
                            "printedName": "Swift.String",
                            "usr": "s:SS"
                          },
                          {
                            "kind": "TypeNominal",
                            "name": "String",
                            "printedName": "Swift.String",
                            "usr": "s:SS"
                          }
                        ]
                      }
                    ],
                    "usr": "s:Sa"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit10HTTPHeaderC7headersSaySS_SStGvs",
                "mangledName": "$s5NEKit10HTTPHeaderC7headersSaySS_SStGvs",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit10HTTPHeaderC7headersSaySS_SStGvM",
                "mangledName": "$s5NEKit10HTTPHeaderC7headersSaySS_SStGvM",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "rawHeader",
            "printedName": "rawHeader",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Foundation.Data?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Data",
                    "printedName": "Foundation.Data",
                    "usr": "s:10Foundation4DataV"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit10HTTPHeaderC9rawHeader10Foundation4DataVSgvp",
            "mangledName": "$s5NEKit10HTTPHeaderC9rawHeader10Foundation4DataVSgvp",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "HasInitialValue",
              "HasStorage",
              "AccessControl"
            ],
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "Foundation.Data?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Data",
                        "printedName": "Foundation.Data",
                        "usr": "s:10Foundation4DataV"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit10HTTPHeaderC9rawHeader10Foundation4DataVSgvg",
                "mangledName": "$s5NEKit10HTTPHeaderC9rawHeader10Foundation4DataVSgvg",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "Foundation.Data?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Data",
                        "printedName": "Foundation.Data",
                        "usr": "s:10Foundation4DataV"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit10HTTPHeaderC9rawHeader10Foundation4DataVSgvs",
                "mangledName": "$s5NEKit10HTTPHeaderC9rawHeader10Foundation4DataVSgvs",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit10HTTPHeaderC9rawHeader10Foundation4DataVSgvM",
                "mangledName": "$s5NEKit10HTTPHeaderC9rawHeader10Foundation4DataVSgvM",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(headerString:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "HTTPHeader",
                "printedName": "NEKit.HTTPHeader",
                "usr": "s:5NEKit10HTTPHeaderC"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit10HTTPHeaderC12headerStringACSS_tKcfc",
            "mangledName": "$s5NEKit10HTTPHeaderC12headerStringACSS_tKcfc",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "throwing": true,
            "init_kind": "Designated"
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(headerData:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "HTTPHeader",
                "printedName": "NEKit.HTTPHeader",
                "usr": "s:5NEKit10HTTPHeaderC"
              },
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit10HTTPHeaderC10headerDataAC10Foundation0D0V_tKcfc",
            "mangledName": "$s5NEKit10HTTPHeaderC10headerDataAC10Foundation0D0V_tKcfc",
            "moduleName": "NEKit",
            "declAttributes": [
              "Convenience",
              "AccessControl"
            ],
            "throwing": true,
            "init_kind": "Convenience"
          },
          {
            "kind": "Subscript",
            "name": "subscript",
            "printedName": "subscript(_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Swift.String?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "usr": "s:Sq"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Subscript",
            "usr": "s:5NEKit10HTTPHeaderCySSSgSScip",
            "mangledName": "$s5NEKit10HTTPHeaderCySSSgSScip",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "AccessControl"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "Swift.String?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "String",
                        "printedName": "Swift.String",
                        "usr": "s:SS"
                      }
                    ],
                    "usr": "s:Sq"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit10HTTPHeaderCySSSgSScig",
                "mangledName": "$s5NEKit10HTTPHeaderCySSSgSScig",
                "moduleName": "NEKit",
                "isOpen": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Function",
            "name": "toData",
            "printedName": "toData()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit10HTTPHeaderC6toData10Foundation0D0VyF",
            "mangledName": "$s5NEKit10HTTPHeaderC6toData10Foundation0D0VyF",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "AccessControl"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "toString",
            "printedName": "toString()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit10HTTPHeaderC8toStringSSyF",
            "mangledName": "$s5NEKit10HTTPHeaderC8toStringSSyF",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "AccessControl"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "addHeader",
            "printedName": "addHeader(_:value:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit10HTTPHeaderC9addHeader_5valueySS_SStF",
            "mangledName": "$s5NEKit10HTTPHeaderC9addHeader_5valueySS_SStF",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "AccessControl"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "rewriteToRelativePath",
            "printedName": "rewriteToRelativePath()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit10HTTPHeaderC21rewriteToRelativePathyyF",
            "mangledName": "$s5NEKit10HTTPHeaderC21rewriteToRelativePathyyF",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "AccessControl"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "removeHeader",
            "printedName": "removeHeader(_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Swift.String?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "usr": "s:Sq"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit10HTTPHeaderC12removeHeaderySSSgSSF",
            "mangledName": "$s5NEKit10HTTPHeaderC12removeHeaderySSSgSSF",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "AccessControl"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "removeProxyHeader",
            "printedName": "removeProxyHeader()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit10HTTPHeaderC17removeProxyHeaderyyF",
            "mangledName": "$s5NEKit10HTTPHeaderC17removeProxyHeaderyyF",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "AccessControl"
            ],
            "funcSelfKind": "NonMutating"
          }
        ],
        "declKind": "Class",
        "usr": "s:5NEKit10HTTPHeaderC",
        "mangledName": "$s5NEKit10HTTPHeaderC",
        "moduleName": "NEKit",
        "isOpen": true,
        "declAttributes": [
          "AccessControl"
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "Import",
        "name": "Resolver",
        "printedName": "Resolver",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "Import",
        "name": "CocoaLumberjackSwift",
        "printedName": "CocoaLumberjackSwift",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "TypeDecl",
        "name": "DNSSession",
        "printedName": "DNSSession",
        "children": [
          {
            "kind": "Var",
            "name": "requestMessage",
            "printedName": "requestMessage",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "DNSMessage",
                "printedName": "NEKit.DNSMessage",
                "usr": "s:5NEKit10DNSMessageC"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit10DNSSessionC14requestMessageAA10DNSMessageCvp",
            "mangledName": "$s5NEKit10DNSSessionC14requestMessageAA10DNSMessageCvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "Final",
              "HasStorage",
              "AccessControl"
            ],
            "isLet": true,
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSMessage",
                    "printedName": "NEKit.DNSMessage",
                    "usr": "s:5NEKit10DNSMessageC"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit10DNSSessionC14requestMessageAA10DNSMessageCvg",
                "mangledName": "$s5NEKit10DNSSessionC14requestMessageAA10DNSMessageCvg",
                "moduleName": "NEKit",
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "realIP",
            "printedName": "realIP",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "NEKit.IPAddress?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "IPAddress",
                    "printedName": "NEKit.IPAddress",
                    "usr": "s:5NEKit9IPAddressC"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit10DNSSessionC6realIPAA9IPAddressCSgvp",
            "mangledName": "$s5NEKit10DNSSessionC6realIPAA9IPAddressCSgvp",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "HasInitialValue",
              "HasStorage",
              "AccessControl"
            ],
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "NEKit.IPAddress?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "IPAddress",
                        "printedName": "NEKit.IPAddress",
                        "usr": "s:5NEKit9IPAddressC"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit10DNSSessionC6realIPAA9IPAddressCSgvg",
                "mangledName": "$s5NEKit10DNSSessionC6realIPAA9IPAddressCSgvg",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "NEKit.IPAddress?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "IPAddress",
                        "printedName": "NEKit.IPAddress",
                        "usr": "s:5NEKit9IPAddressC"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit10DNSSessionC6realIPAA9IPAddressCSgvs",
                "mangledName": "$s5NEKit10DNSSessionC6realIPAA9IPAddressCSgvs",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit10DNSSessionC6realIPAA9IPAddressCSgvM",
                "mangledName": "$s5NEKit10DNSSessionC6realIPAA9IPAddressCSgvM",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "fakeIP",
            "printedName": "fakeIP",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "NEKit.IPAddress?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "IPAddress",
                    "printedName": "NEKit.IPAddress",
                    "usr": "s:5NEKit9IPAddressC"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit10DNSSessionC6fakeIPAA9IPAddressCSgvp",
            "mangledName": "$s5NEKit10DNSSessionC6fakeIPAA9IPAddressCSgvp",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "HasInitialValue",
              "HasStorage",
              "AccessControl"
            ],
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "NEKit.IPAddress?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "IPAddress",
                        "printedName": "NEKit.IPAddress",
                        "usr": "s:5NEKit9IPAddressC"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit10DNSSessionC6fakeIPAA9IPAddressCSgvg",
                "mangledName": "$s5NEKit10DNSSessionC6fakeIPAA9IPAddressCSgvg",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "NEKit.IPAddress?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "IPAddress",
                        "printedName": "NEKit.IPAddress",
                        "usr": "s:5NEKit9IPAddressC"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit10DNSSessionC6fakeIPAA9IPAddressCSgvs",
                "mangledName": "$s5NEKit10DNSSessionC6fakeIPAA9IPAddressCSgvs",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit10DNSSessionC6fakeIPAA9IPAddressCSgvM",
                "mangledName": "$s5NEKit10DNSSessionC6fakeIPAA9IPAddressCSgvM",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "realResponseMessage",
            "printedName": "realResponseMessage",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "NEKit.DNSMessage?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSMessage",
                    "printedName": "NEKit.DNSMessage",
                    "usr": "s:5NEKit10DNSMessageC"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit10DNSSessionC19realResponseMessageAA10DNSMessageCSgvp",
            "mangledName": "$s5NEKit10DNSSessionC19realResponseMessageAA10DNSMessageCSgvp",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "HasInitialValue",
              "HasStorage",
              "AccessControl"
            ],
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "NEKit.DNSMessage?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSMessage",
                        "printedName": "NEKit.DNSMessage",
                        "usr": "s:5NEKit10DNSMessageC"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit10DNSSessionC19realResponseMessageAA10DNSMessageCSgvg",
                "mangledName": "$s5NEKit10DNSSessionC19realResponseMessageAA10DNSMessageCSgvg",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "NEKit.DNSMessage?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSMessage",
                        "printedName": "NEKit.DNSMessage",
                        "usr": "s:5NEKit10DNSMessageC"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit10DNSSessionC19realResponseMessageAA10DNSMessageCSgvs",
                "mangledName": "$s5NEKit10DNSSessionC19realResponseMessageAA10DNSMessageCSgvs",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit10DNSSessionC19realResponseMessageAA10DNSMessageCSgvM",
                "mangledName": "$s5NEKit10DNSSessionC19realResponseMessageAA10DNSMessageCSgvM",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "matchedRule",
            "printedName": "matchedRule",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "NEKit.Rule?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Rule",
                    "printedName": "NEKit.Rule",
                    "usr": "s:5NEKit4RuleC"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit10DNSSessionC11matchedRuleAA0D0CSgvp",
            "mangledName": "$s5NEKit10DNSSessionC11matchedRuleAA0D0CSgvp",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "HasInitialValue",
              "HasStorage",
              "AccessControl"
            ],
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "NEKit.Rule?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Rule",
                        "printedName": "NEKit.Rule",
                        "usr": "s:5NEKit4RuleC"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit10DNSSessionC11matchedRuleAA0D0CSgvg",
                "mangledName": "$s5NEKit10DNSSessionC11matchedRuleAA0D0CSgvg",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "NEKit.Rule?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Rule",
                        "printedName": "NEKit.Rule",
                        "usr": "s:5NEKit4RuleC"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit10DNSSessionC11matchedRuleAA0D0CSgvs",
                "mangledName": "$s5NEKit10DNSSessionC11matchedRuleAA0D0CSgvs",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit10DNSSessionC11matchedRuleAA0D0CSgvM",
                "mangledName": "$s5NEKit10DNSSessionC11matchedRuleAA0D0CSgvM",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "matchResult",
            "printedName": "matchResult",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "NEKit.DNSSessionMatchResult?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSSessionMatchResult",
                    "printedName": "NEKit.DNSSessionMatchResult",
                    "usr": "s:5NEKit21DNSSessionMatchResultO"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit10DNSSessionC11matchResultAA0b5MatchD0OSgvp",
            "mangledName": "$s5NEKit10DNSSessionC11matchResultAA0b5MatchD0OSgvp",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "HasInitialValue",
              "HasStorage",
              "AccessControl"
            ],
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "NEKit.DNSSessionMatchResult?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSSessionMatchResult",
                        "printedName": "NEKit.DNSSessionMatchResult",
                        "usr": "s:5NEKit21DNSSessionMatchResultO"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit10DNSSessionC11matchResultAA0b5MatchD0OSgvg",
                "mangledName": "$s5NEKit10DNSSessionC11matchResultAA0b5MatchD0OSgvg",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "NEKit.DNSSessionMatchResult?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSSessionMatchResult",
                        "printedName": "NEKit.DNSSessionMatchResult",
                        "usr": "s:5NEKit21DNSSessionMatchResultO"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit10DNSSessionC11matchResultAA0b5MatchD0OSgvs",
                "mangledName": "$s5NEKit10DNSSessionC11matchResultAA0b5MatchD0OSgvs",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit10DNSSessionC11matchResultAA0b5MatchD0OSgvM",
                "mangledName": "$s5NEKit10DNSSessionC11matchResultAA0b5MatchD0OSgvM",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "description",
            "printedName": "description",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit10DNSSessionC11descriptionSSvp",
            "mangledName": "$s5NEKit10DNSSessionC11descriptionSSvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "isFromExtension": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit10DNSSessionC11descriptionSSvg",
                "mangledName": "$s5NEKit10DNSSessionC11descriptionSSvg",
                "moduleName": "NEKit",
                "isFromExtension": true,
                "accessorKind": "get"
              }
            ]
          }
        ],
        "declKind": "Class",
        "usr": "s:5NEKit10DNSSessionC",
        "mangledName": "$s5NEKit10DNSSessionC",
        "moduleName": "NEKit",
        "isOpen": true,
        "declAttributes": [
          "AccessControl"
        ],
        "hasMissingDesignatedInitializers": true,
        "conformances": [
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          }
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "TypeDecl",
        "name": "DomainListRule",
        "printedName": "DomainListRule",
        "children": [
          {
            "kind": "TypeDecl",
            "name": "MatchCriterion",
            "printedName": "MatchCriterion",
            "children": [
              {
                "kind": "Var",
                "name": "regex",
                "printedName": "regex",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(NEKit.DomainListRule.MatchCriterion.Type) -> (Foundation.NSRegularExpression) -> NEKit.DomainListRule.MatchCriterion",
                    "children": [
                      {
                        "kind": "TypeFunc",
                        "name": "Function",
                        "printedName": "(Foundation.NSRegularExpression) -> NEKit.DomainListRule.MatchCriterion",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "MatchCriterion",
                            "printedName": "NEKit.DomainListRule.MatchCriterion",
                            "usr": "s:5NEKit14DomainListRuleC14MatchCriterionO"
                          },
                          {
                            "kind": "TypeNominal",
                            "name": "NSRegularExpression",
                            "printedName": "Foundation.NSRegularExpression",
                            "usr": "c:objc(cs)NSRegularExpression"
                          }
                        ]
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Metatype",
                        "printedName": "NEKit.DomainListRule.MatchCriterion.Type",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "MatchCriterion",
                            "printedName": "NEKit.DomainListRule.MatchCriterion",
                            "usr": "s:5NEKit14DomainListRuleC14MatchCriterionO"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "declKind": "EnumElement",
                "usr": "s:5NEKit14DomainListRuleC14MatchCriterionO5regexyAESo19NSRegularExpressionCcAEmF",
                "mangledName": "$s5NEKit14DomainListRuleC14MatchCriterionO5regexyAESo19NSRegularExpressionCcAEmF",
                "moduleName": "NEKit"
              },
              {
                "kind": "Var",
                "name": "prefix",
                "printedName": "prefix",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(NEKit.DomainListRule.MatchCriterion.Type) -> (Swift.String) -> NEKit.DomainListRule.MatchCriterion",
                    "children": [
                      {
                        "kind": "TypeFunc",
                        "name": "Function",
                        "printedName": "(Swift.String) -> NEKit.DomainListRule.MatchCriterion",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "MatchCriterion",
                            "printedName": "NEKit.DomainListRule.MatchCriterion",
                            "usr": "s:5NEKit14DomainListRuleC14MatchCriterionO"
                          },
                          {
                            "kind": "TypeNominal",
                            "name": "String",
                            "printedName": "Swift.String",
                            "usr": "s:SS"
                          }
                        ]
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Metatype",
                        "printedName": "NEKit.DomainListRule.MatchCriterion.Type",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "MatchCriterion",
                            "printedName": "NEKit.DomainListRule.MatchCriterion",
                            "usr": "s:5NEKit14DomainListRuleC14MatchCriterionO"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "declKind": "EnumElement",
                "usr": "s:5NEKit14DomainListRuleC14MatchCriterionO6prefixyAESScAEmF",
                "mangledName": "$s5NEKit14DomainListRuleC14MatchCriterionO6prefixyAESScAEmF",
                "moduleName": "NEKit"
              },
              {
                "kind": "Var",
                "name": "suffix",
                "printedName": "suffix",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(NEKit.DomainListRule.MatchCriterion.Type) -> (Swift.String) -> NEKit.DomainListRule.MatchCriterion",
                    "children": [
                      {
                        "kind": "TypeFunc",
                        "name": "Function",
                        "printedName": "(Swift.String) -> NEKit.DomainListRule.MatchCriterion",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "MatchCriterion",
                            "printedName": "NEKit.DomainListRule.MatchCriterion",
                            "usr": "s:5NEKit14DomainListRuleC14MatchCriterionO"
                          },
                          {
                            "kind": "TypeNominal",
                            "name": "String",
                            "printedName": "Swift.String",
                            "usr": "s:SS"
                          }
                        ]
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Metatype",
                        "printedName": "NEKit.DomainListRule.MatchCriterion.Type",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "MatchCriterion",
                            "printedName": "NEKit.DomainListRule.MatchCriterion",
                            "usr": "s:5NEKit14DomainListRuleC14MatchCriterionO"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "declKind": "EnumElement",
                "usr": "s:5NEKit14DomainListRuleC14MatchCriterionO6suffixyAESScAEmF",
                "mangledName": "$s5NEKit14DomainListRuleC14MatchCriterionO6suffixyAESScAEmF",
                "moduleName": "NEKit"
              },
              {
                "kind": "Var",
                "name": "keyword",
                "printedName": "keyword",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(NEKit.DomainListRule.MatchCriterion.Type) -> (Swift.String) -> NEKit.DomainListRule.MatchCriterion",
                    "children": [
                      {
                        "kind": "TypeFunc",
                        "name": "Function",
                        "printedName": "(Swift.String) -> NEKit.DomainListRule.MatchCriterion",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "MatchCriterion",
                            "printedName": "NEKit.DomainListRule.MatchCriterion",
                            "usr": "s:5NEKit14DomainListRuleC14MatchCriterionO"
                          },
                          {
                            "kind": "TypeNominal",
                            "name": "String",
                            "printedName": "Swift.String",
                            "usr": "s:SS"
                          }
                        ]
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Metatype",
                        "printedName": "NEKit.DomainListRule.MatchCriterion.Type",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "MatchCriterion",
                            "printedName": "NEKit.DomainListRule.MatchCriterion",
                            "usr": "s:5NEKit14DomainListRuleC14MatchCriterionO"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "declKind": "EnumElement",
                "usr": "s:5NEKit14DomainListRuleC14MatchCriterionO7keywordyAESScAEmF",
                "mangledName": "$s5NEKit14DomainListRuleC14MatchCriterionO7keywordyAESScAEmF",
                "moduleName": "NEKit"
              },
              {
                "kind": "Var",
                "name": "complete",
                "printedName": "complete",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(NEKit.DomainListRule.MatchCriterion.Type) -> (Swift.String) -> NEKit.DomainListRule.MatchCriterion",
                    "children": [
                      {
                        "kind": "TypeFunc",
                        "name": "Function",
                        "printedName": "(Swift.String) -> NEKit.DomainListRule.MatchCriterion",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "MatchCriterion",
                            "printedName": "NEKit.DomainListRule.MatchCriterion",
                            "usr": "s:5NEKit14DomainListRuleC14MatchCriterionO"
                          },
                          {
                            "kind": "TypeNominal",
                            "name": "String",
                            "printedName": "Swift.String",
                            "usr": "s:SS"
                          }
                        ]
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Metatype",
                        "printedName": "NEKit.DomainListRule.MatchCriterion.Type",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "MatchCriterion",
                            "printedName": "NEKit.DomainListRule.MatchCriterion",
                            "usr": "s:5NEKit14DomainListRuleC14MatchCriterionO"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "declKind": "EnumElement",
                "usr": "s:5NEKit14DomainListRuleC14MatchCriterionO8completeyAESScAEmF",
                "mangledName": "$s5NEKit14DomainListRuleC14MatchCriterionO8completeyAESScAEmF",
                "moduleName": "NEKit"
              }
            ],
            "declKind": "Enum",
            "usr": "s:5NEKit14DomainListRuleC14MatchCriterionO",
            "mangledName": "$s5NEKit14DomainListRuleC14MatchCriterionO",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ]
          },
          {
            "kind": "Var",
            "name": "description",
            "printedName": "description",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit14DomainListRuleC11descriptionSSvp",
            "mangledName": "$s5NEKit14DomainListRuleC11descriptionSSvp",
            "moduleName": "NEKit",
            "overriding": true,
            "isOpen": true,
            "declAttributes": [
              "Override",
              "AccessControl"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit14DomainListRuleC11descriptionSSvg",
                "mangledName": "$s5NEKit14DomainListRuleC11descriptionSSvg",
                "moduleName": "NEKit",
                "overriding": true,
                "isOpen": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "matchCriteria",
            "printedName": "matchCriteria",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Array",
                "printedName": "[NEKit.DomainListRule.MatchCriterion]",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "MatchCriterion",
                    "printedName": "NEKit.DomainListRule.MatchCriterion",
                    "usr": "s:5NEKit14DomainListRuleC14MatchCriterionO"
                  }
                ],
                "usr": "s:Sa"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit14DomainListRuleC13matchCriteriaSayAC14MatchCriterionOGvp",
            "mangledName": "$s5NEKit14DomainListRuleC13matchCriteriaSayAC14MatchCriterionOGvp",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "HasInitialValue",
              "HasStorage",
              "AccessControl",
              "RawDocComment"
            ],
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Array",
                    "printedName": "[NEKit.DomainListRule.MatchCriterion]",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "MatchCriterion",
                        "printedName": "NEKit.DomainListRule.MatchCriterion",
                        "usr": "s:5NEKit14DomainListRuleC14MatchCriterionO"
                      }
                    ],
                    "usr": "s:Sa"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit14DomainListRuleC13matchCriteriaSayAC14MatchCriterionOGvg",
                "mangledName": "$s5NEKit14DomainListRuleC13matchCriteriaSayAC14MatchCriterionOGvg",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Array",
                    "printedName": "[NEKit.DomainListRule.MatchCriterion]",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "MatchCriterion",
                        "printedName": "NEKit.DomainListRule.MatchCriterion",
                        "usr": "s:5NEKit14DomainListRuleC14MatchCriterionO"
                      }
                    ],
                    "usr": "s:Sa"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit14DomainListRuleC13matchCriteriaSayAC14MatchCriterionOGvs",
                "mangledName": "$s5NEKit14DomainListRuleC13matchCriteriaSayAC14MatchCriterionOGvs",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit14DomainListRuleC13matchCriteriaSayAC14MatchCriterionOGvM",
                "mangledName": "$s5NEKit14DomainListRuleC13matchCriteriaSayAC14MatchCriterionOGvM",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(adapterFactory:criteria:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "DomainListRule",
                "printedName": "NEKit.DomainListRule",
                "usr": "s:5NEKit14DomainListRuleC"
              },
              {
                "kind": "TypeNominal",
                "name": "AdapterFactory",
                "printedName": "NEKit.AdapterFactory",
                "usr": "s:5NEKit14AdapterFactoryC"
              },
              {
                "kind": "TypeNominal",
                "name": "Array",
                "printedName": "[NEKit.DomainListRule.MatchCriterion]",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "MatchCriterion",
                    "printedName": "NEKit.DomainListRule.MatchCriterion",
                    "usr": "s:5NEKit14DomainListRuleC14MatchCriterionO"
                  }
                ],
                "usr": "s:Sa"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit14DomainListRuleC14adapterFactory8criteriaAcA07AdapterF0C_SayAC14MatchCriterionOGtcfc",
            "mangledName": "$s5NEKit14DomainListRuleC14adapterFactory8criteriaAcA07AdapterF0C_SayAC14MatchCriterionOGtcfc",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "init_kind": "Designated"
          },
          {
            "kind": "Function",
            "name": "matchDNS",
            "printedName": "matchDNS(_:type:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "DNSSessionMatchResult",
                "printedName": "NEKit.DNSSessionMatchResult",
                "usr": "s:5NEKit21DNSSessionMatchResultO"
              },
              {
                "kind": "TypeNominal",
                "name": "DNSSession",
                "printedName": "NEKit.DNSSession",
                "usr": "s:5NEKit10DNSSessionC"
              },
              {
                "kind": "TypeNominal",
                "name": "DNSSessionMatchType",
                "printedName": "NEKit.DNSSessionMatchType",
                "usr": "s:5NEKit19DNSSessionMatchTypeO"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit14DomainListRuleC8matchDNS_4typeAA21DNSSessionMatchResultOAA0H0C_AA0hI4TypeOtF",
            "mangledName": "$s5NEKit14DomainListRuleC8matchDNS_4typeAA21DNSSessionMatchResultOAA0H0C_AA0hI4TypeOtF",
            "moduleName": "NEKit",
            "overriding": true,
            "isOpen": true,
            "declAttributes": [
              "AccessControl",
              "Override",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "match",
            "printedName": "match(_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "NEKit.AdapterFactory?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "AdapterFactory",
                    "printedName": "NEKit.AdapterFactory",
                    "usr": "s:5NEKit14AdapterFactoryC"
                  }
                ],
                "usr": "s:Sq"
              },
              {
                "kind": "TypeNominal",
                "name": "ConnectSession",
                "printedName": "NEKit.ConnectSession",
                "usr": "s:5NEKit14ConnectSessionC"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit14DomainListRuleC5matchyAA14AdapterFactoryCSgAA14ConnectSessionCF",
            "mangledName": "$s5NEKit14DomainListRuleC5matchyAA14AdapterFactoryCSgAA14ConnectSessionCF",
            "moduleName": "NEKit",
            "overriding": true,
            "isOpen": true,
            "declAttributes": [
              "AccessControl",
              "Override",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "DomainListRule",
                "printedName": "NEKit.DomainListRule",
                "usr": "s:5NEKit14DomainListRuleC"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit14DomainListRuleCACycfc",
            "mangledName": "$s5NEKit14DomainListRuleCACycfc",
            "moduleName": "NEKit",
            "overriding": true,
            "implicit": true,
            "declAttributes": [
              "Override"
            ],
            "init_kind": "Designated"
          }
        ],
        "declKind": "Class",
        "usr": "s:5NEKit14DomainListRuleC",
        "mangledName": "$s5NEKit14DomainListRuleC",
        "moduleName": "NEKit",
        "isOpen": true,
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "superclassUsr": "s:5NEKit4RuleC",
        "superclassNames": [
          "NEKit.Rule"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          }
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "TypeDecl",
        "name": "DNSResolverProtocol",
        "printedName": "DNSResolverProtocol",
        "children": [
          {
            "kind": "Var",
            "name": "delegate",
            "printedName": "delegate",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "NEKit.DNSResolverDelegate?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSResolverDelegate",
                    "printedName": "NEKit.DNSResolverDelegate",
                    "usr": "s:5NEKit19DNSResolverDelegateP"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit19DNSResolverProtocolP8delegateAA0B8Delegate_pSgvp",
            "mangledName": "$s5NEKit19DNSResolverProtocolP8delegateAA0B8Delegate_pSgvp",
            "moduleName": "NEKit",
            "protocolReq": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "NEKit.DNSResolverDelegate?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSResolverDelegate",
                        "printedName": "NEKit.DNSResolverDelegate",
                        "usr": "s:5NEKit19DNSResolverDelegateP"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit19DNSResolverProtocolP8delegateAA0B8Delegate_pSgvg",
                "mangledName": "$s5NEKit19DNSResolverProtocolP8delegateAA0B8Delegate_pSgvg",
                "moduleName": "NEKit",
                "genericSig": "<τ_0_0 where τ_0_0 : NEKit.DNSResolverProtocol>",
                "sugared_genericSig": "<Self where Self : NEKit.DNSResolverProtocol>",
                "protocolReq": true,
                "reqNewWitnessTableEntry": true,
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "NEKit.DNSResolverDelegate?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSResolverDelegate",
                        "printedName": "NEKit.DNSResolverDelegate",
                        "usr": "s:5NEKit19DNSResolverDelegateP"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit19DNSResolverProtocolP8delegateAA0B8Delegate_pSgvs",
                "mangledName": "$s5NEKit19DNSResolverProtocolP8delegateAA0B8Delegate_pSgvs",
                "moduleName": "NEKit",
                "genericSig": "<τ_0_0 where τ_0_0 : NEKit.DNSResolverProtocol>",
                "sugared_genericSig": "<Self where Self : NEKit.DNSResolverProtocol>",
                "protocolReq": true,
                "reqNewWitnessTableEntry": true,
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit19DNSResolverProtocolP8delegateAA0B8Delegate_pSgvM",
                "mangledName": "$s5NEKit19DNSResolverProtocolP8delegateAA0B8Delegate_pSgvM",
                "moduleName": "NEKit",
                "genericSig": "<τ_0_0 where τ_0_0 : NEKit.DNSResolverProtocol>",
                "sugared_genericSig": "<Self where Self : NEKit.DNSResolverProtocol>",
                "protocolReq": true,
                "implicit": true,
                "reqNewWitnessTableEntry": true,
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Function",
            "name": "resolve",
            "printedName": "resolve(session:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "DNSSession",
                "printedName": "NEKit.DNSSession",
                "usr": "s:5NEKit10DNSSessionC"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit19DNSResolverProtocolP7resolve7sessionyAA10DNSSessionC_tF",
            "mangledName": "$s5NEKit19DNSResolverProtocolP7resolve7sessionyAA10DNSSessionC_tF",
            "moduleName": "NEKit",
            "genericSig": "<τ_0_0 where τ_0_0 : NEKit.DNSResolverProtocol>",
            "sugared_genericSig": "<Self where Self : NEKit.DNSResolverProtocol>",
            "protocolReq": true,
            "reqNewWitnessTableEntry": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "stop",
            "printedName": "stop()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit19DNSResolverProtocolP4stopyyF",
            "mangledName": "$s5NEKit19DNSResolverProtocolP4stopyyF",
            "moduleName": "NEKit",
            "genericSig": "<τ_0_0 where τ_0_0 : NEKit.DNSResolverProtocol>",
            "sugared_genericSig": "<Self where Self : NEKit.DNSResolverProtocol>",
            "protocolReq": true,
            "reqNewWitnessTableEntry": true,
            "funcSelfKind": "NonMutating"
          }
        ],
        "declKind": "Protocol",
        "usr": "s:5NEKit19DNSResolverProtocolP",
        "mangledName": "$s5NEKit19DNSResolverProtocolP",
        "moduleName": "NEKit",
        "genericSig": "<τ_0_0 : AnyObject>",
        "sugared_genericSig": "<Self : AnyObject>",
        "declAttributes": [
          "AccessControl"
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "DNSResolverDelegate",
        "printedName": "DNSResolverDelegate",
        "children": [
          {
            "kind": "Function",
            "name": "didReceive",
            "printedName": "didReceive(rawResponse:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit19DNSResolverDelegateP10didReceive11rawResponsey10Foundation4DataV_tF",
            "mangledName": "$s5NEKit19DNSResolverDelegateP10didReceive11rawResponsey10Foundation4DataV_tF",
            "moduleName": "NEKit",
            "genericSig": "<τ_0_0 where τ_0_0 : NEKit.DNSResolverDelegate>",
            "sugared_genericSig": "<Self where Self : NEKit.DNSResolverDelegate>",
            "protocolReq": true,
            "reqNewWitnessTableEntry": true,
            "funcSelfKind": "NonMutating"
          }
        ],
        "declKind": "Protocol",
        "usr": "s:5NEKit19DNSResolverDelegateP",
        "mangledName": "$s5NEKit19DNSResolverDelegateP",
        "moduleName": "NEKit",
        "genericSig": "<τ_0_0 : AnyObject>",
        "sugared_genericSig": "<Self : AnyObject>",
        "declAttributes": [
          "AccessControl"
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "UDPDNSResolver",
        "printedName": "UDPDNSResolver",
        "children": [
          {
            "kind": "Var",
            "name": "delegate",
            "printedName": "delegate",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "WeakStorage",
                "printedName": "NEKit.DNSResolverDelegate?"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit14UDPDNSResolverC8delegateAA19DNSResolverDelegate_pSgvp",
            "mangledName": "$s5NEKit14UDPDNSResolverC8delegateAA19DNSResolverDelegate_pSgvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "HasInitialValue",
              "HasStorage",
              "ReferenceOwnership",
              "AccessControl"
            ],
            "ownership": 1,
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "NEKit.DNSResolverDelegate?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSResolverDelegate",
                        "printedName": "NEKit.DNSResolverDelegate",
                        "usr": "s:5NEKit19DNSResolverDelegateP"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit14UDPDNSResolverC8delegateAA19DNSResolverDelegate_pSgvg",
                "mangledName": "$s5NEKit14UDPDNSResolverC8delegateAA19DNSResolverDelegate_pSgvg",
                "moduleName": "NEKit",
                "implicit": true,
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "NEKit.DNSResolverDelegate?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSResolverDelegate",
                        "printedName": "NEKit.DNSResolverDelegate",
                        "usr": "s:5NEKit19DNSResolverDelegateP"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit14UDPDNSResolverC8delegateAA19DNSResolverDelegate_pSgvs",
                "mangledName": "$s5NEKit14UDPDNSResolverC8delegateAA19DNSResolverDelegate_pSgvs",
                "moduleName": "NEKit",
                "implicit": true,
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit14UDPDNSResolverC8delegateAA19DNSResolverDelegate_pSgvM",
                "mangledName": "$s5NEKit14UDPDNSResolverC8delegateAA19DNSResolverDelegate_pSgvM",
                "moduleName": "NEKit",
                "implicit": true,
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(address:port:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "UDPDNSResolver",
                "printedName": "NEKit.UDPDNSResolver",
                "usr": "s:5NEKit14UDPDNSResolverC"
              },
              {
                "kind": "TypeNominal",
                "name": "IPAddress",
                "printedName": "NEKit.IPAddress",
                "usr": "s:5NEKit9IPAddressC"
              },
              {
                "kind": "TypeNominal",
                "name": "Port",
                "printedName": "NEKit.Port",
                "usr": "s:5NEKit4PortV"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit14UDPDNSResolverC7address4portAcA9IPAddressC_AA4PortVtcfc",
            "mangledName": "$s5NEKit14UDPDNSResolverC7address4portAcA9IPAddressC_AA4PortVtcfc",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "init_kind": "Designated"
          },
          {
            "kind": "Function",
            "name": "resolve",
            "printedName": "resolve(session:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "DNSSession",
                "printedName": "NEKit.DNSSession",
                "usr": "s:5NEKit10DNSSessionC"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit14UDPDNSResolverC7resolve7sessionyAA10DNSSessionC_tF",
            "mangledName": "$s5NEKit14UDPDNSResolverC7resolve7sessionyAA10DNSSessionC_tF",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "stop",
            "printedName": "stop()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit14UDPDNSResolverC4stopyyF",
            "mangledName": "$s5NEKit14UDPDNSResolverC4stopyyF",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "didReceive",
            "printedName": "didReceive(data:from:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              },
              {
                "kind": "TypeNominal",
                "name": "NWUDPSocket",
                "printedName": "NEKit.NWUDPSocket",
                "usr": "c:@M@NEKit@objc(cs)NWUDPSocket"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit14UDPDNSResolverC10didReceive4data4fromy10Foundation4DataV_AA11NWUDPSocketCtF",
            "mangledName": "$s5NEKit14UDPDNSResolverC10didReceive4data4fromy10Foundation4DataV_AA11NWUDPSocketCtF",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "didCancel",
            "printedName": "didCancel(socket:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "NWUDPSocket",
                "printedName": "NEKit.NWUDPSocket",
                "usr": "c:@M@NEKit@objc(cs)NWUDPSocket"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit14UDPDNSResolverC9didCancel6socketyAA11NWUDPSocketC_tF",
            "mangledName": "$s5NEKit14UDPDNSResolverC9didCancel6socketyAA11NWUDPSocketC_tF",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "funcSelfKind": "NonMutating"
          }
        ],
        "declKind": "Class",
        "usr": "s:5NEKit14UDPDNSResolverC",
        "mangledName": "$s5NEKit14UDPDNSResolverC",
        "moduleName": "NEKit",
        "isOpen": true,
        "declAttributes": [
          "AccessControl"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "DNSResolverProtocol",
            "printedName": "DNSResolverProtocol",
            "usr": "s:5NEKit19DNSResolverProtocolP",
            "mangledName": "$s5NEKit19DNSResolverProtocolP"
          },
          {
            "kind": "Conformance",
            "name": "NWUDPSocketDelegate",
            "printedName": "NWUDPSocketDelegate",
            "usr": "s:5NEKit19NWUDPSocketDelegateP",
            "mangledName": "$s5NEKit19NWUDPSocketDelegateP"
          }
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "TypeDecl",
        "name": "ServerAdapterFactory",
        "printedName": "ServerAdapterFactory",
        "children": [
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(serverHost:serverPort:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "ServerAdapterFactory",
                "printedName": "NEKit.ServerAdapterFactory",
                "usr": "s:5NEKit20ServerAdapterFactoryC"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              },
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit20ServerAdapterFactoryC10serverHost0E4PortACSS_Sitcfc",
            "mangledName": "$s5NEKit20ServerAdapterFactoryC10serverHost0E4PortACSS_Sitcfc",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "init_kind": "Designated"
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "ServerAdapterFactory",
                "printedName": "NEKit.ServerAdapterFactory",
                "usr": "s:5NEKit20ServerAdapterFactoryC"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit20ServerAdapterFactoryCACycfc",
            "mangledName": "$s5NEKit20ServerAdapterFactoryCACycfc",
            "moduleName": "NEKit",
            "overriding": true,
            "implicit": true,
            "declAttributes": [
              "Override"
            ],
            "init_kind": "Designated"
          }
        ],
        "declKind": "Class",
        "usr": "s:5NEKit20ServerAdapterFactoryC",
        "mangledName": "$s5NEKit20ServerAdapterFactoryC",
        "moduleName": "NEKit",
        "isOpen": true,
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "superclassUsr": "s:5NEKit14AdapterFactoryC",
        "superclassNames": [
          "NEKit.AdapterFactory"
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "TypeDecl",
        "name": "Box",
        "printedName": "Box",
        "children": [
          {
            "kind": "Var",
            "name": "value",
            "printedName": "value",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit3BoxC5valuexvp",
            "mangledName": "$s5NEKit3BoxC5valuexvp",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "HasStorage",
              "AccessControl",
              "RawDocComment"
            ],
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit3BoxC5valuexvg",
                "mangledName": "$s5NEKit3BoxC5valuexvg",
                "moduleName": "NEKit",
                "genericSig": "<τ_0_0>",
                "sugared_genericSig": "<T>",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit3BoxC5valuexvs",
                "mangledName": "$s5NEKit3BoxC5valuexvs",
                "moduleName": "NEKit",
                "genericSig": "<τ_0_0>",
                "sugared_genericSig": "<T>",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit3BoxC5valuexvM",
                "mangledName": "$s5NEKit3BoxC5valuexvM",
                "moduleName": "NEKit",
                "genericSig": "<τ_0_0>",
                "sugared_genericSig": "<T>",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "_modify"
              }
            ]
          }
        ],
        "declKind": "Class",
        "usr": "s:5NEKit3BoxC",
        "mangledName": "$s5NEKit3BoxC",
        "moduleName": "NEKit",
        "genericSig": "<τ_0_0>",
        "sugared_genericSig": "<T>",
        "isOpen": true,
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "hasMissingDesignatedInitializers": true
      },
      {
        "kind": "TypeDecl",
        "name": "Atomic",
        "printedName": "Atomic",
        "children": [
          {
            "kind": "Var",
            "name": "value",
            "printedName": "value",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit6AtomicC5valuexvp",
            "mangledName": "$s5NEKit6AtomicC5valuexvp",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit6AtomicC5valuexvg",
                "mangledName": "$s5NEKit6AtomicC5valuexvg",
                "moduleName": "NEKit",
                "genericSig": "<τ_0_0>",
                "sugared_genericSig": "<T>",
                "isOpen": true,
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit6AtomicC5valuexvs",
                "mangledName": "$s5NEKit6AtomicC5valuexvs",
                "moduleName": "NEKit",
                "genericSig": "<τ_0_0>",
                "sugared_genericSig": "<T>",
                "isOpen": true,
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit6AtomicC5valuexvM",
                "mangledName": "$s5NEKit6AtomicC5valuexvM",
                "moduleName": "NEKit",
                "genericSig": "<τ_0_0>",
                "sugared_genericSig": "<T>",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Atomic",
                "printedName": "NEKit.Atomic<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:5NEKit6AtomicC"
              },
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit6AtomicCyACyxGxcfc",
            "mangledName": "$s5NEKit6AtomicCyACyxGxcfc",
            "moduleName": "NEKit",
            "genericSig": "<τ_0_0>",
            "sugared_genericSig": "<T>",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "init_kind": "Designated"
          },
          {
            "kind": "Function",
            "name": "withBox",
            "printedName": "withBox(_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_1_0"
              },
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.Box<τ_0_0>) -> τ_1_0",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_1_0"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Box",
                    "printedName": "NEKit.Box<τ_0_0>",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "GenericTypeParam",
                        "printedName": "τ_0_0"
                      }
                    ],
                    "usr": "s:5NEKit3BoxC"
                  }
                ],
                "typeAttributes": [
                  "noescape"
                ]
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit6AtomicC7withBoxyqd__qd__AA0D0CyxGXElF",
            "mangledName": "$s5NEKit6AtomicC7withBoxyqd__qd__AA0D0CyxGXElF",
            "moduleName": "NEKit",
            "genericSig": "<τ_0_0, τ_1_0>",
            "sugared_genericSig": "<T, U>",
            "isOpen": true,
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          }
        ],
        "declKind": "Class",
        "usr": "s:5NEKit6AtomicC",
        "mangledName": "$s5NEKit6AtomicC",
        "moduleName": "NEKit",
        "genericSig": "<τ_0_0>",
        "sugared_genericSig": "<T>",
        "isOpen": true,
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "UInt128Errors",
        "printedName": "UInt128Errors",
        "children": [
          {
            "kind": "Var",
            "name": "invalidString",
            "printedName": "invalidString",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.UInt128Errors.Type) -> NEKit.UInt128Errors",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt128Errors",
                    "printedName": "NEKit.UInt128Errors",
                    "usr": "s:5NEKit13UInt128ErrorsO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.UInt128Errors.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "UInt128Errors",
                        "printedName": "NEKit.UInt128Errors",
                        "usr": "s:5NEKit13UInt128ErrorsO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit13UInt128ErrorsO13invalidStringyA2CmF",
            "mangledName": "$s5NEKit13UInt128ErrorsO13invalidStringyA2CmF",
            "moduleName": "NEKit",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Function",
            "name": "==",
            "printedName": "==(_:_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              },
              {
                "kind": "TypeNominal",
                "name": "UInt128Errors",
                "printedName": "NEKit.UInt128Errors",
                "usr": "s:5NEKit13UInt128ErrorsO"
              },
              {
                "kind": "TypeNominal",
                "name": "UInt128Errors",
                "printedName": "NEKit.UInt128Errors",
                "usr": "s:5NEKit13UInt128ErrorsO"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit13UInt128ErrorsO2eeoiySbAC_ACtFZ",
            "mangledName": "$s5NEKit13UInt128ErrorsO2eeoiySbAC_ACtFZ",
            "moduleName": "NEKit",
            "static": true,
            "implicit": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Var",
            "name": "hashValue",
            "printedName": "hashValue",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit13UInt128ErrorsO9hashValueSivp",
            "mangledName": "$s5NEKit13UInt128ErrorsO9hashValueSivp",
            "moduleName": "NEKit",
            "implicit": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit13UInt128ErrorsO9hashValueSivg",
                "mangledName": "$s5NEKit13UInt128ErrorsO9hashValueSivg",
                "moduleName": "NEKit",
                "implicit": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Function",
            "name": "hash",
            "printedName": "hash(into:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Hasher",
                "printedName": "Swift.Hasher",
                "paramValueOwnership": "InOut",
                "usr": "s:s6HasherV"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit13UInt128ErrorsO4hash4intoys6HasherVz_tF",
            "mangledName": "$s5NEKit13UInt128ErrorsO4hash4intoys6HasherVz_tF",
            "moduleName": "NEKit",
            "implicit": true,
            "funcSelfKind": "NonMutating"
          }
        ],
        "declKind": "Enum",
        "usr": "s:5NEKit13UInt128ErrorsO",
        "mangledName": "$s5NEKit13UInt128ErrorsO",
        "moduleName": "NEKit",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "Error",
            "printedName": "Error",
            "usr": "s:s5ErrorP",
            "mangledName": "$ss5ErrorP"
          },
          {
            "kind": "Conformance",
            "name": "Sendable",
            "printedName": "Sendable",
            "usr": "s:s8SendableP",
            "mangledName": "$ss8SendableP"
          }
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "UInt128",
        "printedName": "UInt128",
        "children": [
          {
            "kind": "Var",
            "name": "significantBits",
            "printedName": "significantBits",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "UInt128",
                "printedName": "NEKit.UInt128",
                "usr": "s:5NEKit7UInt128V"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit7UInt128V15significantBitsACvp",
            "mangledName": "$s5NEKit7UInt128V15significantBitsACvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt128",
                    "printedName": "NEKit.UInt128",
                    "usr": "s:5NEKit7UInt128V"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit7UInt128V15significantBitsACvg",
                "mangledName": "$s5NEKit7UInt128V15significantBitsACvg",
                "moduleName": "NEKit",
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(upperBits:lowerBits:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "UInt128",
                "printedName": "NEKit.UInt128",
                "usr": "s:5NEKit7UInt128V"
              },
              {
                "kind": "TypeNominal",
                "name": "UInt64",
                "printedName": "Swift.UInt64",
                "usr": "s:s6UInt64V"
              },
              {
                "kind": "TypeNominal",
                "name": "UInt64",
                "printedName": "Swift.UInt64",
                "usr": "s:s6UInt64V"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit7UInt128V9upperBits05lowerD0ACs6UInt64V_AGtcfc",
            "mangledName": "$s5NEKit7UInt128V9upperBits05lowerD0ACs6UInt64V_AGtcfc",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "init_kind": "Designated"
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "UInt128",
                "printedName": "NEKit.UInt128",
                "usr": "s:5NEKit7UInt128V"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit7UInt128VACycfc",
            "mangledName": "$s5NEKit7UInt128VACycfc",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "init_kind": "Designated"
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "UInt128",
                "printedName": "NEKit.UInt128",
                "usr": "s:5NEKit7UInt128V"
              },
              {
                "kind": "TypeNominal",
                "name": "UInt128",
                "printedName": "NEKit.UInt128",
                "usr": "s:5NEKit7UInt128V"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit7UInt128VyA2Ccfc",
            "mangledName": "$s5NEKit7UInt128VyA2Ccfc",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "init_kind": "Designated"
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "UInt128",
                "printedName": "NEKit.UInt128",
                "usr": "s:5NEKit7UInt128V"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit7UInt128VyACSSKcfc",
            "mangledName": "$s5NEKit7UInt128VyACSSKcfc",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "throwing": true,
            "init_kind": "Designated"
          },
          {
            "kind": "Var",
            "name": "bitWidth",
            "printedName": "bitWidth",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit7UInt128V8bitWidthSivpZ",
            "mangledName": "$s5NEKit7UInt128V8bitWidthSivpZ",
            "moduleName": "NEKit",
            "static": true,
            "declAttributes": [
              "AccessControl"
            ],
            "isFromExtension": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit7UInt128V8bitWidthSivgZ",
                "mangledName": "$s5NEKit7UInt128V8bitWidthSivgZ",
                "moduleName": "NEKit",
                "static": true,
                "isFromExtension": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "nonzeroBitCount",
            "printedName": "nonzeroBitCount",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit7UInt128V15nonzeroBitCountSivp",
            "mangledName": "$s5NEKit7UInt128V15nonzeroBitCountSivp",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "isFromExtension": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit7UInt128V15nonzeroBitCountSivg",
                "mangledName": "$s5NEKit7UInt128V15nonzeroBitCountSivg",
                "moduleName": "NEKit",
                "isFromExtension": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "leadingZeroBitCount",
            "printedName": "leadingZeroBitCount",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit7UInt128V19leadingZeroBitCountSivp",
            "mangledName": "$s5NEKit7UInt128V19leadingZeroBitCountSivp",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "isFromExtension": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit7UInt128V19leadingZeroBitCountSivg",
                "mangledName": "$s5NEKit7UInt128V19leadingZeroBitCountSivg",
                "moduleName": "NEKit",
                "isFromExtension": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "bigEndian",
            "printedName": "bigEndian",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "UInt128",
                "printedName": "NEKit.UInt128",
                "usr": "s:5NEKit7UInt128V"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit7UInt128V9bigEndianACvp",
            "mangledName": "$s5NEKit7UInt128V9bigEndianACvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "isFromExtension": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt128",
                    "printedName": "NEKit.UInt128",
                    "usr": "s:5NEKit7UInt128V"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit7UInt128V9bigEndianACvg",
                "mangledName": "$s5NEKit7UInt128V9bigEndianACvg",
                "moduleName": "NEKit",
                "isFromExtension": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "littleEndian",
            "printedName": "littleEndian",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "UInt128",
                "printedName": "NEKit.UInt128",
                "usr": "s:5NEKit7UInt128V"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit7UInt128V12littleEndianACvp",
            "mangledName": "$s5NEKit7UInt128V12littleEndianACvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "isFromExtension": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt128",
                    "printedName": "NEKit.UInt128",
                    "usr": "s:5NEKit7UInt128V"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit7UInt128V12littleEndianACvg",
                "mangledName": "$s5NEKit7UInt128V12littleEndianACvg",
                "moduleName": "NEKit",
                "isFromExtension": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "byteSwapped",
            "printedName": "byteSwapped",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "UInt128",
                "printedName": "NEKit.UInt128",
                "usr": "s:5NEKit7UInt128V"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit7UInt128V11byteSwappedACvp",
            "mangledName": "$s5NEKit7UInt128V11byteSwappedACvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "isFromExtension": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt128",
                    "printedName": "NEKit.UInt128",
                    "usr": "s:5NEKit7UInt128V"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit7UInt128V11byteSwappedACvg",
                "mangledName": "$s5NEKit7UInt128V11byteSwappedACvg",
                "moduleName": "NEKit",
                "isFromExtension": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(_truncatingBits:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "UInt128",
                "printedName": "NEKit.UInt128",
                "usr": "s:5NEKit7UInt128V"
              },
              {
                "kind": "TypeNominal",
                "name": "UInt",
                "printedName": "Swift.UInt",
                "usr": "s:Su"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit7UInt128V15_truncatingBitsACSu_tcfc",
            "mangledName": "$s5NEKit7UInt128V15_truncatingBitsACSu_tcfc",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "isFromExtension": true,
            "init_kind": "Designated"
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(bigEndian:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "UInt128",
                "printedName": "NEKit.UInt128",
                "usr": "s:5NEKit7UInt128V"
              },
              {
                "kind": "TypeNominal",
                "name": "UInt128",
                "printedName": "NEKit.UInt128",
                "usr": "s:5NEKit7UInt128V"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit7UInt128V9bigEndianA2C_tcfc",
            "mangledName": "$s5NEKit7UInt128V9bigEndianA2C_tcfc",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "isFromExtension": true,
            "init_kind": "Designated"
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(littleEndian:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "UInt128",
                "printedName": "NEKit.UInt128",
                "usr": "s:5NEKit7UInt128V"
              },
              {
                "kind": "TypeNominal",
                "name": "UInt128",
                "printedName": "NEKit.UInt128",
                "usr": "s:5NEKit7UInt128V"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit7UInt128V12littleEndianA2C_tcfc",
            "mangledName": "$s5NEKit7UInt128V12littleEndianA2C_tcfc",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "isFromExtension": true,
            "init_kind": "Designated"
          },
          {
            "kind": "Function",
            "name": "addingReportingOverflow",
            "printedName": "addingReportingOverflow(_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Tuple",
                "printedName": "(partialValue: NEKit.UInt128, overflow: Swift.Bool)",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt128",
                    "printedName": "NEKit.UInt128",
                    "usr": "s:5NEKit7UInt128V"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Bool",
                    "printedName": "Swift.Bool",
                    "usr": "s:Sb"
                  }
                ]
              },
              {
                "kind": "TypeNominal",
                "name": "UInt128",
                "printedName": "NEKit.UInt128",
                "usr": "s:5NEKit7UInt128V"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit7UInt128V23addingReportingOverflowyAC12partialValue_Sb8overflowtACF",
            "mangledName": "$s5NEKit7UInt128V23addingReportingOverflowyAC12partialValue_Sb8overflowtACF",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "subtractingReportingOverflow",
            "printedName": "subtractingReportingOverflow(_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Tuple",
                "printedName": "(partialValue: NEKit.UInt128, overflow: Swift.Bool)",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt128",
                    "printedName": "NEKit.UInt128",
                    "usr": "s:5NEKit7UInt128V"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Bool",
                    "printedName": "Swift.Bool",
                    "usr": "s:Sb"
                  }
                ]
              },
              {
                "kind": "TypeNominal",
                "name": "UInt128",
                "printedName": "NEKit.UInt128",
                "usr": "s:5NEKit7UInt128V"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit7UInt128V28subtractingReportingOverflowyAC12partialValue_Sb8overflowtACF",
            "mangledName": "$s5NEKit7UInt128V28subtractingReportingOverflowyAC12partialValue_Sb8overflowtACF",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "multipliedReportingOverflow",
            "printedName": "multipliedReportingOverflow(by:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Tuple",
                "printedName": "(partialValue: NEKit.UInt128, overflow: Swift.Bool)",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt128",
                    "printedName": "NEKit.UInt128",
                    "usr": "s:5NEKit7UInt128V"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Bool",
                    "printedName": "Swift.Bool",
                    "usr": "s:Sb"
                  }
                ]
              },
              {
                "kind": "TypeNominal",
                "name": "UInt128",
                "printedName": "NEKit.UInt128",
                "usr": "s:5NEKit7UInt128V"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit7UInt128V27multipliedReportingOverflow2byAC12partialValue_Sb8overflowtAC_tF",
            "mangledName": "$s5NEKit7UInt128V27multipliedReportingOverflow2byAC12partialValue_Sb8overflowtAC_tF",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "multipliedFullWidth",
            "printedName": "multipliedFullWidth(by:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Tuple",
                "printedName": "(high: NEKit.UInt128, low: NEKit.UInt128)",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt128",
                    "printedName": "NEKit.UInt128",
                    "usr": "s:5NEKit7UInt128V"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "UInt128",
                    "printedName": "NEKit.UInt128",
                    "usr": "s:5NEKit7UInt128V"
                  }
                ]
              },
              {
                "kind": "TypeNominal",
                "name": "UInt128",
                "printedName": "NEKit.UInt128",
                "usr": "s:5NEKit7UInt128V"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit7UInt128V19multipliedFullWidth2byAC4high_AC3lowtAC_tF",
            "mangledName": "$s5NEKit7UInt128V19multipliedFullWidth2byAC4high_AC3lowtAC_tF",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "dividedReportingOverflow",
            "printedName": "dividedReportingOverflow(by:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Tuple",
                "printedName": "(partialValue: NEKit.UInt128, overflow: Swift.Bool)",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt128",
                    "printedName": "NEKit.UInt128",
                    "usr": "s:5NEKit7UInt128V"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Bool",
                    "printedName": "Swift.Bool",
                    "usr": "s:Sb"
                  }
                ]
              },
              {
                "kind": "TypeNominal",
                "name": "UInt128",
                "printedName": "NEKit.UInt128",
                "usr": "s:5NEKit7UInt128V"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit7UInt128V24dividedReportingOverflow2byAC12partialValue_Sb8overflowtAC_tF",
            "mangledName": "$s5NEKit7UInt128V24dividedReportingOverflow2byAC12partialValue_Sb8overflowtAC_tF",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "dividingFullWidth",
            "printedName": "dividingFullWidth(_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Tuple",
                "printedName": "(quotient: NEKit.UInt128, remainder: NEKit.UInt128)",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt128",
                    "printedName": "NEKit.UInt128",
                    "usr": "s:5NEKit7UInt128V"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "UInt128",
                    "printedName": "NEKit.UInt128",
                    "usr": "s:5NEKit7UInt128V"
                  }
                ]
              },
              {
                "kind": "TypeNominal",
                "name": "Tuple",
                "printedName": "(high: NEKit.UInt128, low: NEKit.UInt128)",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt128",
                    "printedName": "NEKit.UInt128",
                    "usr": "s:5NEKit7UInt128V"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "UInt128",
                    "printedName": "NEKit.UInt128",
                    "usr": "s:5NEKit7UInt128V"
                  }
                ]
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit7UInt128V17dividingFullWidthyAC8quotient_AC9remaindertAC4high_AC3lowt_tF",
            "mangledName": "$s5NEKit7UInt128V17dividingFullWidthyAC8quotient_AC9remaindertAC4high_AC3lowt_tF",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "remainderReportingOverflow",
            "printedName": "remainderReportingOverflow(dividingBy:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Tuple",
                "printedName": "(partialValue: NEKit.UInt128, overflow: Swift.Bool)",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt128",
                    "printedName": "NEKit.UInt128",
                    "usr": "s:5NEKit7UInt128V"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Bool",
                    "printedName": "Swift.Bool",
                    "usr": "s:Sb"
                  }
                ]
              },
              {
                "kind": "TypeNominal",
                "name": "UInt128",
                "printedName": "NEKit.UInt128",
                "usr": "s:5NEKit7UInt128V"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit7UInt128V26remainderReportingOverflow10dividingByAC12partialValue_Sb8overflowtAC_tF",
            "mangledName": "$s5NEKit7UInt128V26remainderReportingOverflow10dividingByAC12partialValue_Sb8overflowtAC_tF",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "quotientAndRemainder",
            "printedName": "quotientAndRemainder(dividingBy:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Tuple",
                "printedName": "(quotient: NEKit.UInt128, remainder: NEKit.UInt128)",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt128",
                    "printedName": "NEKit.UInt128",
                    "usr": "s:5NEKit7UInt128V"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "UInt128",
                    "printedName": "NEKit.UInt128",
                    "usr": "s:5NEKit7UInt128V"
                  }
                ]
              },
              {
                "kind": "TypeNominal",
                "name": "UInt128",
                "printedName": "NEKit.UInt128",
                "usr": "s:5NEKit7UInt128V"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit7UInt128V20quotientAndRemainder10dividingByAC0C0_AC9remaindertAC_tF",
            "mangledName": "$s5NEKit7UInt128V20quotientAndRemainder10dividingByAC0C0_AC9remaindertAC_tF",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Var",
            "name": "bitWidth",
            "printedName": "bitWidth",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit7UInt128V8bitWidthSivp",
            "mangledName": "$s5NEKit7UInt128V8bitWidthSivp",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "isFromExtension": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit7UInt128V8bitWidthSivg",
                "mangledName": "$s5NEKit7UInt128V8bitWidthSivg",
                "moduleName": "NEKit",
                "isFromExtension": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "words",
            "printedName": "words",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Array",
                "printedName": "[Swift.UInt]",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt",
                    "printedName": "Swift.UInt",
                    "usr": "s:Su"
                  }
                ],
                "usr": "s:Sa"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit7UInt128V5wordsSaySuGvp",
            "mangledName": "$s5NEKit7UInt128V5wordsSaySuGvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "isFromExtension": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Array",
                    "printedName": "[Swift.UInt]",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "UInt",
                        "printedName": "Swift.UInt",
                        "usr": "s:Su"
                      }
                    ],
                    "usr": "s:Sa"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit7UInt128V5wordsSaySuGvg",
                "mangledName": "$s5NEKit7UInt128V5wordsSaySuGvg",
                "moduleName": "NEKit",
                "isFromExtension": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "trailingZeroBitCount",
            "printedName": "trailingZeroBitCount",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit7UInt128V20trailingZeroBitCountSivp",
            "mangledName": "$s5NEKit7UInt128V20trailingZeroBitCountSivp",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "isFromExtension": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit7UInt128V20trailingZeroBitCountSivg",
                "mangledName": "$s5NEKit7UInt128V20trailingZeroBitCountSivg",
                "moduleName": "NEKit",
                "isFromExtension": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(exactly:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "NEKit.UInt128?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt128",
                    "printedName": "NEKit.UInt128",
                    "usr": "s:5NEKit7UInt128V"
                  }
                ],
                "usr": "s:Sq"
              },
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit7UInt128V7exactlyACSgx_tcSBRzlufc",
            "mangledName": "$s5NEKit7UInt128V7exactlyACSgx_tcSBRzlufc",
            "moduleName": "NEKit",
            "genericSig": "<τ_0_0 where τ_0_0 : Swift.BinaryFloatingPoint>",
            "sugared_genericSig": "<T where T : Swift.BinaryFloatingPoint>",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "isFromExtension": true,
            "init_kind": "Designated"
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "UInt128",
                "printedName": "NEKit.UInt128",
                "usr": "s:5NEKit7UInt128V"
              },
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit7UInt128VyACxcSBRzlufc",
            "mangledName": "$s5NEKit7UInt128VyACxcSBRzlufc",
            "moduleName": "NEKit",
            "genericSig": "<τ_0_0 where τ_0_0 : Swift.BinaryFloatingPoint>",
            "sugared_genericSig": "<T where T : Swift.BinaryFloatingPoint>",
            "declAttributes": [
              "AccessControl"
            ],
            "isFromExtension": true,
            "init_kind": "Designated"
          },
          {
            "kind": "Function",
            "name": "\/",
            "printedName": "\/(_:_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "UInt128",
                "printedName": "NEKit.UInt128",
                "usr": "s:5NEKit7UInt128V"
              },
              {
                "kind": "TypeNominal",
                "name": "UInt128",
                "printedName": "NEKit.UInt128",
                "usr": "s:5NEKit7UInt128V"
              },
              {
                "kind": "TypeNominal",
                "name": "UInt128",
                "printedName": "NEKit.UInt128",
                "usr": "s:5NEKit7UInt128V"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit7UInt128V1doiyA2C_ACtFZ",
            "mangledName": "$s5NEKit7UInt128V1doiyA2C_ACtFZ",
            "moduleName": "NEKit",
            "static": true,
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "\/=",
            "printedName": "\/=(_:_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "UInt128",
                "printedName": "NEKit.UInt128",
                "paramValueOwnership": "InOut",
                "usr": "s:5NEKit7UInt128V"
              },
              {
                "kind": "TypeNominal",
                "name": "UInt128",
                "printedName": "NEKit.UInt128",
                "usr": "s:5NEKit7UInt128V"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit7UInt128V2deoiyyACz_ACtFZ",
            "mangledName": "$s5NEKit7UInt128V2deoiyyACz_ACtFZ",
            "moduleName": "NEKit",
            "static": true,
            "declAttributes": [
              "AccessControl"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "%",
            "printedName": "%(_:_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "UInt128",
                "printedName": "NEKit.UInt128",
                "usr": "s:5NEKit7UInt128V"
              },
              {
                "kind": "TypeNominal",
                "name": "UInt128",
                "printedName": "NEKit.UInt128",
                "usr": "s:5NEKit7UInt128V"
              },
              {
                "kind": "TypeNominal",
                "name": "UInt128",
                "printedName": "NEKit.UInt128",
                "usr": "s:5NEKit7UInt128V"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit7UInt128V1roiyA2C_ACtFZ",
            "mangledName": "$s5NEKit7UInt128V1roiyA2C_ACtFZ",
            "moduleName": "NEKit",
            "static": true,
            "declAttributes": [
              "AccessControl"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "%=",
            "printedName": "%=(_:_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "UInt128",
                "printedName": "NEKit.UInt128",
                "paramValueOwnership": "InOut",
                "usr": "s:5NEKit7UInt128V"
              },
              {
                "kind": "TypeNominal",
                "name": "UInt128",
                "printedName": "NEKit.UInt128",
                "usr": "s:5NEKit7UInt128V"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit7UInt128V2reoiyyACz_ACtFZ",
            "mangledName": "$s5NEKit7UInt128V2reoiyyACz_ACtFZ",
            "moduleName": "NEKit",
            "static": true,
            "declAttributes": [
              "AccessControl"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "&=",
            "printedName": "&=(_:_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "UInt128",
                "printedName": "NEKit.UInt128",
                "paramValueOwnership": "InOut",
                "usr": "s:5NEKit7UInt128V"
              },
              {
                "kind": "TypeNominal",
                "name": "UInt128",
                "printedName": "NEKit.UInt128",
                "usr": "s:5NEKit7UInt128V"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit7UInt128V2aeoiyyACz_ACtFZ",
            "mangledName": "$s5NEKit7UInt128V2aeoiyyACz_ACtFZ",
            "moduleName": "NEKit",
            "static": true,
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "|=",
            "printedName": "|=(_:_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "UInt128",
                "printedName": "NEKit.UInt128",
                "paramValueOwnership": "InOut",
                "usr": "s:5NEKit7UInt128V"
              },
              {
                "kind": "TypeNominal",
                "name": "UInt128",
                "printedName": "NEKit.UInt128",
                "usr": "s:5NEKit7UInt128V"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit7UInt128V2oeoiyyACz_ACtFZ",
            "mangledName": "$s5NEKit7UInt128V2oeoiyyACz_ACtFZ",
            "moduleName": "NEKit",
            "static": true,
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "^=",
            "printedName": "^=(_:_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "UInt128",
                "printedName": "NEKit.UInt128",
                "paramValueOwnership": "InOut",
                "usr": "s:5NEKit7UInt128V"
              },
              {
                "kind": "TypeNominal",
                "name": "UInt128",
                "printedName": "NEKit.UInt128",
                "usr": "s:5NEKit7UInt128V"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit7UInt128V2xeoiyyACz_ACtFZ",
            "mangledName": "$s5NEKit7UInt128V2xeoiyyACz_ACtFZ",
            "moduleName": "NEKit",
            "static": true,
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "&>>=",
            "printedName": "&>>=(_:_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "UInt128",
                "printedName": "NEKit.UInt128",
                "paramValueOwnership": "InOut",
                "usr": "s:5NEKit7UInt128V"
              },
              {
                "kind": "TypeNominal",
                "name": "UInt128",
                "printedName": "NEKit.UInt128",
                "usr": "s:5NEKit7UInt128V"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit7UInt128V4aggeoiyyACz_ACtFZ",
            "mangledName": "$s5NEKit7UInt128V4aggeoiyyACz_ACtFZ",
            "moduleName": "NEKit",
            "static": true,
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "&<<=",
            "printedName": "&<<=(_:_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "UInt128",
                "printedName": "NEKit.UInt128",
                "paramValueOwnership": "InOut",
                "usr": "s:5NEKit7UInt128V"
              },
              {
                "kind": "TypeNominal",
                "name": "UInt128",
                "printedName": "NEKit.UInt128",
                "usr": "s:5NEKit7UInt128V"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit7UInt128V4alleoiyyACz_ACtFZ",
            "mangledName": "$s5NEKit7UInt128V4alleoiyyACz_ACtFZ",
            "moduleName": "NEKit",
            "static": true,
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "hash",
            "printedName": "hash(into:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Hasher",
                "printedName": "Swift.Hasher",
                "paramValueOwnership": "InOut",
                "usr": "s:s6HasherV"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit7UInt128V4hash4intoys6HasherVz_tF",
            "mangledName": "$s5NEKit7UInt128V4hash4intoys6HasherVz_tF",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Var",
            "name": "hashValue",
            "printedName": "hashValue",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit7UInt128V9hashValueSivp",
            "mangledName": "$s5NEKit7UInt128V9hashValueSivp",
            "moduleName": "NEKit",
            "implicit": true,
            "isFromExtension": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit7UInt128V9hashValueSivg",
                "mangledName": "$s5NEKit7UInt128V9hashValueSivg",
                "moduleName": "NEKit",
                "implicit": true,
                "isFromExtension": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Function",
            "name": "+",
            "printedName": "+(_:_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "UInt128",
                "printedName": "NEKit.UInt128",
                "usr": "s:5NEKit7UInt128V"
              },
              {
                "kind": "TypeNominal",
                "name": "UInt128",
                "printedName": "NEKit.UInt128",
                "usr": "s:5NEKit7UInt128V"
              },
              {
                "kind": "TypeNominal",
                "name": "UInt128",
                "printedName": "NEKit.UInt128",
                "usr": "s:5NEKit7UInt128V"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit7UInt128V1poiyA2C_ACtFZ",
            "mangledName": "$s5NEKit7UInt128V1poiyA2C_ACtFZ",
            "moduleName": "NEKit",
            "static": true,
            "declAttributes": [
              "AccessControl"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "+=",
            "printedName": "+=(_:_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "UInt128",
                "printedName": "NEKit.UInt128",
                "paramValueOwnership": "InOut",
                "usr": "s:5NEKit7UInt128V"
              },
              {
                "kind": "TypeNominal",
                "name": "UInt128",
                "printedName": "NEKit.UInt128",
                "usr": "s:5NEKit7UInt128V"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit7UInt128V2peoiyyACz_ACtFZ",
            "mangledName": "$s5NEKit7UInt128V2peoiyyACz_ACtFZ",
            "moduleName": "NEKit",
            "static": true,
            "declAttributes": [
              "AccessControl"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "-",
            "printedName": "-(_:_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "UInt128",
                "printedName": "NEKit.UInt128",
                "usr": "s:5NEKit7UInt128V"
              },
              {
                "kind": "TypeNominal",
                "name": "UInt128",
                "printedName": "NEKit.UInt128",
                "usr": "s:5NEKit7UInt128V"
              },
              {
                "kind": "TypeNominal",
                "name": "UInt128",
                "printedName": "NEKit.UInt128",
                "usr": "s:5NEKit7UInt128V"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit7UInt128V1soiyA2C_ACtFZ",
            "mangledName": "$s5NEKit7UInt128V1soiyA2C_ACtFZ",
            "moduleName": "NEKit",
            "static": true,
            "declAttributes": [
              "AccessControl"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "-=",
            "printedName": "-=(_:_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "UInt128",
                "printedName": "NEKit.UInt128",
                "paramValueOwnership": "InOut",
                "usr": "s:5NEKit7UInt128V"
              },
              {
                "kind": "TypeNominal",
                "name": "UInt128",
                "printedName": "NEKit.UInt128",
                "usr": "s:5NEKit7UInt128V"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit7UInt128V2seoiyyACz_ACtFZ",
            "mangledName": "$s5NEKit7UInt128V2seoiyyACz_ACtFZ",
            "moduleName": "NEKit",
            "static": true,
            "declAttributes": [
              "AccessControl"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "*",
            "printedName": "*(_:_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "UInt128",
                "printedName": "NEKit.UInt128",
                "usr": "s:5NEKit7UInt128V"
              },
              {
                "kind": "TypeNominal",
                "name": "UInt128",
                "printedName": "NEKit.UInt128",
                "usr": "s:5NEKit7UInt128V"
              },
              {
                "kind": "TypeNominal",
                "name": "UInt128",
                "printedName": "NEKit.UInt128",
                "usr": "s:5NEKit7UInt128V"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit7UInt128V1moiyA2C_ACtFZ",
            "mangledName": "$s5NEKit7UInt128V1moiyA2C_ACtFZ",
            "moduleName": "NEKit",
            "static": true,
            "declAttributes": [
              "AccessControl"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "*=",
            "printedName": "*=(_:_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "UInt128",
                "printedName": "NEKit.UInt128",
                "paramValueOwnership": "InOut",
                "usr": "s:5NEKit7UInt128V"
              },
              {
                "kind": "TypeNominal",
                "name": "UInt128",
                "printedName": "NEKit.UInt128",
                "usr": "s:5NEKit7UInt128V"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit7UInt128V2meoiyyACz_ACtFZ",
            "mangledName": "$s5NEKit7UInt128V2meoiyyACz_ACtFZ",
            "moduleName": "NEKit",
            "static": true,
            "declAttributes": [
              "AccessControl"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "==",
            "printedName": "==(_:_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              },
              {
                "kind": "TypeNominal",
                "name": "UInt128",
                "printedName": "NEKit.UInt128",
                "usr": "s:5NEKit7UInt128V"
              },
              {
                "kind": "TypeNominal",
                "name": "UInt128",
                "printedName": "NEKit.UInt128",
                "usr": "s:5NEKit7UInt128V"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit7UInt128V2eeoiySbAC_ACtFZ",
            "mangledName": "$s5NEKit7UInt128V2eeoiySbAC_ACtFZ",
            "moduleName": "NEKit",
            "static": true,
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(integerLiteral:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "UInt128",
                "printedName": "NEKit.UInt128",
                "usr": "s:5NEKit7UInt128V"
              },
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit7UInt128V14integerLiteralACSi_tcfc",
            "mangledName": "$s5NEKit7UInt128V14integerLiteralACSi_tcfc",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "isFromExtension": true,
            "init_kind": "Designated"
          },
          {
            "kind": "Var",
            "name": "description",
            "printedName": "description",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit7UInt128V11descriptionSSvp",
            "mangledName": "$s5NEKit7UInt128V11descriptionSSvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "isFromExtension": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit7UInt128V11descriptionSSvg",
                "mangledName": "$s5NEKit7UInt128V11descriptionSSvg",
                "moduleName": "NEKit",
                "isFromExtension": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "debugDescription",
            "printedName": "debugDescription",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit7UInt128V16debugDescriptionSSvp",
            "mangledName": "$s5NEKit7UInt128V16debugDescriptionSSvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "isFromExtension": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit7UInt128V16debugDescriptionSSvg",
                "mangledName": "$s5NEKit7UInt128V16debugDescriptionSSvg",
                "moduleName": "NEKit",
                "isFromExtension": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Function",
            "name": "<",
            "printedName": "<(_:_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              },
              {
                "kind": "TypeNominal",
                "name": "UInt128",
                "printedName": "NEKit.UInt128",
                "usr": "s:5NEKit7UInt128V"
              },
              {
                "kind": "TypeNominal",
                "name": "UInt128",
                "printedName": "NEKit.UInt128",
                "usr": "s:5NEKit7UInt128V"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit7UInt128V1loiySbAC_ACtFZ",
            "mangledName": "$s5NEKit7UInt128V1loiySbAC_ACtFZ",
            "moduleName": "NEKit",
            "static": true,
            "declAttributes": [
              "AccessControl"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(stringLiteral:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "UInt128",
                "printedName": "NEKit.UInt128",
                "usr": "s:5NEKit7UInt128V"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit7UInt128V13stringLiteralACSS_tcfc",
            "mangledName": "$s5NEKit7UInt128V13stringLiteralACSS_tcfc",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "isFromExtension": true,
            "init_kind": "Designated"
          },
          {
            "kind": "Function",
            "name": "fromUnparsedString",
            "printedName": "fromUnparsedString(_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "UInt128",
                "printedName": "NEKit.UInt128",
                "usr": "s:5NEKit7UInt128V"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit7UInt128V18fromUnparsedStringyACSSKFZ",
            "mangledName": "$s5NEKit7UInt128V18fromUnparsedStringyACSSKFZ",
            "moduleName": "NEKit",
            "static": true,
            "deprecated": true,
            "declAttributes": [
              "AccessControl",
              "Available",
              "RawDocComment"
            ],
            "isFromExtension": true,
            "throwing": true,
            "funcSelfKind": "NonMutating"
          }
        ],
        "declKind": "Struct",
        "usr": "s:5NEKit7UInt128V",
        "mangledName": "$s5NEKit7UInt128V",
        "moduleName": "NEKit",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "FixedWidthInteger",
            "printedName": "FixedWidthInteger",
            "usr": "s:s17FixedWidthIntegerP",
            "mangledName": "$ss17FixedWidthIntegerP"
          },
          {
            "kind": "Conformance",
            "name": "LosslessStringConvertible",
            "printedName": "LosslessStringConvertible",
            "usr": "s:s25LosslessStringConvertibleP",
            "mangledName": "$ss25LosslessStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "BinaryInteger",
            "printedName": "BinaryInteger",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Words",
                "printedName": "Words",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Array",
                    "printedName": "[Swift.UInt]",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "UInt",
                        "printedName": "Swift.UInt",
                        "usr": "s:Su"
                      }
                    ],
                    "usr": "s:Sa"
                  }
                ]
              }
            ],
            "usr": "s:Sz",
            "mangledName": "$sSz"
          },
          {
            "kind": "Conformance",
            "name": "Strideable",
            "printedName": "Strideable",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Stride",
                "printedName": "Stride",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ]
              }
            ],
            "usr": "s:Sx",
            "mangledName": "$sSx"
          },
          {
            "kind": "Conformance",
            "name": "UnsignedInteger",
            "printedName": "UnsignedInteger",
            "usr": "s:SU",
            "mangledName": "$sSU"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "Numeric",
            "printedName": "Numeric",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Magnitude",
                "printedName": "Magnitude",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt128",
                    "printedName": "NEKit.UInt128",
                    "usr": "s:5NEKit7UInt128V"
                  }
                ]
              }
            ],
            "usr": "s:Sj",
            "mangledName": "$sSj"
          },
          {
            "kind": "Conformance",
            "name": "AdditiveArithmetic",
            "printedName": "AdditiveArithmetic",
            "usr": "s:s18AdditiveArithmeticP",
            "mangledName": "$ss18AdditiveArithmeticP"
          },
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "ExpressibleByIntegerLiteral",
            "printedName": "ExpressibleByIntegerLiteral",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "IntegerLiteralType",
                "printedName": "IntegerLiteralType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ]
              }
            ],
            "usr": "s:s27ExpressibleByIntegerLiteralP",
            "mangledName": "$ss27ExpressibleByIntegerLiteralP"
          },
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "CustomDebugStringConvertible",
            "printedName": "CustomDebugStringConvertible",
            "usr": "s:s28CustomDebugStringConvertibleP",
            "mangledName": "$ss28CustomDebugStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "Comparable",
            "printedName": "Comparable",
            "usr": "s:SL",
            "mangledName": "$sSL"
          },
          {
            "kind": "Conformance",
            "name": "ExpressibleByStringLiteral",
            "printedName": "ExpressibleByStringLiteral",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "StringLiteralType",
                "printedName": "StringLiteralType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ]
              }
            ],
            "usr": "s:s26ExpressibleByStringLiteralP",
            "mangledName": "$ss26ExpressibleByStringLiteralP"
          },
          {
            "kind": "Conformance",
            "name": "ExpressibleByExtendedGraphemeClusterLiteral",
            "printedName": "ExpressibleByExtendedGraphemeClusterLiteral",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "ExtendedGraphemeClusterLiteralType",
                "printedName": "ExtendedGraphemeClusterLiteralType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ]
              }
            ],
            "usr": "s:s43ExpressibleByExtendedGraphemeClusterLiteralP",
            "mangledName": "$ss43ExpressibleByExtendedGraphemeClusterLiteralP"
          },
          {
            "kind": "Conformance",
            "name": "ExpressibleByUnicodeScalarLiteral",
            "printedName": "ExpressibleByUnicodeScalarLiteral",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "UnicodeScalarLiteralType",
                "printedName": "UnicodeScalarLiteralType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ]
              }
            ],
            "usr": "s:s33ExpressibleByUnicodeScalarLiteralP",
            "mangledName": "$ss33ExpressibleByUnicodeScalarLiteralP"
          }
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "TypeDecl",
        "name": "HTTPURL",
        "printedName": "HTTPURL",
        "children": [
          {
            "kind": "Var",
            "name": "scheme",
            "printedName": "scheme",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Swift.String?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit7HTTPURLC6schemeSSSgvp",
            "mangledName": "$s5NEKit7HTTPURLC6schemeSSSgvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "Final",
              "HasStorage",
              "AccessControl"
            ],
            "isLet": true,
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "Swift.String?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "String",
                        "printedName": "Swift.String",
                        "usr": "s:SS"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit7HTTPURLC6schemeSSSgvg",
                "mangledName": "$s5NEKit7HTTPURLC6schemeSSSgvg",
                "moduleName": "NEKit",
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "host",
            "printedName": "host",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Swift.String?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit7HTTPURLC4hostSSSgvp",
            "mangledName": "$s5NEKit7HTTPURLC4hostSSSgvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "Final",
              "HasStorage",
              "AccessControl"
            ],
            "isLet": true,
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "Swift.String?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "String",
                        "printedName": "Swift.String",
                        "usr": "s:SS"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit7HTTPURLC4hostSSSgvg",
                "mangledName": "$s5NEKit7HTTPURLC4hostSSSgvg",
                "moduleName": "NEKit",
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "port",
            "printedName": "port",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Swift.Int?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit7HTTPURLC4portSiSgvp",
            "mangledName": "$s5NEKit7HTTPURLC4portSiSgvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "Final",
              "HasStorage",
              "AccessControl"
            ],
            "isLet": true,
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "Swift.Int?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Int",
                        "printedName": "Swift.Int",
                        "usr": "s:Si"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit7HTTPURLC4portSiSgvg",
                "mangledName": "$s5NEKit7HTTPURLC4portSiSgvg",
                "moduleName": "NEKit",
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "relativePath",
            "printedName": "relativePath",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit7HTTPURLC12relativePathSSvp",
            "mangledName": "$s5NEKit7HTTPURLC12relativePathSSvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "Final",
              "HasStorage",
              "AccessControl",
              "RawDocComment"
            ],
            "isLet": true,
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit7HTTPURLC12relativePathSSvg",
                "mangledName": "$s5NEKit7HTTPURLC12relativePathSSvg",
                "moduleName": "NEKit",
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "get"
              }
            ]
          }
        ],
        "declKind": "Class",
        "usr": "s:5NEKit7HTTPURLC",
        "mangledName": "$s5NEKit7HTTPURLC",
        "moduleName": "NEKit",
        "declAttributes": [
          "AccessControl"
        ],
        "hasMissingDesignatedInitializers": true
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "Import",
        "name": "NetworkExtension",
        "printedName": "NetworkExtension",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "Import",
        "name": "CocoaLumberjackSwift",
        "printedName": "CocoaLumberjackSwift",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "TypeDecl",
        "name": "DNSServer",
        "printedName": "DNSServer",
        "children": [
          {
            "kind": "Var",
            "name": "currentServer",
            "printedName": "currentServer",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "NEKit.DNSServer?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSServer",
                    "printedName": "NEKit.DNSServer",
                    "usr": "s:5NEKit9DNSServerC"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit9DNSServerC13currentServerACSgvpZ",
            "mangledName": "$s5NEKit9DNSServerC13currentServerACSgvpZ",
            "moduleName": "NEKit",
            "static": true,
            "declAttributes": [
              "HasInitialValue",
              "Final",
              "HasStorage",
              "AccessControl",
              "RawDocComment"
            ],
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "NEKit.DNSServer?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSServer",
                        "printedName": "NEKit.DNSServer",
                        "usr": "s:5NEKit9DNSServerC"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit9DNSServerC13currentServerACSgvgZ",
                "mangledName": "$s5NEKit9DNSServerC13currentServerACSgvgZ",
                "moduleName": "NEKit",
                "static": true,
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "NEKit.DNSServer?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSServer",
                        "printedName": "NEKit.DNSServer",
                        "usr": "s:5NEKit9DNSServerC"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit9DNSServerC13currentServerACSgvsZ",
                "mangledName": "$s5NEKit9DNSServerC13currentServerACSgvsZ",
                "moduleName": "NEKit",
                "static": true,
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit9DNSServerC13currentServerACSgvMZ",
                "mangledName": "$s5NEKit9DNSServerC13currentServerACSgvMZ",
                "moduleName": "NEKit",
                "static": true,
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "outputFunc",
            "printedName": "outputFunc",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "ImplicitlyUnwrappedOptional",
                "printedName": "(([Foundation.Data], [Foundation.NSNumber]) -> ())?",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "([Foundation.Data], [Foundation.NSNumber]) -> ()",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Void",
                        "printedName": "()"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Tuple",
                        "printedName": "([Foundation.Data], [Foundation.NSNumber])",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "Array",
                            "printedName": "[Foundation.Data]",
                            "children": [
                              {
                                "kind": "TypeNominal",
                                "name": "Data",
                                "printedName": "Foundation.Data",
                                "usr": "s:10Foundation4DataV"
                              }
                            ],
                            "usr": "s:Sa"
                          },
                          {
                            "kind": "TypeNominal",
                            "name": "Array",
                            "printedName": "[Foundation.NSNumber]",
                            "children": [
                              {
                                "kind": "TypeNominal",
                                "name": "NSNumber",
                                "printedName": "Foundation.NSNumber",
                                "usr": "c:objc(cs)NSNumber"
                              }
                            ],
                            "usr": "s:Sa"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit9DNSServerC10outputFuncySay10Foundation4DataVG_SaySo8NSNumberCGtcSgvp",
            "mangledName": "$s5NEKit9DNSServerC10outputFuncySay10Foundation4DataVG_SaySo8NSNumberCGtcSgvp",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "HasInitialValue",
              "HasStorage",
              "AccessControl"
            ],
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "ImplicitlyUnwrappedOptional",
                    "printedName": "(([Foundation.Data], [Foundation.NSNumber]) -> ())?",
                    "children": [
                      {
                        "kind": "TypeFunc",
                        "name": "Function",
                        "printedName": "([Foundation.Data], [Foundation.NSNumber]) -> ()",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "Void",
                            "printedName": "()"
                          },
                          {
                            "kind": "TypeNominal",
                            "name": "Tuple",
                            "printedName": "([Foundation.Data], [Foundation.NSNumber])",
                            "children": [
                              {
                                "kind": "TypeNominal",
                                "name": "Array",
                                "printedName": "[Foundation.Data]",
                                "children": [
                                  {
                                    "kind": "TypeNominal",
                                    "name": "Data",
                                    "printedName": "Foundation.Data",
                                    "usr": "s:10Foundation4DataV"
                                  }
                                ],
                                "usr": "s:Sa"
                              },
                              {
                                "kind": "TypeNominal",
                                "name": "Array",
                                "printedName": "[Foundation.NSNumber]",
                                "children": [
                                  {
                                    "kind": "TypeNominal",
                                    "name": "NSNumber",
                                    "printedName": "Foundation.NSNumber",
                                    "usr": "c:objc(cs)NSNumber"
                                  }
                                ],
                                "usr": "s:Sa"
                              }
                            ]
                          }
                        ]
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit9DNSServerC10outputFuncySay10Foundation4DataVG_SaySo8NSNumberCGtcSgvg",
                "mangledName": "$s5NEKit9DNSServerC10outputFuncySay10Foundation4DataVG_SaySo8NSNumberCGtcSgvg",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "ImplicitlyUnwrappedOptional",
                    "printedName": "(([Foundation.Data], [Foundation.NSNumber]) -> ())?",
                    "children": [
                      {
                        "kind": "TypeFunc",
                        "name": "Function",
                        "printedName": "([Foundation.Data], [Foundation.NSNumber]) -> ()",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "Void",
                            "printedName": "()"
                          },
                          {
                            "kind": "TypeNominal",
                            "name": "Tuple",
                            "printedName": "([Foundation.Data], [Foundation.NSNumber])",
                            "children": [
                              {
                                "kind": "TypeNominal",
                                "name": "Array",
                                "printedName": "[Foundation.Data]",
                                "children": [
                                  {
                                    "kind": "TypeNominal",
                                    "name": "Data",
                                    "printedName": "Foundation.Data",
                                    "usr": "s:10Foundation4DataV"
                                  }
                                ],
                                "usr": "s:Sa"
                              },
                              {
                                "kind": "TypeNominal",
                                "name": "Array",
                                "printedName": "[Foundation.NSNumber]",
                                "children": [
                                  {
                                    "kind": "TypeNominal",
                                    "name": "NSNumber",
                                    "printedName": "Foundation.NSNumber",
                                    "usr": "c:objc(cs)NSNumber"
                                  }
                                ],
                                "usr": "s:Sa"
                              }
                            ]
                          }
                        ]
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit9DNSServerC10outputFuncySay10Foundation4DataVG_SaySo8NSNumberCGtcSgvs",
                "mangledName": "$s5NEKit9DNSServerC10outputFuncySay10Foundation4DataVG_SaySo8NSNumberCGtcSgvs",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit9DNSServerC10outputFuncySay10Foundation4DataVG_SaySo8NSNumberCGtcSgvM",
                "mangledName": "$s5NEKit9DNSServerC10outputFuncySay10Foundation4DataVG_SaySo8NSNumberCGtcSgvM",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(address:port:fakeIPPool:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "DNSServer",
                "printedName": "NEKit.DNSServer",
                "usr": "s:5NEKit9DNSServerC"
              },
              {
                "kind": "TypeNominal",
                "name": "IPAddress",
                "printedName": "NEKit.IPAddress",
                "usr": "s:5NEKit9IPAddressC"
              },
              {
                "kind": "TypeNominal",
                "name": "Port",
                "printedName": "NEKit.Port",
                "usr": "s:5NEKit4PortV"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "NEKit.IPPool?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "IPPool",
                    "printedName": "NEKit.IPPool",
                    "usr": "s:5NEKit6IPPoolC"
                  }
                ],
                "hasDefaultArg": true,
                "usr": "s:Sq"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit9DNSServerC7address4port10fakeIPPoolAcA9IPAddressC_AA4PortVAA0F0CSgtcfc",
            "mangledName": "$s5NEKit9DNSServerC7address4port10fakeIPPoolAcA9IPAddressC_AA4PortVAA0F0CSgtcfc",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "init_kind": "Designated"
          },
          {
            "kind": "Function",
            "name": "input",
            "printedName": "input(packet:version:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              },
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Foundation.NSNumber?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "NSNumber",
                    "printedName": "Foundation.NSNumber",
                    "usr": "c:objc(cs)NSNumber"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit9DNSServerC5input6packet7versionSb10Foundation4DataV_So8NSNumberCSgtF",
            "mangledName": "$s5NEKit9DNSServerC5input6packet7versionSb10Foundation4DataV_So8NSNumberCSgtF",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "start",
            "printedName": "start()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit9DNSServerC5startyyF",
            "mangledName": "$s5NEKit9DNSServerC5startyyF",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "stop",
            "printedName": "stop()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit9DNSServerC4stopyyF",
            "mangledName": "$s5NEKit9DNSServerC4stopyyF",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "AccessControl"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "registerResolver",
            "printedName": "registerResolver(_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "DNSResolverProtocol",
                "printedName": "NEKit.DNSResolverProtocol",
                "usr": "s:5NEKit19DNSResolverProtocolP"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit9DNSServerC16registerResolveryyAA19DNSResolverProtocol_pF",
            "mangledName": "$s5NEKit9DNSServerC16registerResolveryyAA19DNSResolverProtocol_pF",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "didReceive",
            "printedName": "didReceive(rawResponse:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit9DNSServerC10didReceive11rawResponsey10Foundation4DataV_tF",
            "mangledName": "$s5NEKit9DNSServerC10didReceive11rawResponsey10Foundation4DataV_tF",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "AccessControl"
            ],
            "funcSelfKind": "NonMutating"
          }
        ],
        "declKind": "Class",
        "usr": "s:5NEKit9DNSServerC",
        "mangledName": "$s5NEKit9DNSServerC",
        "moduleName": "NEKit",
        "isOpen": true,
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "DNSResolverDelegate",
            "printedName": "DNSResolverDelegate",
            "usr": "s:5NEKit19DNSResolverDelegateP",
            "mangledName": "$s5NEKit19DNSResolverDelegateP"
          },
          {
            "kind": "Conformance",
            "name": "IPStackProtocol",
            "printedName": "IPStackProtocol",
            "usr": "s:5NEKit15IPStackProtocolP",
            "mangledName": "$s5NEKit15IPStackProtocolP"
          }
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "TypeDecl",
        "name": "AllRule",
        "printedName": "AllRule",
        "children": [
          {
            "kind": "Var",
            "name": "description",
            "printedName": "description",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit7AllRuleC11descriptionSSvp",
            "mangledName": "$s5NEKit7AllRuleC11descriptionSSvp",
            "moduleName": "NEKit",
            "overriding": true,
            "isOpen": true,
            "declAttributes": [
              "Override",
              "AccessControl"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit7AllRuleC11descriptionSSvg",
                "mangledName": "$s5NEKit7AllRuleC11descriptionSSvg",
                "moduleName": "NEKit",
                "overriding": true,
                "isOpen": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(adapterFactory:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "AllRule",
                "printedName": "NEKit.AllRule",
                "usr": "s:5NEKit7AllRuleC"
              },
              {
                "kind": "TypeNominal",
                "name": "AdapterFactory",
                "printedName": "NEKit.AdapterFactory",
                "usr": "s:5NEKit14AdapterFactoryC"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit7AllRuleC14adapterFactoryAcA07AdapterE0C_tcfc",
            "mangledName": "$s5NEKit7AllRuleC14adapterFactoryAcA07AdapterE0C_tcfc",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "init_kind": "Designated"
          },
          {
            "kind": "Function",
            "name": "matchDNS",
            "printedName": "matchDNS(_:type:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "DNSSessionMatchResult",
                "printedName": "NEKit.DNSSessionMatchResult",
                "usr": "s:5NEKit21DNSSessionMatchResultO"
              },
              {
                "kind": "TypeNominal",
                "name": "DNSSession",
                "printedName": "NEKit.DNSSession",
                "usr": "s:5NEKit10DNSSessionC"
              },
              {
                "kind": "TypeNominal",
                "name": "DNSSessionMatchType",
                "printedName": "NEKit.DNSSessionMatchType",
                "usr": "s:5NEKit19DNSSessionMatchTypeO"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit7AllRuleC8matchDNS_4typeAA21DNSSessionMatchResultOAA0G0C_AA0gH4TypeOtF",
            "mangledName": "$s5NEKit7AllRuleC8matchDNS_4typeAA21DNSSessionMatchResultOAA0G0C_AA0gH4TypeOtF",
            "moduleName": "NEKit",
            "overriding": true,
            "isOpen": true,
            "declAttributes": [
              "AccessControl",
              "Override",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "match",
            "printedName": "match(_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "NEKit.AdapterFactory?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "AdapterFactory",
                    "printedName": "NEKit.AdapterFactory",
                    "usr": "s:5NEKit14AdapterFactoryC"
                  }
                ],
                "usr": "s:Sq"
              },
              {
                "kind": "TypeNominal",
                "name": "ConnectSession",
                "printedName": "NEKit.ConnectSession",
                "usr": "s:5NEKit14ConnectSessionC"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit7AllRuleC5matchyAA14AdapterFactoryCSgAA14ConnectSessionCF",
            "mangledName": "$s5NEKit7AllRuleC5matchyAA14AdapterFactoryCSgAA14ConnectSessionCF",
            "moduleName": "NEKit",
            "overriding": true,
            "isOpen": true,
            "declAttributes": [
              "AccessControl",
              "Override",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "AllRule",
                "printedName": "NEKit.AllRule",
                "usr": "s:5NEKit7AllRuleC"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit7AllRuleCACycfc",
            "mangledName": "$s5NEKit7AllRuleCACycfc",
            "moduleName": "NEKit",
            "overriding": true,
            "implicit": true,
            "declAttributes": [
              "Override"
            ],
            "init_kind": "Designated"
          }
        ],
        "declKind": "Class",
        "usr": "s:5NEKit7AllRuleC",
        "mangledName": "$s5NEKit7AllRuleC",
        "moduleName": "NEKit",
        "isOpen": true,
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "superclassUsr": "s:5NEKit4RuleC",
        "superclassNames": [
          "NEKit.Rule"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          }
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "Import",
        "name": "CocoaLumberjackSwift",
        "printedName": "CocoaLumberjackSwift",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "TypeDecl",
        "name": "IPPool",
        "printedName": "IPPool",
        "children": [
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(range:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "IPPool",
                "printedName": "NEKit.IPPool",
                "usr": "s:5NEKit6IPPoolC"
              },
              {
                "kind": "TypeNominal",
                "name": "IPRange",
                "printedName": "NEKit.IPRange",
                "usr": "s:5NEKit7IPRangeC"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit6IPPoolC5rangeAcA7IPRangeC_tcfc",
            "mangledName": "$s5NEKit6IPPoolC5rangeAcA7IPRangeC_tcfc",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "init_kind": "Designated"
          }
        ],
        "declKind": "Class",
        "usr": "s:5NEKit6IPPoolC",
        "mangledName": "$s5NEKit6IPPoolC",
        "moduleName": "NEKit",
        "declAttributes": [
          "Final",
          "AccessControl",
          "RawDocComment"
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "Import",
        "name": "CocoaLumberjackSwift",
        "printedName": "CocoaLumberjackSwift",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "TypeDecl",
        "name": "CountryRule",
        "printedName": "CountryRule",
        "children": [
          {
            "kind": "Var",
            "name": "countryCode",
            "printedName": "countryCode",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit11CountryRuleC11countryCodeSSvp",
            "mangledName": "$s5NEKit11CountryRuleC11countryCodeSSvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "Final",
              "HasStorage",
              "AccessControl",
              "RawDocComment"
            ],
            "isLet": true,
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit11CountryRuleC11countryCodeSSvg",
                "mangledName": "$s5NEKit11CountryRuleC11countryCodeSSvg",
                "moduleName": "NEKit",
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "match",
            "printedName": "match",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit11CountryRuleC5matchSbvp",
            "mangledName": "$s5NEKit11CountryRuleC5matchSbvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "Final",
              "HasStorage",
              "AccessControl",
              "RawDocComment"
            ],
            "isLet": true,
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Bool",
                    "printedName": "Swift.Bool",
                    "usr": "s:Sb"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit11CountryRuleC5matchSbvg",
                "mangledName": "$s5NEKit11CountryRuleC5matchSbvg",
                "moduleName": "NEKit",
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "description",
            "printedName": "description",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit11CountryRuleC11descriptionSSvp",
            "mangledName": "$s5NEKit11CountryRuleC11descriptionSSvp",
            "moduleName": "NEKit",
            "overriding": true,
            "isOpen": true,
            "declAttributes": [
              "Override",
              "AccessControl"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit11CountryRuleC11descriptionSSvg",
                "mangledName": "$s5NEKit11CountryRuleC11descriptionSSvg",
                "moduleName": "NEKit",
                "overriding": true,
                "isOpen": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(countryCode:match:adapterFactory:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "CountryRule",
                "printedName": "NEKit.CountryRule",
                "usr": "s:5NEKit11CountryRuleC"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              },
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              },
              {
                "kind": "TypeNominal",
                "name": "AdapterFactory",
                "printedName": "NEKit.AdapterFactory",
                "usr": "s:5NEKit14AdapterFactoryC"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit11CountryRuleC11countryCode5match14adapterFactoryACSS_SbAA07AdapterH0Ctcfc",
            "mangledName": "$s5NEKit11CountryRuleC11countryCode5match14adapterFactoryACSS_SbAA07AdapterH0Ctcfc",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "init_kind": "Designated"
          },
          {
            "kind": "Function",
            "name": "matchDNS",
            "printedName": "matchDNS(_:type:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "DNSSessionMatchResult",
                "printedName": "NEKit.DNSSessionMatchResult",
                "usr": "s:5NEKit21DNSSessionMatchResultO"
              },
              {
                "kind": "TypeNominal",
                "name": "DNSSession",
                "printedName": "NEKit.DNSSession",
                "usr": "s:5NEKit10DNSSessionC"
              },
              {
                "kind": "TypeNominal",
                "name": "DNSSessionMatchType",
                "printedName": "NEKit.DNSSessionMatchType",
                "usr": "s:5NEKit19DNSSessionMatchTypeO"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit11CountryRuleC8matchDNS_4typeAA21DNSSessionMatchResultOAA0G0C_AA0gH4TypeOtF",
            "mangledName": "$s5NEKit11CountryRuleC8matchDNS_4typeAA21DNSSessionMatchResultOAA0G0C_AA0gH4TypeOtF",
            "moduleName": "NEKit",
            "overriding": true,
            "isOpen": true,
            "declAttributes": [
              "AccessControl",
              "Override",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "match",
            "printedName": "match(_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "NEKit.AdapterFactory?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "AdapterFactory",
                    "printedName": "NEKit.AdapterFactory",
                    "usr": "s:5NEKit14AdapterFactoryC"
                  }
                ],
                "usr": "s:Sq"
              },
              {
                "kind": "TypeNominal",
                "name": "ConnectSession",
                "printedName": "NEKit.ConnectSession",
                "usr": "s:5NEKit14ConnectSessionC"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit11CountryRuleC5matchyAA14AdapterFactoryCSgAA14ConnectSessionCF",
            "mangledName": "$s5NEKit11CountryRuleC5matchyAA14AdapterFactoryCSgAA14ConnectSessionCF",
            "moduleName": "NEKit",
            "overriding": true,
            "isOpen": true,
            "declAttributes": [
              "AccessControl",
              "Override",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "CountryRule",
                "printedName": "NEKit.CountryRule",
                "usr": "s:5NEKit11CountryRuleC"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit11CountryRuleCACycfc",
            "mangledName": "$s5NEKit11CountryRuleCACycfc",
            "moduleName": "NEKit",
            "overriding": true,
            "implicit": true,
            "declAttributes": [
              "Override"
            ],
            "init_kind": "Designated"
          }
        ],
        "declKind": "Class",
        "usr": "s:5NEKit11CountryRuleC",
        "mangledName": "$s5NEKit11CountryRuleC",
        "moduleName": "NEKit",
        "isOpen": true,
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "superclassUsr": "s:5NEKit4RuleC",
        "superclassNames": [
          "NEKit.Rule"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          }
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "Import",
        "name": "NetworkExtension",
        "printedName": "NetworkExtension",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "Import",
        "name": "CocoaLumberjackSwift",
        "printedName": "CocoaLumberjackSwift",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "TypeDecl",
        "name": "NWTCPSocket",
        "printedName": "NWTCPSocket",
        "children": [
          {
            "kind": "Var",
            "name": "delegate",
            "printedName": "delegate",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "WeakStorage",
                "printedName": "NEKit.RawTCPSocketDelegate?"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit11NWTCPSocketC8delegateAA20RawTCPSocketDelegate_pSgvp",
            "mangledName": "$s5NEKit11NWTCPSocketC8delegateAA20RawTCPSocketDelegate_pSgvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "HasInitialValue",
              "HasStorage",
              "AccessControl",
              "ReferenceOwnership",
              "RawDocComment"
            ],
            "ownership": 1,
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "NEKit.RawTCPSocketDelegate?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "RawTCPSocketDelegate",
                        "printedName": "NEKit.RawTCPSocketDelegate",
                        "usr": "s:5NEKit20RawTCPSocketDelegateP"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit11NWTCPSocketC8delegateAA20RawTCPSocketDelegate_pSgvg",
                "mangledName": "$s5NEKit11NWTCPSocketC8delegateAA20RawTCPSocketDelegate_pSgvg",
                "moduleName": "NEKit",
                "implicit": true,
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "NEKit.RawTCPSocketDelegate?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "RawTCPSocketDelegate",
                        "printedName": "NEKit.RawTCPSocketDelegate",
                        "usr": "s:5NEKit20RawTCPSocketDelegateP"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit11NWTCPSocketC8delegateAA20RawTCPSocketDelegate_pSgvs",
                "mangledName": "$s5NEKit11NWTCPSocketC8delegateAA20RawTCPSocketDelegate_pSgvs",
                "moduleName": "NEKit",
                "implicit": true,
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit11NWTCPSocketC8delegateAA20RawTCPSocketDelegate_pSgvM",
                "mangledName": "$s5NEKit11NWTCPSocketC8delegateAA20RawTCPSocketDelegate_pSgvM",
                "moduleName": "NEKit",
                "implicit": true,
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "isConnected",
            "printedName": "isConnected",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit11NWTCPSocketC11isConnectedSbvp",
            "mangledName": "$s5NEKit11NWTCPSocketC11isConnectedSbvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Bool",
                    "printedName": "Swift.Bool",
                    "usr": "s:Sb"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit11NWTCPSocketC11isConnectedSbvg",
                "mangledName": "$s5NEKit11NWTCPSocketC11isConnectedSbvg",
                "moduleName": "NEKit",
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "sourceIPAddress",
            "printedName": "sourceIPAddress",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "NEKit.IPAddress?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "IPAddress",
                    "printedName": "NEKit.IPAddress",
                    "usr": "s:5NEKit9IPAddressC"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit11NWTCPSocketC15sourceIPAddressAA0D0CSgvp",
            "mangledName": "$s5NEKit11NWTCPSocketC15sourceIPAddressAA0D0CSgvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "NEKit.IPAddress?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "IPAddress",
                        "printedName": "NEKit.IPAddress",
                        "usr": "s:5NEKit9IPAddressC"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit11NWTCPSocketC15sourceIPAddressAA0D0CSgvg",
                "mangledName": "$s5NEKit11NWTCPSocketC15sourceIPAddressAA0D0CSgvg",
                "moduleName": "NEKit",
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "sourcePort",
            "printedName": "sourcePort",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "NEKit.Port?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Port",
                    "printedName": "NEKit.Port",
                    "usr": "s:5NEKit4PortV"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit11NWTCPSocketC10sourcePortAA0D0VSgvp",
            "mangledName": "$s5NEKit11NWTCPSocketC10sourcePortAA0D0VSgvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "NEKit.Port?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Port",
                        "printedName": "NEKit.Port",
                        "usr": "s:5NEKit4PortV"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit11NWTCPSocketC10sourcePortAA0D0VSgvg",
                "mangledName": "$s5NEKit11NWTCPSocketC10sourcePortAA0D0VSgvg",
                "moduleName": "NEKit",
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "destinationIPAddress",
            "printedName": "destinationIPAddress",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "NEKit.IPAddress?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "IPAddress",
                    "printedName": "NEKit.IPAddress",
                    "usr": "s:5NEKit9IPAddressC"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit11NWTCPSocketC20destinationIPAddressAA0D0CSgvp",
            "mangledName": "$s5NEKit11NWTCPSocketC20destinationIPAddressAA0D0CSgvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "NEKit.IPAddress?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "IPAddress",
                        "printedName": "NEKit.IPAddress",
                        "usr": "s:5NEKit9IPAddressC"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit11NWTCPSocketC20destinationIPAddressAA0D0CSgvg",
                "mangledName": "$s5NEKit11NWTCPSocketC20destinationIPAddressAA0D0CSgvg",
                "moduleName": "NEKit",
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "destinationPort",
            "printedName": "destinationPort",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "NEKit.Port?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Port",
                    "printedName": "NEKit.Port",
                    "usr": "s:5NEKit4PortV"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit11NWTCPSocketC15destinationPortAA0D0VSgvp",
            "mangledName": "$s5NEKit11NWTCPSocketC15destinationPortAA0D0VSgvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "NEKit.Port?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Port",
                        "printedName": "NEKit.Port",
                        "usr": "s:5NEKit4PortV"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit11NWTCPSocketC15destinationPortAA0D0VSgvg",
                "mangledName": "$s5NEKit11NWTCPSocketC15destinationPortAA0D0VSgvg",
                "moduleName": "NEKit",
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Function",
            "name": "connectTo",
            "printedName": "connectTo(host:port:enableTLS:tlsSettings:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              },
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              },
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "[Swift.AnyHashable : Any]?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Dictionary",
                    "printedName": "[Swift.AnyHashable : Any]",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "AnyHashable",
                        "printedName": "Swift.AnyHashable",
                        "usr": "s:s11AnyHashableV"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "ProtocolComposition",
                        "printedName": "Any"
                      }
                    ],
                    "usr": "s:SD"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit11NWTCPSocketC9connectTo4host4port9enableTLS11tlsSettingsySS_SiSbSDys11AnyHashableVypGSgtKF",
            "mangledName": "$s5NEKit11NWTCPSocketC9connectTo4host4port9enableTLS11tlsSettingsySS_SiSbSDys11AnyHashableVypGSgtKF",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "throwing": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "disconnect",
            "printedName": "disconnect()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit11NWTCPSocketC10disconnectyyF",
            "mangledName": "$s5NEKit11NWTCPSocketC10disconnectyyF",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "forceDisconnect",
            "printedName": "forceDisconnect()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit11NWTCPSocketC15forceDisconnectyyF",
            "mangledName": "$s5NEKit11NWTCPSocketC15forceDisconnectyyF",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "write",
            "printedName": "write(data:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit11NWTCPSocketC5write4datay10Foundation4DataV_tF",
            "mangledName": "$s5NEKit11NWTCPSocketC5write4datay10Foundation4DataV_tF",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "readData",
            "printedName": "readData()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit11NWTCPSocketC8readDatayyF",
            "mangledName": "$s5NEKit11NWTCPSocketC8readDatayyF",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "readDataTo",
            "printedName": "readDataTo(length:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit11NWTCPSocketC10readDataTo6lengthySi_tF",
            "mangledName": "$s5NEKit11NWTCPSocketC10readDataTo6lengthySi_tF",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "readDataTo",
            "printedName": "readDataTo(data:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit11NWTCPSocketC10readDataTo4datay10Foundation0D0V_tF",
            "mangledName": "$s5NEKit11NWTCPSocketC10readDataTo4datay10Foundation0D0V_tF",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "readDataTo",
            "printedName": "readDataTo(data:maxLength:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              },
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit11NWTCPSocketC10readDataTo4data9maxLengthy10Foundation0D0V_SitF",
            "mangledName": "$s5NEKit11NWTCPSocketC10readDataTo4data9maxLengthy10Foundation0D0V_SitF",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "observeValue",
            "printedName": "observeValue(forKeyPath:of:change:context:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Swift.String?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "usr": "s:Sq"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Any?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "ProtocolComposition",
                    "printedName": "Any"
                  }
                ],
                "usr": "s:Sq"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "[Foundation.NSKeyValueChangeKey : Any]?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Dictionary",
                    "printedName": "[Foundation.NSKeyValueChangeKey : Any]",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "NSKeyValueChangeKey",
                        "printedName": "Foundation.NSKeyValueChangeKey",
                        "usr": "c:@T@NSKeyValueChangeKey"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "ProtocolComposition",
                        "printedName": "Any"
                      }
                    ],
                    "usr": "s:SD"
                  }
                ],
                "usr": "s:Sq"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Swift.UnsafeMutableRawPointer?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UnsafeMutableRawPointer",
                    "printedName": "Swift.UnsafeMutableRawPointer",
                    "usr": "s:Sv"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Func",
            "usr": "c:@M@NEKit@objc(cs)NWTCPSocket(im)observeValueForKeyPath:ofObject:change:context:",
            "mangledName": "$s5NEKit11NWTCPSocketC12observeValue10forKeyPath2of6change7contextySSSg_ypSgSDySo05NSKeyd6ChangeF0aypGSgSvSgtF",
            "moduleName": "NEKit",
            "overriding": true,
            "objc_name": "observeValueForKeyPath:ofObject:change:context:",
            "declAttributes": [
              "Dynamic",
              "ObjC",
              "AccessControl",
              "Override"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "NWTCPSocket",
                "printedName": "NEKit.NWTCPSocket",
                "usr": "c:@M@NEKit@objc(cs)NWTCPSocket"
              }
            ],
            "declKind": "Constructor",
            "usr": "c:@M@NEKit@objc(cs)NWTCPSocket(im)init",
            "mangledName": "$s5NEKit11NWTCPSocketCACycfc",
            "moduleName": "NEKit",
            "overriding": true,
            "implicit": true,
            "objc_name": "init",
            "declAttributes": [
              "Dynamic",
              "ObjC",
              "Override"
            ],
            "init_kind": "Designated"
          }
        ],
        "declKind": "Class",
        "usr": "c:@M@NEKit@objc(cs)NWTCPSocket",
        "mangledName": "$s5NEKit11NWTCPSocketC",
        "moduleName": "NEKit",
        "declAttributes": [
          "AccessControl",
          "RawDocComment",
          "ObjC"
        ],
        "superclassUsr": "c:objc(cs)NSObject",
        "inheritsConvenienceInitializers": true,
        "superclassNames": [
          "ObjectiveC.NSObject"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "RawTCPSocketProtocol",
            "printedName": "RawTCPSocketProtocol",
            "usr": "s:5NEKit20RawTCPSocketProtocolP",
            "mangledName": "$s5NEKit20RawTCPSocketProtocolP"
          },
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "CVarArg",
            "printedName": "CVarArg",
            "usr": "s:s7CVarArgP",
            "mangledName": "$ss7CVarArgP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObservingPublishing",
            "printedName": "_KeyValueCodingAndObservingPublishing",
            "usr": "s:10Foundation37_KeyValueCodingAndObservingPublishingP",
            "mangledName": "$s10Foundation37_KeyValueCodingAndObservingPublishingP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObserving",
            "printedName": "_KeyValueCodingAndObserving",
            "usr": "s:10Foundation27_KeyValueCodingAndObservingP",
            "mangledName": "$s10Foundation27_KeyValueCodingAndObservingP"
          },
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "CustomDebugStringConvertible",
            "printedName": "CustomDebugStringConvertible",
            "usr": "s:s28CustomDebugStringConvertibleP",
            "mangledName": "$ss28CustomDebugStringConvertibleP"
          }
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "TypeDecl",
        "name": "HTTPAdapterFactory",
        "printedName": "HTTPAdapterFactory",
        "children": [
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(serverHost:serverPort:auth:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "HTTPAdapterFactory",
                "printedName": "NEKit.HTTPAdapterFactory",
                "usr": "s:5NEKit18HTTPAdapterFactoryC"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              },
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "NEKit.HTTPAuthentication?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "HTTPAuthentication",
                    "printedName": "NEKit.HTTPAuthentication",
                    "usr": "s:5NEKit18HTTPAuthenticationV"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit18HTTPAdapterFactoryC10serverHost0D4Port4authACSS_SiAA18HTTPAuthenticationVSgtcfc",
            "mangledName": "$s5NEKit18HTTPAdapterFactoryC10serverHost0D4Port4authACSS_SiAA18HTTPAuthenticationVSgtcfc",
            "moduleName": "NEKit",
            "overriding": true,
            "declAttributes": [
              "AccessControl",
              "Required"
            ],
            "init_kind": "Designated"
          },
          {
            "kind": "Function",
            "name": "getAdapterFor",
            "printedName": "getAdapterFor(session:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "AdapterSocket",
                "printedName": "NEKit.AdapterSocket",
                "usr": "c:@M@NEKit@objc(cs)AdapterSocket"
              },
              {
                "kind": "TypeNominal",
                "name": "ConnectSession",
                "printedName": "NEKit.ConnectSession",
                "usr": "s:5NEKit14ConnectSessionC"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit18HTTPAdapterFactoryC13getAdapterFor7sessionAA0E6SocketCAA14ConnectSessionC_tF",
            "mangledName": "$s5NEKit18HTTPAdapterFactoryC13getAdapterFor7sessionAA0E6SocketCAA14ConnectSessionC_tF",
            "moduleName": "NEKit",
            "overriding": true,
            "isOpen": true,
            "declAttributes": [
              "AccessControl",
              "Override",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          }
        ],
        "declKind": "Class",
        "usr": "s:5NEKit18HTTPAdapterFactoryC",
        "mangledName": "$s5NEKit18HTTPAdapterFactoryC",
        "moduleName": "NEKit",
        "isOpen": true,
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "superclassUsr": "s:5NEKit32HTTPAuthenticationAdapterFactoryC",
        "inheritsConvenienceInitializers": true,
        "superclassNames": [
          "NEKit.HTTPAuthenticationAdapterFactory",
          "NEKit.ServerAdapterFactory",
          "NEKit.AdapterFactory"
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "TypeDecl",
        "name": "DirectRule",
        "printedName": "DirectRule",
        "children": [
          {
            "kind": "Var",
            "name": "description",
            "printedName": "description",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit10DirectRuleC11descriptionSSvp",
            "mangledName": "$s5NEKit10DirectRuleC11descriptionSSvp",
            "moduleName": "NEKit",
            "overriding": true,
            "isOpen": true,
            "declAttributes": [
              "Override",
              "AccessControl"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit10DirectRuleC11descriptionSSvg",
                "mangledName": "$s5NEKit10DirectRuleC11descriptionSSvg",
                "moduleName": "NEKit",
                "overriding": true,
                "isOpen": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "DirectRule",
                "printedName": "NEKit.DirectRule",
                "usr": "s:5NEKit10DirectRuleC"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit10DirectRuleCACycfc",
            "mangledName": "$s5NEKit10DirectRuleCACycfc",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "init_kind": "Designated"
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(adapterFactory:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "DirectRule",
                "printedName": "NEKit.DirectRule",
                "usr": "s:5NEKit10DirectRuleC"
              },
              {
                "kind": "TypeNominal",
                "name": "AdapterFactory",
                "printedName": "NEKit.AdapterFactory",
                "usr": "s:5NEKit14AdapterFactoryC"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit10DirectRuleC14adapterFactoryAcA07AdapterE0C_tcfc",
            "mangledName": "$s5NEKit10DirectRuleC14adapterFactoryAcA07AdapterE0C_tcfc",
            "moduleName": "NEKit",
            "overriding": true,
            "implicit": true,
            "declAttributes": [
              "Override"
            ],
            "init_kind": "Designated"
          }
        ],
        "declKind": "Class",
        "usr": "s:5NEKit10DirectRuleC",
        "mangledName": "$s5NEKit10DirectRuleC",
        "moduleName": "NEKit",
        "isOpen": true,
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "superclassUsr": "s:5NEKit7AllRuleC",
        "superclassNames": [
          "NEKit.AllRule",
          "NEKit.Rule"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          }
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "TypeDecl",
        "name": "AdapterFactory",
        "printedName": "AdapterFactory",
        "children": [
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "AdapterFactory",
                "printedName": "NEKit.AdapterFactory",
                "usr": "s:5NEKit14AdapterFactoryC"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit14AdapterFactoryCACycfc",
            "mangledName": "$s5NEKit14AdapterFactoryCACycfc",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "init_kind": "Designated"
          },
          {
            "kind": "Function",
            "name": "getAdapterFor",
            "printedName": "getAdapterFor(session:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "AdapterSocket",
                "printedName": "NEKit.AdapterSocket",
                "usr": "c:@M@NEKit@objc(cs)AdapterSocket"
              },
              {
                "kind": "TypeNominal",
                "name": "ConnectSession",
                "printedName": "NEKit.ConnectSession",
                "usr": "s:5NEKit14ConnectSessionC"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit14AdapterFactoryC03getB3For7sessionAA0B6SocketCAA14ConnectSessionC_tF",
            "mangledName": "$s5NEKit14AdapterFactoryC03getB3For7sessionAA0B6SocketCAA14ConnectSessionC_tF",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "getDirectAdapter",
            "printedName": "getDirectAdapter()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "AdapterSocket",
                "printedName": "NEKit.AdapterSocket",
                "usr": "c:@M@NEKit@objc(cs)AdapterSocket"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit14AdapterFactoryC09getDirectB0AA0B6SocketCyF",
            "mangledName": "$s5NEKit14AdapterFactoryC09getDirectB0AA0B6SocketCyF",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          }
        ],
        "declKind": "Class",
        "usr": "s:5NEKit14AdapterFactoryC",
        "mangledName": "$s5NEKit14AdapterFactoryC",
        "moduleName": "NEKit",
        "isOpen": true,
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "DirectAdapterFactory",
        "printedName": "DirectAdapterFactory",
        "children": [
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "DirectAdapterFactory",
                "printedName": "NEKit.DirectAdapterFactory",
                "usr": "s:5NEKit20DirectAdapterFactoryC"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit20DirectAdapterFactoryCACycfc",
            "mangledName": "$s5NEKit20DirectAdapterFactoryCACycfc",
            "moduleName": "NEKit",
            "overriding": true,
            "declAttributes": [
              "Override",
              "AccessControl"
            ],
            "init_kind": "Designated"
          }
        ],
        "declKind": "Class",
        "usr": "s:5NEKit20DirectAdapterFactoryC",
        "mangledName": "$s5NEKit20DirectAdapterFactoryC",
        "moduleName": "NEKit",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "superclassUsr": "s:5NEKit14AdapterFactoryC",
        "inheritsConvenienceInitializers": true,
        "superclassNames": [
          "NEKit.AdapterFactory"
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "TypeDecl",
        "name": "DNSFailRule",
        "printedName": "DNSFailRule",
        "children": [
          {
            "kind": "Var",
            "name": "description",
            "printedName": "description",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit11DNSFailRuleC11descriptionSSvp",
            "mangledName": "$s5NEKit11DNSFailRuleC11descriptionSSvp",
            "moduleName": "NEKit",
            "overriding": true,
            "isOpen": true,
            "declAttributes": [
              "Override",
              "AccessControl"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit11DNSFailRuleC11descriptionSSvg",
                "mangledName": "$s5NEKit11DNSFailRuleC11descriptionSSvg",
                "moduleName": "NEKit",
                "overriding": true,
                "isOpen": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(adapterFactory:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "DNSFailRule",
                "printedName": "NEKit.DNSFailRule",
                "usr": "s:5NEKit11DNSFailRuleC"
              },
              {
                "kind": "TypeNominal",
                "name": "AdapterFactory",
                "printedName": "NEKit.AdapterFactory",
                "usr": "s:5NEKit14AdapterFactoryC"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit11DNSFailRuleC14adapterFactoryAcA07AdapterE0C_tcfc",
            "mangledName": "$s5NEKit11DNSFailRuleC14adapterFactoryAcA07AdapterE0C_tcfc",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "init_kind": "Designated"
          },
          {
            "kind": "Function",
            "name": "matchDNS",
            "printedName": "matchDNS(_:type:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "DNSSessionMatchResult",
                "printedName": "NEKit.DNSSessionMatchResult",
                "usr": "s:5NEKit21DNSSessionMatchResultO"
              },
              {
                "kind": "TypeNominal",
                "name": "DNSSession",
                "printedName": "NEKit.DNSSession",
                "usr": "s:5NEKit10DNSSessionC"
              },
              {
                "kind": "TypeNominal",
                "name": "DNSSessionMatchType",
                "printedName": "NEKit.DNSSessionMatchType",
                "usr": "s:5NEKit19DNSSessionMatchTypeO"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit11DNSFailRuleC8matchDNS_4typeAA21DNSSessionMatchResultOAA0G0C_AA0gH4TypeOtF",
            "mangledName": "$s5NEKit11DNSFailRuleC8matchDNS_4typeAA21DNSSessionMatchResultOAA0G0C_AA0gH4TypeOtF",
            "moduleName": "NEKit",
            "overriding": true,
            "isOpen": true,
            "declAttributes": [
              "AccessControl",
              "Override",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "match",
            "printedName": "match(_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "NEKit.AdapterFactory?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "AdapterFactory",
                    "printedName": "NEKit.AdapterFactory",
                    "usr": "s:5NEKit14AdapterFactoryC"
                  }
                ],
                "usr": "s:Sq"
              },
              {
                "kind": "TypeNominal",
                "name": "ConnectSession",
                "printedName": "NEKit.ConnectSession",
                "usr": "s:5NEKit14ConnectSessionC"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit11DNSFailRuleC5matchyAA14AdapterFactoryCSgAA14ConnectSessionCF",
            "mangledName": "$s5NEKit11DNSFailRuleC5matchyAA14AdapterFactoryCSgAA14ConnectSessionCF",
            "moduleName": "NEKit",
            "overriding": true,
            "isOpen": true,
            "declAttributes": [
              "AccessControl",
              "Override",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "DNSFailRule",
                "printedName": "NEKit.DNSFailRule",
                "usr": "s:5NEKit11DNSFailRuleC"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit11DNSFailRuleCACycfc",
            "mangledName": "$s5NEKit11DNSFailRuleCACycfc",
            "moduleName": "NEKit",
            "overriding": true,
            "implicit": true,
            "declAttributes": [
              "Override"
            ],
            "init_kind": "Designated"
          }
        ],
        "declKind": "Class",
        "usr": "s:5NEKit11DNSFailRuleC",
        "mangledName": "$s5NEKit11DNSFailRuleC",
        "moduleName": "NEKit",
        "isOpen": true,
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "superclassUsr": "s:5NEKit4RuleC",
        "superclassNames": [
          "NEKit.Rule"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          }
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "Import",
        "name": "CocoaLumberjackSwift",
        "printedName": "CocoaLumberjackSwift",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "TypeDecl",
        "name": "IPVersion",
        "printedName": "IPVersion",
        "children": [
          {
            "kind": "Var",
            "name": "iPv4",
            "printedName": "iPv4",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.IPVersion.Type) -> NEKit.IPVersion",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "IPVersion",
                    "printedName": "NEKit.IPVersion",
                    "usr": "s:5NEKit9IPVersionO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.IPVersion.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "IPVersion",
                        "printedName": "NEKit.IPVersion",
                        "usr": "s:5NEKit9IPVersionO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit9IPVersionO4iPv4yA2CmF",
            "mangledName": "$s5NEKit9IPVersionO4iPv4yA2CmF",
            "moduleName": "NEKit"
          },
          {
            "kind": "Var",
            "name": "iPv6",
            "printedName": "iPv6",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.IPVersion.Type) -> NEKit.IPVersion",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "IPVersion",
                    "printedName": "NEKit.IPVersion",
                    "usr": "s:5NEKit9IPVersionO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.IPVersion.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "IPVersion",
                        "printedName": "NEKit.IPVersion",
                        "usr": "s:5NEKit9IPVersionO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit9IPVersionO4iPv6yA2CmF",
            "mangledName": "$s5NEKit9IPVersionO4iPv6yA2CmF",
            "moduleName": "NEKit"
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(rawValue:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "NEKit.IPVersion?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "IPVersion",
                    "printedName": "NEKit.IPVersion",
                    "usr": "s:5NEKit9IPVersionO"
                  }
                ],
                "usr": "s:Sq"
              },
              {
                "kind": "TypeNominal",
                "name": "UInt8",
                "printedName": "Swift.UInt8",
                "usr": "s:s5UInt8V"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit9IPVersionO8rawValueACSgs5UInt8V_tcfc",
            "mangledName": "$s5NEKit9IPVersionO8rawValueACSgs5UInt8V_tcfc",
            "moduleName": "NEKit",
            "implicit": true,
            "init_kind": "Designated"
          },
          {
            "kind": "Var",
            "name": "rawValue",
            "printedName": "rawValue",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "UInt8",
                "printedName": "Swift.UInt8",
                "usr": "s:s5UInt8V"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit9IPVersionO8rawValues5UInt8Vvp",
            "mangledName": "$s5NEKit9IPVersionO8rawValues5UInt8Vvp",
            "moduleName": "NEKit",
            "implicit": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt8",
                    "printedName": "Swift.UInt8",
                    "usr": "s:s5UInt8V"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit9IPVersionO8rawValues5UInt8Vvg",
                "mangledName": "$s5NEKit9IPVersionO8rawValues5UInt8Vvg",
                "moduleName": "NEKit",
                "implicit": true,
                "accessorKind": "get"
              }
            ]
          }
        ],
        "declKind": "Enum",
        "usr": "s:5NEKit9IPVersionO",
        "mangledName": "$s5NEKit9IPVersionO",
        "moduleName": "NEKit",
        "declAttributes": [
          "AccessControl"
        ],
        "enumRawTypeName": "UInt8",
        "conformances": [
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "RawRepresentable",
            "printedName": "RawRepresentable",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "RawValue",
                "printedName": "RawValue",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt8",
                    "printedName": "Swift.UInt8",
                    "usr": "s:s5UInt8V"
                  }
                ]
              }
            ],
            "usr": "s:SY",
            "mangledName": "$sSY"
          }
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "TransportProtocol",
        "printedName": "TransportProtocol",
        "children": [
          {
            "kind": "Var",
            "name": "icmp",
            "printedName": "icmp",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.TransportProtocol.Type) -> NEKit.TransportProtocol",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "TransportProtocol",
                    "printedName": "NEKit.TransportProtocol",
                    "usr": "s:5NEKit17TransportProtocolO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.TransportProtocol.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "TransportProtocol",
                        "printedName": "NEKit.TransportProtocol",
                        "usr": "s:5NEKit17TransportProtocolO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit17TransportProtocolO4icmpyA2CmF",
            "mangledName": "$s5NEKit17TransportProtocolO4icmpyA2CmF",
            "moduleName": "NEKit"
          },
          {
            "kind": "Var",
            "name": "tcp",
            "printedName": "tcp",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.TransportProtocol.Type) -> NEKit.TransportProtocol",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "TransportProtocol",
                    "printedName": "NEKit.TransportProtocol",
                    "usr": "s:5NEKit17TransportProtocolO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.TransportProtocol.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "TransportProtocol",
                        "printedName": "NEKit.TransportProtocol",
                        "usr": "s:5NEKit17TransportProtocolO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit17TransportProtocolO3tcpyA2CmF",
            "mangledName": "$s5NEKit17TransportProtocolO3tcpyA2CmF",
            "moduleName": "NEKit"
          },
          {
            "kind": "Var",
            "name": "udp",
            "printedName": "udp",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.TransportProtocol.Type) -> NEKit.TransportProtocol",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "TransportProtocol",
                    "printedName": "NEKit.TransportProtocol",
                    "usr": "s:5NEKit17TransportProtocolO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.TransportProtocol.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "TransportProtocol",
                        "printedName": "NEKit.TransportProtocol",
                        "usr": "s:5NEKit17TransportProtocolO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit17TransportProtocolO3udpyA2CmF",
            "mangledName": "$s5NEKit17TransportProtocolO3udpyA2CmF",
            "moduleName": "NEKit"
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(rawValue:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "NEKit.TransportProtocol?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "TransportProtocol",
                    "printedName": "NEKit.TransportProtocol",
                    "usr": "s:5NEKit17TransportProtocolO"
                  }
                ],
                "usr": "s:Sq"
              },
              {
                "kind": "TypeNominal",
                "name": "UInt8",
                "printedName": "Swift.UInt8",
                "usr": "s:s5UInt8V"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit17TransportProtocolO8rawValueACSgs5UInt8V_tcfc",
            "mangledName": "$s5NEKit17TransportProtocolO8rawValueACSgs5UInt8V_tcfc",
            "moduleName": "NEKit",
            "implicit": true,
            "init_kind": "Designated"
          },
          {
            "kind": "Var",
            "name": "rawValue",
            "printedName": "rawValue",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "UInt8",
                "printedName": "Swift.UInt8",
                "usr": "s:s5UInt8V"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit17TransportProtocolO8rawValues5UInt8Vvp",
            "mangledName": "$s5NEKit17TransportProtocolO8rawValues5UInt8Vvp",
            "moduleName": "NEKit",
            "implicit": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt8",
                    "printedName": "Swift.UInt8",
                    "usr": "s:s5UInt8V"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit17TransportProtocolO8rawValues5UInt8Vvg",
                "mangledName": "$s5NEKit17TransportProtocolO8rawValues5UInt8Vvg",
                "moduleName": "NEKit",
                "implicit": true,
                "accessorKind": "get"
              }
            ]
          }
        ],
        "declKind": "Enum",
        "usr": "s:5NEKit17TransportProtocolO",
        "mangledName": "$s5NEKit17TransportProtocolO",
        "moduleName": "NEKit",
        "declAttributes": [
          "AccessControl"
        ],
        "enumRawTypeName": "UInt8",
        "conformances": [
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "RawRepresentable",
            "printedName": "RawRepresentable",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "RawValue",
                "printedName": "RawValue",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt8",
                    "printedName": "Swift.UInt8",
                    "usr": "s:s5UInt8V"
                  }
                ]
              }
            ],
            "usr": "s:SY",
            "mangledName": "$sSY"
          }
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "IPPacket",
        "printedName": "IPPacket",
        "children": [
          {
            "kind": "Function",
            "name": "peekIPVersion",
            "printedName": "peekIPVersion(_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "NEKit.IPVersion?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "IPVersion",
                    "printedName": "NEKit.IPVersion",
                    "usr": "s:5NEKit9IPVersionO"
                  }
                ],
                "usr": "s:Sq"
              },
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit8IPPacketC13peekIPVersionyAA0D0OSg10Foundation4DataVFZ",
            "mangledName": "$s5NEKit8IPPacketC13peekIPVersionyAA0D0OSg10Foundation4DataVFZ",
            "moduleName": "NEKit",
            "static": true,
            "declAttributes": [
              "Final",
              "AccessControl",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "peekProtocol",
            "printedName": "peekProtocol(_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "NEKit.TransportProtocol?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "TransportProtocol",
                    "printedName": "NEKit.TransportProtocol",
                    "usr": "s:5NEKit17TransportProtocolO"
                  }
                ],
                "usr": "s:Sq"
              },
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit8IPPacketC12peekProtocolyAA09TransportD0OSg10Foundation4DataVFZ",
            "mangledName": "$s5NEKit8IPPacketC12peekProtocolyAA09TransportD0OSg10Foundation4DataVFZ",
            "moduleName": "NEKit",
            "static": true,
            "declAttributes": [
              "Final",
              "AccessControl",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "peekSourceAddress",
            "printedName": "peekSourceAddress(_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "NEKit.IPAddress?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "IPAddress",
                    "printedName": "NEKit.IPAddress",
                    "usr": "s:5NEKit9IPAddressC"
                  }
                ],
                "usr": "s:Sq"
              },
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit8IPPacketC17peekSourceAddressyAA9IPAddressCSg10Foundation4DataVFZ",
            "mangledName": "$s5NEKit8IPPacketC17peekSourceAddressyAA9IPAddressCSg10Foundation4DataVFZ",
            "moduleName": "NEKit",
            "static": true,
            "declAttributes": [
              "Final",
              "AccessControl",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "peekDestinationAddress",
            "printedName": "peekDestinationAddress(_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "NEKit.IPAddress?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "IPAddress",
                    "printedName": "NEKit.IPAddress",
                    "usr": "s:5NEKit9IPAddressC"
                  }
                ],
                "usr": "s:Sq"
              },
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit8IPPacketC22peekDestinationAddressyAA9IPAddressCSg10Foundation4DataVFZ",
            "mangledName": "$s5NEKit8IPPacketC22peekDestinationAddressyAA9IPAddressCSg10Foundation4DataVFZ",
            "moduleName": "NEKit",
            "static": true,
            "declAttributes": [
              "Final",
              "AccessControl",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "peekSourcePort",
            "printedName": "peekSourcePort(_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "NEKit.Port?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Port",
                    "printedName": "NEKit.Port",
                    "usr": "s:5NEKit4PortV"
                  }
                ],
                "usr": "s:Sq"
              },
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit8IPPacketC14peekSourcePortyAA0E0VSg10Foundation4DataVFZ",
            "mangledName": "$s5NEKit8IPPacketC14peekSourcePortyAA0E0VSg10Foundation4DataVFZ",
            "moduleName": "NEKit",
            "static": true,
            "declAttributes": [
              "Final",
              "AccessControl",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "peekDestinationPort",
            "printedName": "peekDestinationPort(_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "NEKit.Port?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Port",
                    "printedName": "NEKit.Port",
                    "usr": "s:5NEKit4PortV"
                  }
                ],
                "usr": "s:Sq"
              },
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit8IPPacketC19peekDestinationPortyAA0E0VSg10Foundation4DataVFZ",
            "mangledName": "$s5NEKit8IPPacketC19peekDestinationPortyAA0E0VSg10Foundation4DataVFZ",
            "moduleName": "NEKit",
            "static": true,
            "declAttributes": [
              "Final",
              "AccessControl",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Var",
            "name": "version",
            "printedName": "version",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "IPVersion",
                "printedName": "NEKit.IPVersion",
                "usr": "s:5NEKit9IPVersionO"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit8IPPacketC7versionAA9IPVersionOvp",
            "mangledName": "$s5NEKit8IPPacketC7versionAA9IPVersionOvp",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "HasInitialValue",
              "HasStorage",
              "AccessControl",
              "RawDocComment"
            ],
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "IPVersion",
                    "printedName": "NEKit.IPVersion",
                    "usr": "s:5NEKit9IPVersionO"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit8IPPacketC7versionAA9IPVersionOvg",
                "mangledName": "$s5NEKit8IPPacketC7versionAA9IPVersionOvg",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "IPVersion",
                    "printedName": "NEKit.IPVersion",
                    "usr": "s:5NEKit9IPVersionO"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit8IPPacketC7versionAA9IPVersionOvs",
                "mangledName": "$s5NEKit8IPPacketC7versionAA9IPVersionOvs",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit8IPPacketC7versionAA9IPVersionOvM",
                "mangledName": "$s5NEKit8IPPacketC7versionAA9IPVersionOvM",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "headerLength",
            "printedName": "headerLength",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "UInt8",
                "printedName": "Swift.UInt8",
                "usr": "s:s5UInt8V"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit8IPPacketC12headerLengths5UInt8Vvp",
            "mangledName": "$s5NEKit8IPPacketC12headerLengths5UInt8Vvp",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "HasInitialValue",
              "HasStorage",
              "AccessControl",
              "RawDocComment"
            ],
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt8",
                    "printedName": "Swift.UInt8",
                    "usr": "s:s5UInt8V"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit8IPPacketC12headerLengths5UInt8Vvg",
                "mangledName": "$s5NEKit8IPPacketC12headerLengths5UInt8Vvg",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "UInt8",
                    "printedName": "Swift.UInt8",
                    "usr": "s:s5UInt8V"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit8IPPacketC12headerLengths5UInt8Vvs",
                "mangledName": "$s5NEKit8IPPacketC12headerLengths5UInt8Vvs",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit8IPPacketC12headerLengths5UInt8VvM",
                "mangledName": "$s5NEKit8IPPacketC12headerLengths5UInt8VvM",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "tos",
            "printedName": "tos",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "UInt8",
                "printedName": "Swift.UInt8",
                "usr": "s:s5UInt8V"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit8IPPacketC3toss5UInt8Vvp",
            "mangledName": "$s5NEKit8IPPacketC3toss5UInt8Vvp",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "HasInitialValue",
              "HasStorage",
              "AccessControl",
              "RawDocComment"
            ],
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt8",
                    "printedName": "Swift.UInt8",
                    "usr": "s:s5UInt8V"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit8IPPacketC3toss5UInt8Vvg",
                "mangledName": "$s5NEKit8IPPacketC3toss5UInt8Vvg",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "UInt8",
                    "printedName": "Swift.UInt8",
                    "usr": "s:s5UInt8V"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit8IPPacketC3toss5UInt8Vvs",
                "mangledName": "$s5NEKit8IPPacketC3toss5UInt8Vvs",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit8IPPacketC3toss5UInt8VvM",
                "mangledName": "$s5NEKit8IPPacketC3toss5UInt8VvM",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "totalLength",
            "printedName": "totalLength",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "UInt16",
                "printedName": "Swift.UInt16",
                "usr": "s:s6UInt16V"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit8IPPacketC11totalLengths6UInt16Vvp",
            "mangledName": "$s5NEKit8IPPacketC11totalLengths6UInt16Vvp",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt16",
                    "printedName": "Swift.UInt16",
                    "usr": "s:s6UInt16V"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit8IPPacketC11totalLengths6UInt16Vvg",
                "mangledName": "$s5NEKit8IPPacketC11totalLengths6UInt16Vvg",
                "moduleName": "NEKit",
                "isOpen": true,
                "accessorKind": "get"
              }
            ]
          }
        ],
        "declKind": "Class",
        "usr": "s:5NEKit8IPPacketC",
        "mangledName": "$s5NEKit8IPPacketC",
        "moduleName": "NEKit",
        "isOpen": true,
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "hasMissingDesignatedInitializers": true
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "TypeDecl",
        "name": "DNSType",
        "printedName": "DNSType",
        "children": [
          {
            "kind": "Var",
            "name": "invalid",
            "printedName": "invalid",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.DNSType.Type) -> NEKit.DNSType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSType",
                    "printedName": "NEKit.DNSType",
                    "usr": "s:5NEKit7DNSTypeO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.DNSType.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSType",
                        "printedName": "NEKit.DNSType",
                        "usr": "s:5NEKit7DNSTypeO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit7DNSTypeO7invalidyA2CmF",
            "mangledName": "$s5NEKit7DNSTypeO7invalidyA2CmF",
            "moduleName": "NEKit",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "a",
            "printedName": "a",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.DNSType.Type) -> NEKit.DNSType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSType",
                    "printedName": "NEKit.DNSType",
                    "usr": "s:5NEKit7DNSTypeO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.DNSType.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSType",
                        "printedName": "NEKit.DNSType",
                        "usr": "s:5NEKit7DNSTypeO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit7DNSTypeO1ayA2CmF",
            "mangledName": "$s5NEKit7DNSTypeO1ayA2CmF",
            "moduleName": "NEKit",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "ns",
            "printedName": "ns",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.DNSType.Type) -> NEKit.DNSType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSType",
                    "printedName": "NEKit.DNSType",
                    "usr": "s:5NEKit7DNSTypeO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.DNSType.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSType",
                        "printedName": "NEKit.DNSType",
                        "usr": "s:5NEKit7DNSTypeO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit7DNSTypeO2nsyA2CmF",
            "mangledName": "$s5NEKit7DNSTypeO2nsyA2CmF",
            "moduleName": "NEKit",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "md",
            "printedName": "md",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.DNSType.Type) -> NEKit.DNSType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSType",
                    "printedName": "NEKit.DNSType",
                    "usr": "s:5NEKit7DNSTypeO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.DNSType.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSType",
                        "printedName": "NEKit.DNSType",
                        "usr": "s:5NEKit7DNSTypeO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit7DNSTypeO2mdyA2CmF",
            "mangledName": "$s5NEKit7DNSTypeO2mdyA2CmF",
            "moduleName": "NEKit",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "mf",
            "printedName": "mf",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.DNSType.Type) -> NEKit.DNSType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSType",
                    "printedName": "NEKit.DNSType",
                    "usr": "s:5NEKit7DNSTypeO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.DNSType.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSType",
                        "printedName": "NEKit.DNSType",
                        "usr": "s:5NEKit7DNSTypeO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit7DNSTypeO2mfyA2CmF",
            "mangledName": "$s5NEKit7DNSTypeO2mfyA2CmF",
            "moduleName": "NEKit",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "cname",
            "printedName": "cname",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.DNSType.Type) -> NEKit.DNSType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSType",
                    "printedName": "NEKit.DNSType",
                    "usr": "s:5NEKit7DNSTypeO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.DNSType.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSType",
                        "printedName": "NEKit.DNSType",
                        "usr": "s:5NEKit7DNSTypeO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit7DNSTypeO5cnameyA2CmF",
            "mangledName": "$s5NEKit7DNSTypeO5cnameyA2CmF",
            "moduleName": "NEKit",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "soa",
            "printedName": "soa",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.DNSType.Type) -> NEKit.DNSType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSType",
                    "printedName": "NEKit.DNSType",
                    "usr": "s:5NEKit7DNSTypeO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.DNSType.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSType",
                        "printedName": "NEKit.DNSType",
                        "usr": "s:5NEKit7DNSTypeO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit7DNSTypeO3soayA2CmF",
            "mangledName": "$s5NEKit7DNSTypeO3soayA2CmF",
            "moduleName": "NEKit",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "mb",
            "printedName": "mb",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.DNSType.Type) -> NEKit.DNSType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSType",
                    "printedName": "NEKit.DNSType",
                    "usr": "s:5NEKit7DNSTypeO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.DNSType.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSType",
                        "printedName": "NEKit.DNSType",
                        "usr": "s:5NEKit7DNSTypeO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit7DNSTypeO2mbyA2CmF",
            "mangledName": "$s5NEKit7DNSTypeO2mbyA2CmF",
            "moduleName": "NEKit",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "mg",
            "printedName": "mg",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.DNSType.Type) -> NEKit.DNSType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSType",
                    "printedName": "NEKit.DNSType",
                    "usr": "s:5NEKit7DNSTypeO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.DNSType.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSType",
                        "printedName": "NEKit.DNSType",
                        "usr": "s:5NEKit7DNSTypeO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit7DNSTypeO2mgyA2CmF",
            "mangledName": "$s5NEKit7DNSTypeO2mgyA2CmF",
            "moduleName": "NEKit",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "mr",
            "printedName": "mr",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.DNSType.Type) -> NEKit.DNSType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSType",
                    "printedName": "NEKit.DNSType",
                    "usr": "s:5NEKit7DNSTypeO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.DNSType.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSType",
                        "printedName": "NEKit.DNSType",
                        "usr": "s:5NEKit7DNSTypeO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit7DNSTypeO2mryA2CmF",
            "mangledName": "$s5NEKit7DNSTypeO2mryA2CmF",
            "moduleName": "NEKit",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "null",
            "printedName": "null",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.DNSType.Type) -> NEKit.DNSType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSType",
                    "printedName": "NEKit.DNSType",
                    "usr": "s:5NEKit7DNSTypeO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.DNSType.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSType",
                        "printedName": "NEKit.DNSType",
                        "usr": "s:5NEKit7DNSTypeO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit7DNSTypeO4nullyA2CmF",
            "mangledName": "$s5NEKit7DNSTypeO4nullyA2CmF",
            "moduleName": "NEKit",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "wks",
            "printedName": "wks",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.DNSType.Type) -> NEKit.DNSType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSType",
                    "printedName": "NEKit.DNSType",
                    "usr": "s:5NEKit7DNSTypeO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.DNSType.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSType",
                        "printedName": "NEKit.DNSType",
                        "usr": "s:5NEKit7DNSTypeO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit7DNSTypeO3wksyA2CmF",
            "mangledName": "$s5NEKit7DNSTypeO3wksyA2CmF",
            "moduleName": "NEKit",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "ptr",
            "printedName": "ptr",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.DNSType.Type) -> NEKit.DNSType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSType",
                    "printedName": "NEKit.DNSType",
                    "usr": "s:5NEKit7DNSTypeO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.DNSType.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSType",
                        "printedName": "NEKit.DNSType",
                        "usr": "s:5NEKit7DNSTypeO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit7DNSTypeO3ptryA2CmF",
            "mangledName": "$s5NEKit7DNSTypeO3ptryA2CmF",
            "moduleName": "NEKit",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "hinfo",
            "printedName": "hinfo",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.DNSType.Type) -> NEKit.DNSType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSType",
                    "printedName": "NEKit.DNSType",
                    "usr": "s:5NEKit7DNSTypeO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.DNSType.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSType",
                        "printedName": "NEKit.DNSType",
                        "usr": "s:5NEKit7DNSTypeO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit7DNSTypeO5hinfoyA2CmF",
            "mangledName": "$s5NEKit7DNSTypeO5hinfoyA2CmF",
            "moduleName": "NEKit",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "minfo",
            "printedName": "minfo",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.DNSType.Type) -> NEKit.DNSType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSType",
                    "printedName": "NEKit.DNSType",
                    "usr": "s:5NEKit7DNSTypeO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.DNSType.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSType",
                        "printedName": "NEKit.DNSType",
                        "usr": "s:5NEKit7DNSTypeO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit7DNSTypeO5minfoyA2CmF",
            "mangledName": "$s5NEKit7DNSTypeO5minfoyA2CmF",
            "moduleName": "NEKit",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "mx",
            "printedName": "mx",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.DNSType.Type) -> NEKit.DNSType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSType",
                    "printedName": "NEKit.DNSType",
                    "usr": "s:5NEKit7DNSTypeO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.DNSType.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSType",
                        "printedName": "NEKit.DNSType",
                        "usr": "s:5NEKit7DNSTypeO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit7DNSTypeO2mxyA2CmF",
            "mangledName": "$s5NEKit7DNSTypeO2mxyA2CmF",
            "moduleName": "NEKit",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "txt",
            "printedName": "txt",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.DNSType.Type) -> NEKit.DNSType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSType",
                    "printedName": "NEKit.DNSType",
                    "usr": "s:5NEKit7DNSTypeO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.DNSType.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSType",
                        "printedName": "NEKit.DNSType",
                        "usr": "s:5NEKit7DNSTypeO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit7DNSTypeO3txtyA2CmF",
            "mangledName": "$s5NEKit7DNSTypeO3txtyA2CmF",
            "moduleName": "NEKit",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "rp",
            "printedName": "rp",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.DNSType.Type) -> NEKit.DNSType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSType",
                    "printedName": "NEKit.DNSType",
                    "usr": "s:5NEKit7DNSTypeO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.DNSType.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSType",
                        "printedName": "NEKit.DNSType",
                        "usr": "s:5NEKit7DNSTypeO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit7DNSTypeO2rpyA2CmF",
            "mangledName": "$s5NEKit7DNSTypeO2rpyA2CmF",
            "moduleName": "NEKit",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "afsdb",
            "printedName": "afsdb",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.DNSType.Type) -> NEKit.DNSType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSType",
                    "printedName": "NEKit.DNSType",
                    "usr": "s:5NEKit7DNSTypeO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.DNSType.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSType",
                        "printedName": "NEKit.DNSType",
                        "usr": "s:5NEKit7DNSTypeO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit7DNSTypeO5afsdbyA2CmF",
            "mangledName": "$s5NEKit7DNSTypeO5afsdbyA2CmF",
            "moduleName": "NEKit",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "x25",
            "printedName": "x25",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.DNSType.Type) -> NEKit.DNSType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSType",
                    "printedName": "NEKit.DNSType",
                    "usr": "s:5NEKit7DNSTypeO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.DNSType.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSType",
                        "printedName": "NEKit.DNSType",
                        "usr": "s:5NEKit7DNSTypeO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit7DNSTypeO3x25yA2CmF",
            "mangledName": "$s5NEKit7DNSTypeO3x25yA2CmF",
            "moduleName": "NEKit",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "isdn",
            "printedName": "isdn",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.DNSType.Type) -> NEKit.DNSType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSType",
                    "printedName": "NEKit.DNSType",
                    "usr": "s:5NEKit7DNSTypeO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.DNSType.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSType",
                        "printedName": "NEKit.DNSType",
                        "usr": "s:5NEKit7DNSTypeO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit7DNSTypeO4isdnyA2CmF",
            "mangledName": "$s5NEKit7DNSTypeO4isdnyA2CmF",
            "moduleName": "NEKit",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "rt",
            "printedName": "rt",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.DNSType.Type) -> NEKit.DNSType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSType",
                    "printedName": "NEKit.DNSType",
                    "usr": "s:5NEKit7DNSTypeO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.DNSType.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSType",
                        "printedName": "NEKit.DNSType",
                        "usr": "s:5NEKit7DNSTypeO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit7DNSTypeO2rtyA2CmF",
            "mangledName": "$s5NEKit7DNSTypeO2rtyA2CmF",
            "moduleName": "NEKit",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "nsap",
            "printedName": "nsap",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.DNSType.Type) -> NEKit.DNSType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSType",
                    "printedName": "NEKit.DNSType",
                    "usr": "s:5NEKit7DNSTypeO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.DNSType.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSType",
                        "printedName": "NEKit.DNSType",
                        "usr": "s:5NEKit7DNSTypeO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit7DNSTypeO4nsapyA2CmF",
            "mangledName": "$s5NEKit7DNSTypeO4nsapyA2CmF",
            "moduleName": "NEKit",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "nsapptr",
            "printedName": "nsapptr",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.DNSType.Type) -> NEKit.DNSType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSType",
                    "printedName": "NEKit.DNSType",
                    "usr": "s:5NEKit7DNSTypeO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.DNSType.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSType",
                        "printedName": "NEKit.DNSType",
                        "usr": "s:5NEKit7DNSTypeO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit7DNSTypeO7nsapptryA2CmF",
            "mangledName": "$s5NEKit7DNSTypeO7nsapptryA2CmF",
            "moduleName": "NEKit",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "sig",
            "printedName": "sig",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.DNSType.Type) -> NEKit.DNSType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSType",
                    "printedName": "NEKit.DNSType",
                    "usr": "s:5NEKit7DNSTypeO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.DNSType.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSType",
                        "printedName": "NEKit.DNSType",
                        "usr": "s:5NEKit7DNSTypeO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit7DNSTypeO3sigyA2CmF",
            "mangledName": "$s5NEKit7DNSTypeO3sigyA2CmF",
            "moduleName": "NEKit",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "key",
            "printedName": "key",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.DNSType.Type) -> NEKit.DNSType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSType",
                    "printedName": "NEKit.DNSType",
                    "usr": "s:5NEKit7DNSTypeO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.DNSType.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSType",
                        "printedName": "NEKit.DNSType",
                        "usr": "s:5NEKit7DNSTypeO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit7DNSTypeO3keyyA2CmF",
            "mangledName": "$s5NEKit7DNSTypeO3keyyA2CmF",
            "moduleName": "NEKit",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "px",
            "printedName": "px",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.DNSType.Type) -> NEKit.DNSType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSType",
                    "printedName": "NEKit.DNSType",
                    "usr": "s:5NEKit7DNSTypeO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.DNSType.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSType",
                        "printedName": "NEKit.DNSType",
                        "usr": "s:5NEKit7DNSTypeO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit7DNSTypeO2pxyA2CmF",
            "mangledName": "$s5NEKit7DNSTypeO2pxyA2CmF",
            "moduleName": "NEKit",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "gpos",
            "printedName": "gpos",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.DNSType.Type) -> NEKit.DNSType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSType",
                    "printedName": "NEKit.DNSType",
                    "usr": "s:5NEKit7DNSTypeO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.DNSType.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSType",
                        "printedName": "NEKit.DNSType",
                        "usr": "s:5NEKit7DNSTypeO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit7DNSTypeO4gposyA2CmF",
            "mangledName": "$s5NEKit7DNSTypeO4gposyA2CmF",
            "moduleName": "NEKit",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "aaaa",
            "printedName": "aaaa",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.DNSType.Type) -> NEKit.DNSType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSType",
                    "printedName": "NEKit.DNSType",
                    "usr": "s:5NEKit7DNSTypeO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.DNSType.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSType",
                        "printedName": "NEKit.DNSType",
                        "usr": "s:5NEKit7DNSTypeO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit7DNSTypeO4aaaayA2CmF",
            "mangledName": "$s5NEKit7DNSTypeO4aaaayA2CmF",
            "moduleName": "NEKit",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "loc",
            "printedName": "loc",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.DNSType.Type) -> NEKit.DNSType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSType",
                    "printedName": "NEKit.DNSType",
                    "usr": "s:5NEKit7DNSTypeO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.DNSType.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSType",
                        "printedName": "NEKit.DNSType",
                        "usr": "s:5NEKit7DNSTypeO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit7DNSTypeO3locyA2CmF",
            "mangledName": "$s5NEKit7DNSTypeO3locyA2CmF",
            "moduleName": "NEKit",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "nxt",
            "printedName": "nxt",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.DNSType.Type) -> NEKit.DNSType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSType",
                    "printedName": "NEKit.DNSType",
                    "usr": "s:5NEKit7DNSTypeO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.DNSType.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSType",
                        "printedName": "NEKit.DNSType",
                        "usr": "s:5NEKit7DNSTypeO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit7DNSTypeO3nxtyA2CmF",
            "mangledName": "$s5NEKit7DNSTypeO3nxtyA2CmF",
            "moduleName": "NEKit",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "eid",
            "printedName": "eid",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.DNSType.Type) -> NEKit.DNSType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSType",
                    "printedName": "NEKit.DNSType",
                    "usr": "s:5NEKit7DNSTypeO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.DNSType.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSType",
                        "printedName": "NEKit.DNSType",
                        "usr": "s:5NEKit7DNSTypeO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit7DNSTypeO3eidyA2CmF",
            "mangledName": "$s5NEKit7DNSTypeO3eidyA2CmF",
            "moduleName": "NEKit",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "nimloc",
            "printedName": "nimloc",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.DNSType.Type) -> NEKit.DNSType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSType",
                    "printedName": "NEKit.DNSType",
                    "usr": "s:5NEKit7DNSTypeO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.DNSType.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSType",
                        "printedName": "NEKit.DNSType",
                        "usr": "s:5NEKit7DNSTypeO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit7DNSTypeO6nimlocyA2CmF",
            "mangledName": "$s5NEKit7DNSTypeO6nimlocyA2CmF",
            "moduleName": "NEKit",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "srv",
            "printedName": "srv",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.DNSType.Type) -> NEKit.DNSType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSType",
                    "printedName": "NEKit.DNSType",
                    "usr": "s:5NEKit7DNSTypeO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.DNSType.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSType",
                        "printedName": "NEKit.DNSType",
                        "usr": "s:5NEKit7DNSTypeO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit7DNSTypeO3srvyA2CmF",
            "mangledName": "$s5NEKit7DNSTypeO3srvyA2CmF",
            "moduleName": "NEKit",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "atma",
            "printedName": "atma",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.DNSType.Type) -> NEKit.DNSType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSType",
                    "printedName": "NEKit.DNSType",
                    "usr": "s:5NEKit7DNSTypeO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.DNSType.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSType",
                        "printedName": "NEKit.DNSType",
                        "usr": "s:5NEKit7DNSTypeO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit7DNSTypeO4atmayA2CmF",
            "mangledName": "$s5NEKit7DNSTypeO4atmayA2CmF",
            "moduleName": "NEKit",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "naptr",
            "printedName": "naptr",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.DNSType.Type) -> NEKit.DNSType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSType",
                    "printedName": "NEKit.DNSType",
                    "usr": "s:5NEKit7DNSTypeO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.DNSType.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSType",
                        "printedName": "NEKit.DNSType",
                        "usr": "s:5NEKit7DNSTypeO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit7DNSTypeO5naptryA2CmF",
            "mangledName": "$s5NEKit7DNSTypeO5naptryA2CmF",
            "moduleName": "NEKit",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "kx",
            "printedName": "kx",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.DNSType.Type) -> NEKit.DNSType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSType",
                    "printedName": "NEKit.DNSType",
                    "usr": "s:5NEKit7DNSTypeO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.DNSType.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSType",
                        "printedName": "NEKit.DNSType",
                        "usr": "s:5NEKit7DNSTypeO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit7DNSTypeO2kxyA2CmF",
            "mangledName": "$s5NEKit7DNSTypeO2kxyA2CmF",
            "moduleName": "NEKit",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "cert",
            "printedName": "cert",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.DNSType.Type) -> NEKit.DNSType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSType",
                    "printedName": "NEKit.DNSType",
                    "usr": "s:5NEKit7DNSTypeO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.DNSType.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSType",
                        "printedName": "NEKit.DNSType",
                        "usr": "s:5NEKit7DNSTypeO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit7DNSTypeO4certyA2CmF",
            "mangledName": "$s5NEKit7DNSTypeO4certyA2CmF",
            "moduleName": "NEKit",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "a6",
            "printedName": "a6",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.DNSType.Type) -> NEKit.DNSType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSType",
                    "printedName": "NEKit.DNSType",
                    "usr": "s:5NEKit7DNSTypeO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.DNSType.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSType",
                        "printedName": "NEKit.DNSType",
                        "usr": "s:5NEKit7DNSTypeO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit7DNSTypeO2a6yA2CmF",
            "mangledName": "$s5NEKit7DNSTypeO2a6yA2CmF",
            "moduleName": "NEKit",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "dname",
            "printedName": "dname",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.DNSType.Type) -> NEKit.DNSType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSType",
                    "printedName": "NEKit.DNSType",
                    "usr": "s:5NEKit7DNSTypeO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.DNSType.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSType",
                        "printedName": "NEKit.DNSType",
                        "usr": "s:5NEKit7DNSTypeO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit7DNSTypeO5dnameyA2CmF",
            "mangledName": "$s5NEKit7DNSTypeO5dnameyA2CmF",
            "moduleName": "NEKit",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "sink",
            "printedName": "sink",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.DNSType.Type) -> NEKit.DNSType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSType",
                    "printedName": "NEKit.DNSType",
                    "usr": "s:5NEKit7DNSTypeO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.DNSType.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSType",
                        "printedName": "NEKit.DNSType",
                        "usr": "s:5NEKit7DNSTypeO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit7DNSTypeO4sinkyA2CmF",
            "mangledName": "$s5NEKit7DNSTypeO4sinkyA2CmF",
            "moduleName": "NEKit",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "opt",
            "printedName": "opt",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.DNSType.Type) -> NEKit.DNSType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSType",
                    "printedName": "NEKit.DNSType",
                    "usr": "s:5NEKit7DNSTypeO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.DNSType.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSType",
                        "printedName": "NEKit.DNSType",
                        "usr": "s:5NEKit7DNSTypeO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit7DNSTypeO3optyA2CmF",
            "mangledName": "$s5NEKit7DNSTypeO3optyA2CmF",
            "moduleName": "NEKit",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "apl",
            "printedName": "apl",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.DNSType.Type) -> NEKit.DNSType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSType",
                    "printedName": "NEKit.DNSType",
                    "usr": "s:5NEKit7DNSTypeO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.DNSType.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSType",
                        "printedName": "NEKit.DNSType",
                        "usr": "s:5NEKit7DNSTypeO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit7DNSTypeO3aplyA2CmF",
            "mangledName": "$s5NEKit7DNSTypeO3aplyA2CmF",
            "moduleName": "NEKit",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "ds",
            "printedName": "ds",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.DNSType.Type) -> NEKit.DNSType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSType",
                    "printedName": "NEKit.DNSType",
                    "usr": "s:5NEKit7DNSTypeO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.DNSType.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSType",
                        "printedName": "NEKit.DNSType",
                        "usr": "s:5NEKit7DNSTypeO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit7DNSTypeO2dsyA2CmF",
            "mangledName": "$s5NEKit7DNSTypeO2dsyA2CmF",
            "moduleName": "NEKit",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "sshfp",
            "printedName": "sshfp",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.DNSType.Type) -> NEKit.DNSType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSType",
                    "printedName": "NEKit.DNSType",
                    "usr": "s:5NEKit7DNSTypeO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.DNSType.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSType",
                        "printedName": "NEKit.DNSType",
                        "usr": "s:5NEKit7DNSTypeO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit7DNSTypeO5sshfpyA2CmF",
            "mangledName": "$s5NEKit7DNSTypeO5sshfpyA2CmF",
            "moduleName": "NEKit",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "rrsig",
            "printedName": "rrsig",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.DNSType.Type) -> NEKit.DNSType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSType",
                    "printedName": "NEKit.DNSType",
                    "usr": "s:5NEKit7DNSTypeO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.DNSType.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSType",
                        "printedName": "NEKit.DNSType",
                        "usr": "s:5NEKit7DNSTypeO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit7DNSTypeO5rrsigyA2CmF",
            "mangledName": "$s5NEKit7DNSTypeO5rrsigyA2CmF",
            "moduleName": "NEKit",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "nsec",
            "printedName": "nsec",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.DNSType.Type) -> NEKit.DNSType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSType",
                    "printedName": "NEKit.DNSType",
                    "usr": "s:5NEKit7DNSTypeO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.DNSType.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSType",
                        "printedName": "NEKit.DNSType",
                        "usr": "s:5NEKit7DNSTypeO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit7DNSTypeO4nsecyA2CmF",
            "mangledName": "$s5NEKit7DNSTypeO4nsecyA2CmF",
            "moduleName": "NEKit",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "dnskey",
            "printedName": "dnskey",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.DNSType.Type) -> NEKit.DNSType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSType",
                    "printedName": "NEKit.DNSType",
                    "usr": "s:5NEKit7DNSTypeO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.DNSType.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSType",
                        "printedName": "NEKit.DNSType",
                        "usr": "s:5NEKit7DNSTypeO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit7DNSTypeO6dnskeyyA2CmF",
            "mangledName": "$s5NEKit7DNSTypeO6dnskeyyA2CmF",
            "moduleName": "NEKit",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "tkey",
            "printedName": "tkey",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.DNSType.Type) -> NEKit.DNSType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSType",
                    "printedName": "NEKit.DNSType",
                    "usr": "s:5NEKit7DNSTypeO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.DNSType.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSType",
                        "printedName": "NEKit.DNSType",
                        "usr": "s:5NEKit7DNSTypeO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit7DNSTypeO4tkeyyA2CmF",
            "mangledName": "$s5NEKit7DNSTypeO4tkeyyA2CmF",
            "moduleName": "NEKit",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "tsig",
            "printedName": "tsig",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.DNSType.Type) -> NEKit.DNSType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSType",
                    "printedName": "NEKit.DNSType",
                    "usr": "s:5NEKit7DNSTypeO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.DNSType.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSType",
                        "printedName": "NEKit.DNSType",
                        "usr": "s:5NEKit7DNSTypeO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit7DNSTypeO4tsigyA2CmF",
            "mangledName": "$s5NEKit7DNSTypeO4tsigyA2CmF",
            "moduleName": "NEKit",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "ixfr",
            "printedName": "ixfr",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.DNSType.Type) -> NEKit.DNSType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSType",
                    "printedName": "NEKit.DNSType",
                    "usr": "s:5NEKit7DNSTypeO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.DNSType.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSType",
                        "printedName": "NEKit.DNSType",
                        "usr": "s:5NEKit7DNSTypeO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit7DNSTypeO4ixfryA2CmF",
            "mangledName": "$s5NEKit7DNSTypeO4ixfryA2CmF",
            "moduleName": "NEKit",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "axfr",
            "printedName": "axfr",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.DNSType.Type) -> NEKit.DNSType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSType",
                    "printedName": "NEKit.DNSType",
                    "usr": "s:5NEKit7DNSTypeO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.DNSType.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSType",
                        "printedName": "NEKit.DNSType",
                        "usr": "s:5NEKit7DNSTypeO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit7DNSTypeO4axfryA2CmF",
            "mangledName": "$s5NEKit7DNSTypeO4axfryA2CmF",
            "moduleName": "NEKit",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "mailb",
            "printedName": "mailb",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.DNSType.Type) -> NEKit.DNSType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSType",
                    "printedName": "NEKit.DNSType",
                    "usr": "s:5NEKit7DNSTypeO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.DNSType.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSType",
                        "printedName": "NEKit.DNSType",
                        "usr": "s:5NEKit7DNSTypeO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit7DNSTypeO5mailbyA2CmF",
            "mangledName": "$s5NEKit7DNSTypeO5mailbyA2CmF",
            "moduleName": "NEKit",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "maila",
            "printedName": "maila",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.DNSType.Type) -> NEKit.DNSType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSType",
                    "printedName": "NEKit.DNSType",
                    "usr": "s:5NEKit7DNSTypeO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.DNSType.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSType",
                        "printedName": "NEKit.DNSType",
                        "usr": "s:5NEKit7DNSTypeO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit7DNSTypeO5mailayA2CmF",
            "mangledName": "$s5NEKit7DNSTypeO5mailayA2CmF",
            "moduleName": "NEKit",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "any",
            "printedName": "any",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.DNSType.Type) -> NEKit.DNSType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSType",
                    "printedName": "NEKit.DNSType",
                    "usr": "s:5NEKit7DNSTypeO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.DNSType.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSType",
                        "printedName": "NEKit.DNSType",
                        "usr": "s:5NEKit7DNSTypeO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit7DNSTypeO3anyyA2CmF",
            "mangledName": "$s5NEKit7DNSTypeO3anyyA2CmF",
            "moduleName": "NEKit",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(rawValue:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "NEKit.DNSType?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSType",
                    "printedName": "NEKit.DNSType",
                    "usr": "s:5NEKit7DNSTypeO"
                  }
                ],
                "usr": "s:Sq"
              },
              {
                "kind": "TypeNominal",
                "name": "UInt16",
                "printedName": "Swift.UInt16",
                "usr": "s:s6UInt16V"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit7DNSTypeO8rawValueACSgs6UInt16V_tcfc",
            "mangledName": "$s5NEKit7DNSTypeO8rawValueACSgs6UInt16V_tcfc",
            "moduleName": "NEKit",
            "implicit": true,
            "init_kind": "Designated"
          },
          {
            "kind": "Var",
            "name": "rawValue",
            "printedName": "rawValue",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "UInt16",
                "printedName": "Swift.UInt16",
                "usr": "s:s6UInt16V"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit7DNSTypeO8rawValues6UInt16Vvp",
            "mangledName": "$s5NEKit7DNSTypeO8rawValues6UInt16Vvp",
            "moduleName": "NEKit",
            "implicit": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt16",
                    "printedName": "Swift.UInt16",
                    "usr": "s:s6UInt16V"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit7DNSTypeO8rawValues6UInt16Vvg",
                "mangledName": "$s5NEKit7DNSTypeO8rawValues6UInt16Vvg",
                "moduleName": "NEKit",
                "implicit": true,
                "accessorKind": "get"
              }
            ]
          }
        ],
        "declKind": "Enum",
        "usr": "s:5NEKit7DNSTypeO",
        "mangledName": "$s5NEKit7DNSTypeO",
        "moduleName": "NEKit",
        "declAttributes": [
          "AccessControl"
        ],
        "enumRawTypeName": "UInt16",
        "conformances": [
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "RawRepresentable",
            "printedName": "RawRepresentable",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "RawValue",
                "printedName": "RawValue",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt16",
                    "printedName": "Swift.UInt16",
                    "usr": "s:s6UInt16V"
                  }
                ]
              }
            ],
            "usr": "s:SY",
            "mangledName": "$sSY"
          }
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "DNSMessageType",
        "printedName": "DNSMessageType",
        "children": [
          {
            "kind": "Var",
            "name": "query",
            "printedName": "query",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.DNSMessageType.Type) -> NEKit.DNSMessageType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSMessageType",
                    "printedName": "NEKit.DNSMessageType",
                    "usr": "s:5NEKit14DNSMessageTypeO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.DNSMessageType.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSMessageType",
                        "printedName": "NEKit.DNSMessageType",
                        "usr": "s:5NEKit14DNSMessageTypeO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit14DNSMessageTypeO5queryyA2CmF",
            "mangledName": "$s5NEKit14DNSMessageTypeO5queryyA2CmF",
            "moduleName": "NEKit"
          },
          {
            "kind": "Var",
            "name": "response",
            "printedName": "response",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.DNSMessageType.Type) -> NEKit.DNSMessageType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSMessageType",
                    "printedName": "NEKit.DNSMessageType",
                    "usr": "s:5NEKit14DNSMessageTypeO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.DNSMessageType.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSMessageType",
                        "printedName": "NEKit.DNSMessageType",
                        "usr": "s:5NEKit14DNSMessageTypeO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit14DNSMessageTypeO8responseyA2CmF",
            "mangledName": "$s5NEKit14DNSMessageTypeO8responseyA2CmF",
            "moduleName": "NEKit"
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(rawValue:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "NEKit.DNSMessageType?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSMessageType",
                    "printedName": "NEKit.DNSMessageType",
                    "usr": "s:5NEKit14DNSMessageTypeO"
                  }
                ],
                "usr": "s:Sq"
              },
              {
                "kind": "TypeNominal",
                "name": "UInt8",
                "printedName": "Swift.UInt8",
                "usr": "s:s5UInt8V"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit14DNSMessageTypeO8rawValueACSgs5UInt8V_tcfc",
            "mangledName": "$s5NEKit14DNSMessageTypeO8rawValueACSgs5UInt8V_tcfc",
            "moduleName": "NEKit",
            "implicit": true,
            "init_kind": "Designated"
          },
          {
            "kind": "Var",
            "name": "rawValue",
            "printedName": "rawValue",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "UInt8",
                "printedName": "Swift.UInt8",
                "usr": "s:s5UInt8V"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit14DNSMessageTypeO8rawValues5UInt8Vvp",
            "mangledName": "$s5NEKit14DNSMessageTypeO8rawValues5UInt8Vvp",
            "moduleName": "NEKit",
            "implicit": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt8",
                    "printedName": "Swift.UInt8",
                    "usr": "s:s5UInt8V"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit14DNSMessageTypeO8rawValues5UInt8Vvg",
                "mangledName": "$s5NEKit14DNSMessageTypeO8rawValues5UInt8Vvg",
                "moduleName": "NEKit",
                "implicit": true,
                "accessorKind": "get"
              }
            ]
          }
        ],
        "declKind": "Enum",
        "usr": "s:5NEKit14DNSMessageTypeO",
        "mangledName": "$s5NEKit14DNSMessageTypeO",
        "moduleName": "NEKit",
        "declAttributes": [
          "AccessControl"
        ],
        "enumRawTypeName": "UInt8",
        "conformances": [
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "RawRepresentable",
            "printedName": "RawRepresentable",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "RawValue",
                "printedName": "RawValue",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt8",
                    "printedName": "Swift.UInt8",
                    "usr": "s:s5UInt8V"
                  }
                ]
              }
            ],
            "usr": "s:SY",
            "mangledName": "$sSY"
          }
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "DNSReturnStatus",
        "printedName": "DNSReturnStatus",
        "children": [
          {
            "kind": "Var",
            "name": "success",
            "printedName": "success",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.DNSReturnStatus.Type) -> NEKit.DNSReturnStatus",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSReturnStatus",
                    "printedName": "NEKit.DNSReturnStatus",
                    "usr": "s:5NEKit15DNSReturnStatusO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.DNSReturnStatus.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSReturnStatus",
                        "printedName": "NEKit.DNSReturnStatus",
                        "usr": "s:5NEKit15DNSReturnStatusO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit15DNSReturnStatusO7successyA2CmF",
            "mangledName": "$s5NEKit15DNSReturnStatusO7successyA2CmF",
            "moduleName": "NEKit"
          },
          {
            "kind": "Var",
            "name": "formatError",
            "printedName": "formatError",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.DNSReturnStatus.Type) -> NEKit.DNSReturnStatus",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSReturnStatus",
                    "printedName": "NEKit.DNSReturnStatus",
                    "usr": "s:5NEKit15DNSReturnStatusO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.DNSReturnStatus.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSReturnStatus",
                        "printedName": "NEKit.DNSReturnStatus",
                        "usr": "s:5NEKit15DNSReturnStatusO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit15DNSReturnStatusO11formatErroryA2CmF",
            "mangledName": "$s5NEKit15DNSReturnStatusO11formatErroryA2CmF",
            "moduleName": "NEKit"
          },
          {
            "kind": "Var",
            "name": "serverFailure",
            "printedName": "serverFailure",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.DNSReturnStatus.Type) -> NEKit.DNSReturnStatus",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSReturnStatus",
                    "printedName": "NEKit.DNSReturnStatus",
                    "usr": "s:5NEKit15DNSReturnStatusO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.DNSReturnStatus.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSReturnStatus",
                        "printedName": "NEKit.DNSReturnStatus",
                        "usr": "s:5NEKit15DNSReturnStatusO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit15DNSReturnStatusO13serverFailureyA2CmF",
            "mangledName": "$s5NEKit15DNSReturnStatusO13serverFailureyA2CmF",
            "moduleName": "NEKit"
          },
          {
            "kind": "Var",
            "name": "nameError",
            "printedName": "nameError",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.DNSReturnStatus.Type) -> NEKit.DNSReturnStatus",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSReturnStatus",
                    "printedName": "NEKit.DNSReturnStatus",
                    "usr": "s:5NEKit15DNSReturnStatusO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.DNSReturnStatus.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSReturnStatus",
                        "printedName": "NEKit.DNSReturnStatus",
                        "usr": "s:5NEKit15DNSReturnStatusO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit15DNSReturnStatusO9nameErroryA2CmF",
            "mangledName": "$s5NEKit15DNSReturnStatusO9nameErroryA2CmF",
            "moduleName": "NEKit"
          },
          {
            "kind": "Var",
            "name": "notImplemented",
            "printedName": "notImplemented",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.DNSReturnStatus.Type) -> NEKit.DNSReturnStatus",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSReturnStatus",
                    "printedName": "NEKit.DNSReturnStatus",
                    "usr": "s:5NEKit15DNSReturnStatusO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.DNSReturnStatus.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSReturnStatus",
                        "printedName": "NEKit.DNSReturnStatus",
                        "usr": "s:5NEKit15DNSReturnStatusO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit15DNSReturnStatusO14notImplementedyA2CmF",
            "mangledName": "$s5NEKit15DNSReturnStatusO14notImplementedyA2CmF",
            "moduleName": "NEKit"
          },
          {
            "kind": "Var",
            "name": "refused",
            "printedName": "refused",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.DNSReturnStatus.Type) -> NEKit.DNSReturnStatus",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSReturnStatus",
                    "printedName": "NEKit.DNSReturnStatus",
                    "usr": "s:5NEKit15DNSReturnStatusO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.DNSReturnStatus.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSReturnStatus",
                        "printedName": "NEKit.DNSReturnStatus",
                        "usr": "s:5NEKit15DNSReturnStatusO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit15DNSReturnStatusO7refusedyA2CmF",
            "mangledName": "$s5NEKit15DNSReturnStatusO7refusedyA2CmF",
            "moduleName": "NEKit"
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(rawValue:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "NEKit.DNSReturnStatus?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSReturnStatus",
                    "printedName": "NEKit.DNSReturnStatus",
                    "usr": "s:5NEKit15DNSReturnStatusO"
                  }
                ],
                "usr": "s:Sq"
              },
              {
                "kind": "TypeNominal",
                "name": "UInt8",
                "printedName": "Swift.UInt8",
                "usr": "s:s5UInt8V"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit15DNSReturnStatusO8rawValueACSgs5UInt8V_tcfc",
            "mangledName": "$s5NEKit15DNSReturnStatusO8rawValueACSgs5UInt8V_tcfc",
            "moduleName": "NEKit",
            "implicit": true,
            "init_kind": "Designated"
          },
          {
            "kind": "Var",
            "name": "rawValue",
            "printedName": "rawValue",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "UInt8",
                "printedName": "Swift.UInt8",
                "usr": "s:s5UInt8V"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit15DNSReturnStatusO8rawValues5UInt8Vvp",
            "mangledName": "$s5NEKit15DNSReturnStatusO8rawValues5UInt8Vvp",
            "moduleName": "NEKit",
            "implicit": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt8",
                    "printedName": "Swift.UInt8",
                    "usr": "s:s5UInt8V"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit15DNSReturnStatusO8rawValues5UInt8Vvg",
                "mangledName": "$s5NEKit15DNSReturnStatusO8rawValues5UInt8Vvg",
                "moduleName": "NEKit",
                "implicit": true,
                "accessorKind": "get"
              }
            ]
          }
        ],
        "declKind": "Enum",
        "usr": "s:5NEKit15DNSReturnStatusO",
        "mangledName": "$s5NEKit15DNSReturnStatusO",
        "moduleName": "NEKit",
        "declAttributes": [
          "AccessControl"
        ],
        "enumRawTypeName": "UInt8",
        "conformances": [
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "RawRepresentable",
            "printedName": "RawRepresentable",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "RawValue",
                "printedName": "RawValue",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt8",
                    "printedName": "Swift.UInt8",
                    "usr": "s:s5UInt8V"
                  }
                ]
              }
            ],
            "usr": "s:SY",
            "mangledName": "$sSY"
          }
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "DNSClass",
        "printedName": "DNSClass",
        "children": [
          {
            "kind": "Var",
            "name": "internet",
            "printedName": "internet",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.DNSClass.Type) -> NEKit.DNSClass",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSClass",
                    "printedName": "NEKit.DNSClass",
                    "usr": "s:5NEKit8DNSClassO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.DNSClass.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSClass",
                        "printedName": "NEKit.DNSClass",
                        "usr": "s:5NEKit8DNSClassO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit8DNSClassO8internetyA2CmF",
            "mangledName": "$s5NEKit8DNSClassO8internetyA2CmF",
            "moduleName": "NEKit"
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(rawValue:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "NEKit.DNSClass?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSClass",
                    "printedName": "NEKit.DNSClass",
                    "usr": "s:5NEKit8DNSClassO"
                  }
                ],
                "usr": "s:Sq"
              },
              {
                "kind": "TypeNominal",
                "name": "UInt16",
                "printedName": "Swift.UInt16",
                "usr": "s:s6UInt16V"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit8DNSClassO8rawValueACSgs6UInt16V_tcfc",
            "mangledName": "$s5NEKit8DNSClassO8rawValueACSgs6UInt16V_tcfc",
            "moduleName": "NEKit",
            "implicit": true,
            "init_kind": "Designated"
          },
          {
            "kind": "Var",
            "name": "rawValue",
            "printedName": "rawValue",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "UInt16",
                "printedName": "Swift.UInt16",
                "usr": "s:s6UInt16V"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit8DNSClassO8rawValues6UInt16Vvp",
            "mangledName": "$s5NEKit8DNSClassO8rawValues6UInt16Vvp",
            "moduleName": "NEKit",
            "implicit": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt16",
                    "printedName": "Swift.UInt16",
                    "usr": "s:s6UInt16V"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit8DNSClassO8rawValues6UInt16Vvg",
                "mangledName": "$s5NEKit8DNSClassO8rawValues6UInt16Vvg",
                "moduleName": "NEKit",
                "implicit": true,
                "accessorKind": "get"
              }
            ]
          }
        ],
        "declKind": "Enum",
        "usr": "s:5NEKit8DNSClassO",
        "mangledName": "$s5NEKit8DNSClassO",
        "moduleName": "NEKit",
        "declAttributes": [
          "AccessControl"
        ],
        "enumRawTypeName": "UInt16",
        "conformances": [
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "RawRepresentable",
            "printedName": "RawRepresentable",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "RawValue",
                "printedName": "RawValue",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt16",
                    "printedName": "Swift.UInt16",
                    "usr": "s:s6UInt16V"
                  }
                ]
              }
            ],
            "usr": "s:SY",
            "mangledName": "$sSY"
          }
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "TypeDecl",
        "name": "RuleMatchEvent",
        "printedName": "RuleMatchEvent",
        "children": [
          {
            "kind": "Var",
            "name": "description",
            "printedName": "description",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit14RuleMatchEventO11descriptionSSvp",
            "mangledName": "$s5NEKit14RuleMatchEventO11descriptionSSvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit14RuleMatchEventO11descriptionSSvg",
                "mangledName": "$s5NEKit14RuleMatchEventO11descriptionSSvg",
                "moduleName": "NEKit",
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "ruleMatched",
            "printedName": "ruleMatched",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.RuleMatchEvent.Type) -> (NEKit.ConnectSession, NEKit.Rule) -> NEKit.RuleMatchEvent",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(NEKit.ConnectSession, NEKit.Rule) -> NEKit.RuleMatchEvent",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "RuleMatchEvent",
                        "printedName": "NEKit.RuleMatchEvent",
                        "usr": "s:5NEKit14RuleMatchEventO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Tuple",
                        "printedName": "(NEKit.ConnectSession, rule: NEKit.Rule)",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "ConnectSession",
                            "printedName": "NEKit.ConnectSession",
                            "usr": "s:5NEKit14ConnectSessionC"
                          },
                          {
                            "kind": "TypeNominal",
                            "name": "Rule",
                            "printedName": "NEKit.Rule",
                            "usr": "s:5NEKit4RuleC"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.RuleMatchEvent.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "RuleMatchEvent",
                        "printedName": "NEKit.RuleMatchEvent",
                        "usr": "s:5NEKit14RuleMatchEventO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit14RuleMatchEventO11ruleMatchedyAcA14ConnectSessionC_AA0B0CtcACmF",
            "mangledName": "$s5NEKit14RuleMatchEventO11ruleMatchedyAcA14ConnectSessionC_AA0B0CtcACmF",
            "moduleName": "NEKit"
          },
          {
            "kind": "Var",
            "name": "ruleDidNotMatch",
            "printedName": "ruleDidNotMatch",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.RuleMatchEvent.Type) -> (NEKit.ConnectSession, NEKit.Rule) -> NEKit.RuleMatchEvent",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(NEKit.ConnectSession, NEKit.Rule) -> NEKit.RuleMatchEvent",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "RuleMatchEvent",
                        "printedName": "NEKit.RuleMatchEvent",
                        "usr": "s:5NEKit14RuleMatchEventO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Tuple",
                        "printedName": "(NEKit.ConnectSession, rule: NEKit.Rule)",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "ConnectSession",
                            "printedName": "NEKit.ConnectSession",
                            "usr": "s:5NEKit14ConnectSessionC"
                          },
                          {
                            "kind": "TypeNominal",
                            "name": "Rule",
                            "printedName": "NEKit.Rule",
                            "usr": "s:5NEKit4RuleC"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.RuleMatchEvent.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "RuleMatchEvent",
                        "printedName": "NEKit.RuleMatchEvent",
                        "usr": "s:5NEKit14RuleMatchEventO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit14RuleMatchEventO010ruleDidNotC0yAcA14ConnectSessionC_AA0B0CtcACmF",
            "mangledName": "$s5NEKit14RuleMatchEventO010ruleDidNotC0yAcA14ConnectSessionC_AA0B0CtcACmF",
            "moduleName": "NEKit"
          },
          {
            "kind": "Var",
            "name": "dnsRuleMatched",
            "printedName": "dnsRuleMatched",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.RuleMatchEvent.Type) -> (NEKit.DNSSession, NEKit.Rule, NEKit.DNSSessionMatchType, NEKit.DNSSessionMatchResult) -> NEKit.RuleMatchEvent",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(NEKit.DNSSession, NEKit.Rule, NEKit.DNSSessionMatchType, NEKit.DNSSessionMatchResult) -> NEKit.RuleMatchEvent",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "RuleMatchEvent",
                        "printedName": "NEKit.RuleMatchEvent",
                        "usr": "s:5NEKit14RuleMatchEventO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Tuple",
                        "printedName": "(NEKit.DNSSession, rule: NEKit.Rule, type: NEKit.DNSSessionMatchType, result: NEKit.DNSSessionMatchResult)",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "DNSSession",
                            "printedName": "NEKit.DNSSession",
                            "usr": "s:5NEKit10DNSSessionC"
                          },
                          {
                            "kind": "TypeNominal",
                            "name": "Rule",
                            "printedName": "NEKit.Rule",
                            "usr": "s:5NEKit4RuleC"
                          },
                          {
                            "kind": "TypeNominal",
                            "name": "DNSSessionMatchType",
                            "printedName": "NEKit.DNSSessionMatchType",
                            "usr": "s:5NEKit19DNSSessionMatchTypeO"
                          },
                          {
                            "kind": "TypeNominal",
                            "name": "DNSSessionMatchResult",
                            "printedName": "NEKit.DNSSessionMatchResult",
                            "usr": "s:5NEKit21DNSSessionMatchResultO"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.RuleMatchEvent.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "RuleMatchEvent",
                        "printedName": "NEKit.RuleMatchEvent",
                        "usr": "s:5NEKit14RuleMatchEventO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit14RuleMatchEventO03dnsB7MatchedyAcA10DNSSessionC_AA0B0CAA0gC4TypeOAA0gC6ResultOtcACmF",
            "mangledName": "$s5NEKit14RuleMatchEventO03dnsB7MatchedyAcA10DNSSessionC_AA0B0CAA0gC4TypeOAA0gC6ResultOtcACmF",
            "moduleName": "NEKit"
          }
        ],
        "declKind": "Enum",
        "usr": "s:5NEKit14RuleMatchEventO",
        "mangledName": "$s5NEKit14RuleMatchEventO",
        "moduleName": "NEKit",
        "declAttributes": [
          "AccessControl"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "EventType",
            "printedName": "EventType",
            "usr": "s:5NEKit9EventTypeP",
            "mangledName": "$s5NEKit9EventTypeP"
          },
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          }
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "TypeDecl",
        "name": "GCDHTTPProxyServer",
        "printedName": "GCDHTTPProxyServer",
        "children": [
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(address:port:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GCDHTTPProxyServer",
                "printedName": "NEKit.GCDHTTPProxyServer",
                "usr": "c:@M@NEKit@objc(cs)GCDHTTPProxyServer"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "NEKit.IPAddress?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "IPAddress",
                    "printedName": "NEKit.IPAddress",
                    "usr": "s:5NEKit9IPAddressC"
                  }
                ],
                "usr": "s:Sq"
              },
              {
                "kind": "TypeNominal",
                "name": "Port",
                "printedName": "NEKit.Port",
                "usr": "s:5NEKit4PortV"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit18GCDHTTPProxyServerC7address4portAcA9IPAddressCSg_AA4PortVtcfc",
            "mangledName": "$s5NEKit18GCDHTTPProxyServerC7address4portAcA9IPAddressCSg_AA4PortVtcfc",
            "moduleName": "NEKit",
            "overriding": true,
            "declAttributes": [
              "AccessControl",
              "Override",
              "RawDocComment"
            ],
            "init_kind": "Designated"
          },
          {
            "kind": "Function",
            "name": "refreshDomains",
            "printedName": "refreshDomains()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit18GCDHTTPProxyServerC14refreshDomainsyyF",
            "mangledName": "$s5NEKit18GCDHTTPProxyServerC14refreshDomainsyyF",
            "moduleName": "NEKit",
            "declAttributes": [
              "Final",
              "AccessControl"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "handleNewGCDSocket",
            "printedName": "handleNewGCDSocket(_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "GCDTCPSocket",
                "printedName": "NEKit.GCDTCPSocket",
                "usr": "c:@M@NEKit@objc(cs)GCDTCPSocket"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit18GCDHTTPProxyServerC18handleNewGCDSocketyyAA12GCDTCPSocketCF",
            "mangledName": "$s5NEKit18GCDHTTPProxyServerC18handleNewGCDSocketyyAA12GCDTCPSocketCF",
            "moduleName": "NEKit",
            "overriding": true,
            "declAttributes": [
              "Final",
              "AccessControl",
              "Override",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          }
        ],
        "declKind": "Class",
        "usr": "c:@M@NEKit@objc(cs)GCDHTTPProxyServer",
        "mangledName": "$s5NEKit18GCDHTTPProxyServerC",
        "moduleName": "NEKit",
        "declAttributes": [
          "Final",
          "AccessControl",
          "RawDocComment",
          "ObjC"
        ],
        "superclassUsr": "c:@M@NEKit@objc(cs)GCDProxyServer",
        "inheritsConvenienceInitializers": true,
        "superclassNames": [
          "NEKit.GCDProxyServer",
          "NEKit.ProxyServer",
          "ObjectiveC.NSObject"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "CVarArg",
            "printedName": "CVarArg",
            "usr": "s:s7CVarArgP",
            "mangledName": "$ss7CVarArgP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObservingPublishing",
            "printedName": "_KeyValueCodingAndObservingPublishing",
            "usr": "s:10Foundation37_KeyValueCodingAndObservingPublishingP",
            "mangledName": "$s10Foundation37_KeyValueCodingAndObservingPublishingP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObserving",
            "printedName": "_KeyValueCodingAndObserving",
            "usr": "s:10Foundation27_KeyValueCodingAndObservingP",
            "mangledName": "$s10Foundation27_KeyValueCodingAndObservingP"
          },
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "CustomDebugStringConvertible",
            "printedName": "CustomDebugStringConvertible",
            "usr": "s:s28CustomDebugStringConvertibleP",
            "mangledName": "$ss28CustomDebugStringConvertibleP"
          }
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "Import",
        "name": "NetworkExtension",
        "printedName": "NetworkExtension",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "TypeDecl",
        "name": "TUNInterface",
        "printedName": "TUNInterface",
        "children": [
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(packetFlow:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "TUNInterface",
                "printedName": "NEKit.TUNInterface",
                "usr": "s:5NEKit12TUNInterfaceC"
              },
              {
                "kind": "TypeNominal",
                "name": "NEPacketTunnelFlow",
                "printedName": "NetworkExtension.NEPacketTunnelFlow",
                "usr": "c:objc(cs)NEPacketTunnelFlow"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit12TUNInterfaceC10packetFlowACSo014NEPacketTunnelD0C_tcfc",
            "mangledName": "$s5NEKit12TUNInterfaceC10packetFlowACSo014NEPacketTunnelD0C_tcfc",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "init_kind": "Designated"
          },
          {
            "kind": "Function",
            "name": "start",
            "printedName": "start()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit12TUNInterfaceC5startyyF",
            "mangledName": "$s5NEKit12TUNInterfaceC5startyyF",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "stop",
            "printedName": "stop()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit12TUNInterfaceC4stopyyF",
            "mangledName": "$s5NEKit12TUNInterfaceC4stopyyF",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "register",
            "printedName": "register(stack:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "IPStackProtocol",
                "printedName": "NEKit.IPStackProtocol",
                "usr": "s:5NEKit15IPStackProtocolP"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit12TUNInterfaceC8register5stackyAA15IPStackProtocol_p_tF",
            "mangledName": "$s5NEKit12TUNInterfaceC8register5stackyAA15IPStackProtocol_p_tF",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          }
        ],
        "declKind": "Class",
        "usr": "s:5NEKit12TUNInterfaceC",
        "mangledName": "$s5NEKit12TUNInterfaceC",
        "moduleName": "NEKit",
        "isOpen": true,
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "TypeDecl",
        "name": "Port",
        "printedName": "Port",
        "children": [
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(portInNetworkOrder:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Port",
                "printedName": "NEKit.Port",
                "usr": "s:5NEKit4PortV"
              },
              {
                "kind": "TypeNominal",
                "name": "UInt16",
                "printedName": "Swift.UInt16",
                "usr": "s:s6UInt16V"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit4PortV18portInNetworkOrderACs6UInt16V_tcfc",
            "mangledName": "$s5NEKit4PortV18portInNetworkOrderACs6UInt16V_tcfc",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "init_kind": "Designated"
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(port:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Port",
                "printedName": "NEKit.Port",
                "usr": "s:5NEKit4PortV"
              },
              {
                "kind": "TypeNominal",
                "name": "UInt16",
                "printedName": "Swift.UInt16",
                "usr": "s:s6UInt16V"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit4PortV4portACs6UInt16V_tcfc",
            "mangledName": "$s5NEKit4PortV4portACs6UInt16V_tcfc",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "init_kind": "Designated"
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(integerLiteral:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Port",
                "printedName": "NEKit.Port",
                "usr": "s:5NEKit4PortV"
              },
              {
                "kind": "TypeNominal",
                "name": "UInt16",
                "printedName": "Swift.UInt16",
                "usr": "s:s6UInt16V"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit4PortV14integerLiteralACs6UInt16V_tcfc",
            "mangledName": "$s5NEKit4PortV14integerLiteralACs6UInt16V_tcfc",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "init_kind": "Designated"
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(bytesInNetworkOrder:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Port",
                "printedName": "NEKit.Port",
                "usr": "s:5NEKit4PortV"
              },
              {
                "kind": "TypeNominal",
                "name": "UnsafeRawPointer",
                "printedName": "Swift.UnsafeRawPointer",
                "usr": "s:SV"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit4PortV19bytesInNetworkOrderACSV_tcfc",
            "mangledName": "$s5NEKit4PortV19bytesInNetworkOrderACSV_tcfc",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "init_kind": "Designated"
          },
          {
            "kind": "Var",
            "name": "description",
            "printedName": "description",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit4PortV11descriptionSSvp",
            "mangledName": "$s5NEKit4PortV11descriptionSSvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit4PortV11descriptionSSvg",
                "mangledName": "$s5NEKit4PortV11descriptionSSvg",
                "moduleName": "NEKit",
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "value",
            "printedName": "value",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "UInt16",
                "printedName": "Swift.UInt16",
                "usr": "s:s6UInt16V"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit4PortV5values6UInt16Vvp",
            "mangledName": "$s5NEKit4PortV5values6UInt16Vvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt16",
                    "printedName": "Swift.UInt16",
                    "usr": "s:s6UInt16V"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit4PortV5values6UInt16Vvg",
                "mangledName": "$s5NEKit4PortV5values6UInt16Vvg",
                "moduleName": "NEKit",
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "valueInNetworkOrder",
            "printedName": "valueInNetworkOrder",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "UInt16",
                "printedName": "Swift.UInt16",
                "usr": "s:s6UInt16V"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit4PortV19valueInNetworkOrders6UInt16Vvp",
            "mangledName": "$s5NEKit4PortV19valueInNetworkOrders6UInt16Vvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt16",
                    "printedName": "Swift.UInt16",
                    "usr": "s:s6UInt16V"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit4PortV19valueInNetworkOrders6UInt16Vvg",
                "mangledName": "$s5NEKit4PortV19valueInNetworkOrders6UInt16Vvg",
                "moduleName": "NEKit",
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Function",
            "name": "withUnsafeBufferPointer",
            "printedName": "withUnsafeBufferPointer(_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              },
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(Swift.UnsafeRawBufferPointer) -> τ_0_0",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "UnsafeRawBufferPointer",
                    "printedName": "Swift.UnsafeRawBufferPointer",
                    "usr": "s:SW"
                  }
                ],
                "typeAttributes": [
                  "noescape"
                ]
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit4PortV23withUnsafeBufferPointeryxxSWXElF",
            "mangledName": "$s5NEKit4PortV23withUnsafeBufferPointeryxxSWXElF",
            "moduleName": "NEKit",
            "genericSig": "<τ_0_0>",
            "sugared_genericSig": "<T>",
            "declAttributes": [
              "Mutating",
              "AccessControl",
              "RawDocComment"
            ],
            "funcSelfKind": "Mutating"
          },
          {
            "kind": "Var",
            "name": "hashValue",
            "printedName": "hashValue",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit4PortV9hashValueSivp",
            "mangledName": "$s5NEKit4PortV9hashValueSivp",
            "moduleName": "NEKit",
            "implicit": true,
            "isFromExtension": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit4PortV9hashValueSivg",
                "mangledName": "$s5NEKit4PortV9hashValueSivg",
                "moduleName": "NEKit",
                "implicit": true,
                "isFromExtension": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Function",
            "name": "hash",
            "printedName": "hash(into:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Hasher",
                "printedName": "Swift.Hasher",
                "paramValueOwnership": "InOut",
                "usr": "s:s6HasherV"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit4PortV4hash4intoys6HasherVz_tF",
            "mangledName": "$s5NEKit4PortV4hash4intoys6HasherVz_tF",
            "moduleName": "NEKit",
            "implicit": true,
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          }
        ],
        "declKind": "Struct",
        "usr": "s:5NEKit4PortV",
        "mangledName": "$s5NEKit4PortV",
        "moduleName": "NEKit",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "ExpressibleByIntegerLiteral",
            "printedName": "ExpressibleByIntegerLiteral",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "IntegerLiteralType",
                "printedName": "IntegerLiteralType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt16",
                    "printedName": "Swift.UInt16",
                    "usr": "s:s6UInt16V"
                  }
                ]
              }
            ],
            "usr": "s:s27ExpressibleByIntegerLiteralP",
            "mangledName": "$ss27ExpressibleByIntegerLiteralP"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          }
        ]
      },
      {
        "kind": "Function",
        "name": "==",
        "printedName": "==(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Bool",
            "printedName": "Swift.Bool",
            "usr": "s:Sb"
          },
          {
            "kind": "TypeNominal",
            "name": "Port",
            "printedName": "NEKit.Port",
            "usr": "s:5NEKit4PortV"
          },
          {
            "kind": "TypeNominal",
            "name": "Port",
            "printedName": "NEKit.Port",
            "usr": "s:5NEKit4PortV"
          }
        ],
        "declKind": "Func",
        "usr": "s:5NEKit2eeoiySbAA4PortV_ADtF",
        "mangledName": "$s5NEKit2eeoiySbAA4PortV_ADtF",
        "moduleName": "NEKit",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "Import",
        "name": "Resolver",
        "printedName": "Resolver",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "TypeDecl",
        "name": "Tunnel",
        "printedName": "Tunnel",
        "children": [
          {
            "kind": "TypeDecl",
            "name": "TunnelStatus",
            "printedName": "TunnelStatus",
            "children": [
              {
                "kind": "Var",
                "name": "invalid",
                "printedName": "invalid",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(NEKit.Tunnel.TunnelStatus.Type) -> NEKit.Tunnel.TunnelStatus",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "TunnelStatus",
                        "printedName": "NEKit.Tunnel.TunnelStatus",
                        "usr": "s:5NEKit6TunnelC0B6StatusO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Metatype",
                        "printedName": "NEKit.Tunnel.TunnelStatus.Type",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "TunnelStatus",
                            "printedName": "NEKit.Tunnel.TunnelStatus",
                            "usr": "s:5NEKit6TunnelC0B6StatusO"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "declKind": "EnumElement",
                "usr": "s:5NEKit6TunnelC0B6StatusO7invalidyA2EmF",
                "mangledName": "$s5NEKit6TunnelC0B6StatusO7invalidyA2EmF",
                "moduleName": "NEKit"
              },
              {
                "kind": "Var",
                "name": "readingRequest",
                "printedName": "readingRequest",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(NEKit.Tunnel.TunnelStatus.Type) -> NEKit.Tunnel.TunnelStatus",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "TunnelStatus",
                        "printedName": "NEKit.Tunnel.TunnelStatus",
                        "usr": "s:5NEKit6TunnelC0B6StatusO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Metatype",
                        "printedName": "NEKit.Tunnel.TunnelStatus.Type",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "TunnelStatus",
                            "printedName": "NEKit.Tunnel.TunnelStatus",
                            "usr": "s:5NEKit6TunnelC0B6StatusO"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "declKind": "EnumElement",
                "usr": "s:5NEKit6TunnelC0B6StatusO14readingRequestyA2EmF",
                "mangledName": "$s5NEKit6TunnelC0B6StatusO14readingRequestyA2EmF",
                "moduleName": "NEKit"
              },
              {
                "kind": "Var",
                "name": "waitingToBeReady",
                "printedName": "waitingToBeReady",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(NEKit.Tunnel.TunnelStatus.Type) -> NEKit.Tunnel.TunnelStatus",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "TunnelStatus",
                        "printedName": "NEKit.Tunnel.TunnelStatus",
                        "usr": "s:5NEKit6TunnelC0B6StatusO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Metatype",
                        "printedName": "NEKit.Tunnel.TunnelStatus.Type",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "TunnelStatus",
                            "printedName": "NEKit.Tunnel.TunnelStatus",
                            "usr": "s:5NEKit6TunnelC0B6StatusO"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "declKind": "EnumElement",
                "usr": "s:5NEKit6TunnelC0B6StatusO16waitingToBeReadyyA2EmF",
                "mangledName": "$s5NEKit6TunnelC0B6StatusO16waitingToBeReadyyA2EmF",
                "moduleName": "NEKit"
              },
              {
                "kind": "Var",
                "name": "forwarding",
                "printedName": "forwarding",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(NEKit.Tunnel.TunnelStatus.Type) -> NEKit.Tunnel.TunnelStatus",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "TunnelStatus",
                        "printedName": "NEKit.Tunnel.TunnelStatus",
                        "usr": "s:5NEKit6TunnelC0B6StatusO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Metatype",
                        "printedName": "NEKit.Tunnel.TunnelStatus.Type",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "TunnelStatus",
                            "printedName": "NEKit.Tunnel.TunnelStatus",
                            "usr": "s:5NEKit6TunnelC0B6StatusO"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "declKind": "EnumElement",
                "usr": "s:5NEKit6TunnelC0B6StatusO10forwardingyA2EmF",
                "mangledName": "$s5NEKit6TunnelC0B6StatusO10forwardingyA2EmF",
                "moduleName": "NEKit"
              },
              {
                "kind": "Var",
                "name": "closing",
                "printedName": "closing",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(NEKit.Tunnel.TunnelStatus.Type) -> NEKit.Tunnel.TunnelStatus",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "TunnelStatus",
                        "printedName": "NEKit.Tunnel.TunnelStatus",
                        "usr": "s:5NEKit6TunnelC0B6StatusO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Metatype",
                        "printedName": "NEKit.Tunnel.TunnelStatus.Type",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "TunnelStatus",
                            "printedName": "NEKit.Tunnel.TunnelStatus",
                            "usr": "s:5NEKit6TunnelC0B6StatusO"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "declKind": "EnumElement",
                "usr": "s:5NEKit6TunnelC0B6StatusO7closingyA2EmF",
                "mangledName": "$s5NEKit6TunnelC0B6StatusO7closingyA2EmF",
                "moduleName": "NEKit"
              },
              {
                "kind": "Var",
                "name": "closed",
                "printedName": "closed",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(NEKit.Tunnel.TunnelStatus.Type) -> NEKit.Tunnel.TunnelStatus",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "TunnelStatus",
                        "printedName": "NEKit.Tunnel.TunnelStatus",
                        "usr": "s:5NEKit6TunnelC0B6StatusO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Metatype",
                        "printedName": "NEKit.Tunnel.TunnelStatus.Type",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "TunnelStatus",
                            "printedName": "NEKit.Tunnel.TunnelStatus",
                            "usr": "s:5NEKit6TunnelC0B6StatusO"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "declKind": "EnumElement",
                "usr": "s:5NEKit6TunnelC0B6StatusO6closedyA2EmF",
                "mangledName": "$s5NEKit6TunnelC0B6StatusO6closedyA2EmF",
                "moduleName": "NEKit"
              },
              {
                "kind": "Var",
                "name": "description",
                "printedName": "description",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Var",
                "usr": "s:5NEKit6TunnelC0B6StatusO11descriptionSSvp",
                "mangledName": "$s5NEKit6TunnelC0B6StatusO11descriptionSSvp",
                "moduleName": "NEKit",
                "declAttributes": [
                  "AccessControl"
                ],
                "accessors": [
                  {
                    "kind": "Accessor",
                    "name": "Get",
                    "printedName": "Get()",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "String",
                        "printedName": "Swift.String",
                        "usr": "s:SS"
                      }
                    ],
                    "declKind": "Accessor",
                    "usr": "s:5NEKit6TunnelC0B6StatusO11descriptionSSvg",
                    "mangledName": "$s5NEKit6TunnelC0B6StatusO11descriptionSSvg",
                    "moduleName": "NEKit",
                    "accessorKind": "get"
                  }
                ]
              },
              {
                "kind": "Function",
                "name": "==",
                "printedName": "==(_:_:)",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Bool",
                    "printedName": "Swift.Bool",
                    "usr": "s:Sb"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "TunnelStatus",
                    "printedName": "NEKit.Tunnel.TunnelStatus",
                    "usr": "s:5NEKit6TunnelC0B6StatusO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "TunnelStatus",
                    "printedName": "NEKit.Tunnel.TunnelStatus",
                    "usr": "s:5NEKit6TunnelC0B6StatusO"
                  }
                ],
                "declKind": "Func",
                "usr": "s:5NEKit6TunnelC0B6StatusO2eeoiySbAE_AEtFZ",
                "mangledName": "$s5NEKit6TunnelC0B6StatusO2eeoiySbAE_AEtFZ",
                "moduleName": "NEKit",
                "static": true,
                "implicit": true,
                "funcSelfKind": "NonMutating"
              },
              {
                "kind": "Var",
                "name": "hashValue",
                "printedName": "hashValue",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ],
                "declKind": "Var",
                "usr": "s:5NEKit6TunnelC0B6StatusO9hashValueSivp",
                "mangledName": "$s5NEKit6TunnelC0B6StatusO9hashValueSivp",
                "moduleName": "NEKit",
                "implicit": true,
                "accessors": [
                  {
                    "kind": "Accessor",
                    "name": "Get",
                    "printedName": "Get()",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Int",
                        "printedName": "Swift.Int",
                        "usr": "s:Si"
                      }
                    ],
                    "declKind": "Accessor",
                    "usr": "s:5NEKit6TunnelC0B6StatusO9hashValueSivg",
                    "mangledName": "$s5NEKit6TunnelC0B6StatusO9hashValueSivg",
                    "moduleName": "NEKit",
                    "implicit": true,
                    "accessorKind": "get"
                  }
                ]
              },
              {
                "kind": "Function",
                "name": "hash",
                "printedName": "hash(into:)",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Hasher",
                    "printedName": "Swift.Hasher",
                    "paramValueOwnership": "InOut",
                    "usr": "s:s6HasherV"
                  }
                ],
                "declKind": "Func",
                "usr": "s:5NEKit6TunnelC0B6StatusO4hash4intoys6HasherVz_tF",
                "mangledName": "$s5NEKit6TunnelC0B6StatusO4hash4intoys6HasherVz_tF",
                "moduleName": "NEKit",
                "implicit": true,
                "funcSelfKind": "NonMutating"
              }
            ],
            "declKind": "Enum",
            "usr": "s:5NEKit6TunnelC0B6StatusO",
            "mangledName": "$s5NEKit6TunnelC0B6StatusO",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "conformances": [
              {
                "kind": "Conformance",
                "name": "Equatable",
                "printedName": "Equatable",
                "usr": "s:SQ",
                "mangledName": "$sSQ"
              },
              {
                "kind": "Conformance",
                "name": "Hashable",
                "printedName": "Hashable",
                "usr": "s:SH",
                "mangledName": "$sSH"
              },
              {
                "kind": "Conformance",
                "name": "CustomStringConvertible",
                "printedName": "CustomStringConvertible",
                "usr": "s:s23CustomStringConvertibleP",
                "mangledName": "$ss23CustomStringConvertibleP"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "isCancelled",
            "printedName": "isCancelled",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit6TunnelC11isCancelledSbvp",
            "mangledName": "$s5NEKit6TunnelC11isCancelledSbvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Bool",
                    "printedName": "Swift.Bool",
                    "usr": "s:Sb"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit6TunnelC11isCancelledSbvg",
                "mangledName": "$s5NEKit6TunnelC11isCancelledSbvg",
                "moduleName": "NEKit",
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "status",
            "printedName": "status",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "TunnelStatus",
                "printedName": "NEKit.Tunnel.TunnelStatus",
                "usr": "s:5NEKit6TunnelC0B6StatusO"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit6TunnelC6statusAC0B6StatusOvp",
            "mangledName": "$s5NEKit6TunnelC6statusAC0B6StatusOvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "TunnelStatus",
                    "printedName": "NEKit.Tunnel.TunnelStatus",
                    "usr": "s:5NEKit6TunnelC0B6StatusO"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit6TunnelC6statusAC0B6StatusOvg",
                "mangledName": "$s5NEKit6TunnelC6statusAC0B6StatusOvg",
                "moduleName": "NEKit",
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "statusDescription",
            "printedName": "statusDescription",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit6TunnelC17statusDescriptionSSvp",
            "mangledName": "$s5NEKit6TunnelC17statusDescriptionSSvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit6TunnelC17statusDescriptionSSvg",
                "mangledName": "$s5NEKit6TunnelC17statusDescriptionSSvg",
                "moduleName": "NEKit",
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "description",
            "printedName": "description",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Var",
            "usr": "c:@M@NEKit@objc(cs)Tunnel(py)description",
            "mangledName": "$s5NEKit6TunnelC11descriptionSSvp",
            "moduleName": "NEKit",
            "overriding": true,
            "objc_name": "description",
            "declAttributes": [
              "Dynamic",
              "ObjC",
              "AccessControl",
              "Override"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "c:@M@NEKit@objc(cs)Tunnel(im)description",
                "mangledName": "$s5NEKit6TunnelC11descriptionSSvg",
                "moduleName": "NEKit",
                "overriding": true,
                "objc_name": "description",
                "declAttributes": [
                  "Dynamic",
                  "ObjC"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Function",
            "name": "didReceive",
            "printedName": "didReceive(session:from:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "ConnectSession",
                "printedName": "NEKit.ConnectSession",
                "usr": "s:5NEKit14ConnectSessionC"
              },
              {
                "kind": "TypeNominal",
                "name": "ProxySocket",
                "printedName": "NEKit.ProxySocket",
                "usr": "c:@M@NEKit@objc(cs)ProxySocket"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit6TunnelC10didReceive7session4fromyAA14ConnectSessionC_AA11ProxySocketCtF",
            "mangledName": "$s5NEKit6TunnelC10didReceive7session4fromyAA14ConnectSessionC_AA11ProxySocketCtF",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "didBecomeReadyToForwardWith",
            "printedName": "didBecomeReadyToForwardWith(socket:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "SocketProtocol",
                "printedName": "NEKit.SocketProtocol",
                "usr": "s:5NEKit14SocketProtocolP"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit6TunnelC27didBecomeReadyToForwardWith6socketyAA14SocketProtocol_p_tF",
            "mangledName": "$s5NEKit6TunnelC27didBecomeReadyToForwardWith6socketyAA14SocketProtocol_p_tF",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "didDisconnectWith",
            "printedName": "didDisconnectWith(socket:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "SocketProtocol",
                "printedName": "NEKit.SocketProtocol",
                "usr": "s:5NEKit14SocketProtocolP"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit6TunnelC17didDisconnectWith6socketyAA14SocketProtocol_p_tF",
            "mangledName": "$s5NEKit6TunnelC17didDisconnectWith6socketyAA14SocketProtocol_p_tF",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "didRead",
            "printedName": "didRead(data:from:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              },
              {
                "kind": "TypeNominal",
                "name": "SocketProtocol",
                "printedName": "NEKit.SocketProtocol",
                "usr": "s:5NEKit14SocketProtocolP"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit6TunnelC7didRead4data4fromy10Foundation4DataV_AA14SocketProtocol_ptF",
            "mangledName": "$s5NEKit6TunnelC7didRead4data4fromy10Foundation4DataV_AA14SocketProtocol_ptF",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "didWrite",
            "printedName": "didWrite(data:by:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Foundation.Data?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Data",
                    "printedName": "Foundation.Data",
                    "usr": "s:10Foundation4DataV"
                  }
                ],
                "usr": "s:Sq"
              },
              {
                "kind": "TypeNominal",
                "name": "SocketProtocol",
                "printedName": "NEKit.SocketProtocol",
                "usr": "s:5NEKit14SocketProtocolP"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit6TunnelC8didWrite4data2byy10Foundation4DataVSg_AA14SocketProtocol_ptF",
            "mangledName": "$s5NEKit6TunnelC8didWrite4data2byy10Foundation4DataVSg_AA14SocketProtocol_ptF",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "didConnectWith",
            "printedName": "didConnectWith(adapterSocket:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "AdapterSocket",
                "printedName": "NEKit.AdapterSocket",
                "usr": "c:@M@NEKit@objc(cs)AdapterSocket"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit6TunnelC14didConnectWith13adapterSocketyAA07AdapterG0C_tF",
            "mangledName": "$s5NEKit6TunnelC14didConnectWith13adapterSocketyAA07AdapterG0C_tF",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "updateAdapterWith",
            "printedName": "updateAdapterWith(newAdapter:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "AdapterSocket",
                "printedName": "NEKit.AdapterSocket",
                "usr": "c:@M@NEKit@objc(cs)AdapterSocket"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit6TunnelC17updateAdapterWith03newD0yAA0D6SocketC_tF",
            "mangledName": "$s5NEKit6TunnelC17updateAdapterWith03newD0yAA0D6SocketC_tF",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Tunnel",
                "printedName": "NEKit.Tunnel",
                "usr": "c:@M@NEKit@objc(cs)Tunnel"
              }
            ],
            "declKind": "Constructor",
            "usr": "c:@M@NEKit@objc(cs)Tunnel(im)init",
            "mangledName": "$s5NEKit6TunnelCACycfc",
            "moduleName": "NEKit",
            "overriding": true,
            "implicit": true,
            "objc_name": "init",
            "declAttributes": [
              "Dynamic",
              "ObjC",
              "Override"
            ],
            "init_kind": "Designated"
          }
        ],
        "declKind": "Class",
        "usr": "c:@M@NEKit@objc(cs)Tunnel",
        "mangledName": "$s5NEKit6TunnelC",
        "moduleName": "NEKit",
        "declAttributes": [
          "AccessControl",
          "RawDocComment",
          "ObjC"
        ],
        "superclassUsr": "c:objc(cs)NSObject",
        "hasMissingDesignatedInitializers": true,
        "superclassNames": [
          "ObjectiveC.NSObject"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "SocketDelegate",
            "printedName": "SocketDelegate",
            "usr": "s:5NEKit14SocketDelegateP",
            "mangledName": "$s5NEKit14SocketDelegateP"
          },
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "CVarArg",
            "printedName": "CVarArg",
            "usr": "s:s7CVarArgP",
            "mangledName": "$ss7CVarArgP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObservingPublishing",
            "printedName": "_KeyValueCodingAndObservingPublishing",
            "usr": "s:10Foundation37_KeyValueCodingAndObservingPublishingP",
            "mangledName": "$s10Foundation37_KeyValueCodingAndObservingPublishingP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObserving",
            "printedName": "_KeyValueCodingAndObserving",
            "usr": "s:10Foundation27_KeyValueCodingAndObservingP",
            "mangledName": "$s10Foundation27_KeyValueCodingAndObservingP"
          },
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "CustomDebugStringConvertible",
            "printedName": "CustomDebugStringConvertible",
            "usr": "s:s28CustomDebugStringConvertibleP",
            "mangledName": "$ss28CustomDebugStringConvertibleP"
          }
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "TypeDecl",
        "name": "ProxySocketEvent",
        "printedName": "ProxySocketEvent",
        "children": [
          {
            "kind": "Var",
            "name": "description",
            "printedName": "description",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit16ProxySocketEventO11descriptionSSvp",
            "mangledName": "$s5NEKit16ProxySocketEventO11descriptionSSvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit16ProxySocketEventO11descriptionSSvg",
                "mangledName": "$s5NEKit16ProxySocketEventO11descriptionSSvg",
                "moduleName": "NEKit",
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "socketOpened",
            "printedName": "socketOpened",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.ProxySocketEvent.Type) -> (NEKit.ProxySocket) -> NEKit.ProxySocketEvent",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(NEKit.ProxySocket) -> NEKit.ProxySocketEvent",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "ProxySocketEvent",
                        "printedName": "NEKit.ProxySocketEvent",
                        "usr": "s:5NEKit16ProxySocketEventO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "ProxySocket",
                        "printedName": "NEKit.ProxySocket",
                        "usr": "c:@M@NEKit@objc(cs)ProxySocket"
                      }
                    ]
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.ProxySocketEvent.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "ProxySocketEvent",
                        "printedName": "NEKit.ProxySocketEvent",
                        "usr": "s:5NEKit16ProxySocketEventO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit16ProxySocketEventO12socketOpenedyAcA0bC0CcACmF",
            "mangledName": "$s5NEKit16ProxySocketEventO12socketOpenedyAcA0bC0CcACmF",
            "moduleName": "NEKit"
          },
          {
            "kind": "Var",
            "name": "disconnectCalled",
            "printedName": "disconnectCalled",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.ProxySocketEvent.Type) -> (NEKit.ProxySocket) -> NEKit.ProxySocketEvent",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(NEKit.ProxySocket) -> NEKit.ProxySocketEvent",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "ProxySocketEvent",
                        "printedName": "NEKit.ProxySocketEvent",
                        "usr": "s:5NEKit16ProxySocketEventO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "ProxySocket",
                        "printedName": "NEKit.ProxySocket",
                        "usr": "c:@M@NEKit@objc(cs)ProxySocket"
                      }
                    ]
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.ProxySocketEvent.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "ProxySocketEvent",
                        "printedName": "NEKit.ProxySocketEvent",
                        "usr": "s:5NEKit16ProxySocketEventO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit16ProxySocketEventO16disconnectCalledyAcA0bC0CcACmF",
            "mangledName": "$s5NEKit16ProxySocketEventO16disconnectCalledyAcA0bC0CcACmF",
            "moduleName": "NEKit"
          },
          {
            "kind": "Var",
            "name": "forceDisconnectCalled",
            "printedName": "forceDisconnectCalled",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.ProxySocketEvent.Type) -> (NEKit.ProxySocket) -> NEKit.ProxySocketEvent",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(NEKit.ProxySocket) -> NEKit.ProxySocketEvent",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "ProxySocketEvent",
                        "printedName": "NEKit.ProxySocketEvent",
                        "usr": "s:5NEKit16ProxySocketEventO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "ProxySocket",
                        "printedName": "NEKit.ProxySocket",
                        "usr": "c:@M@NEKit@objc(cs)ProxySocket"
                      }
                    ]
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.ProxySocketEvent.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "ProxySocketEvent",
                        "printedName": "NEKit.ProxySocketEvent",
                        "usr": "s:5NEKit16ProxySocketEventO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit16ProxySocketEventO21forceDisconnectCalledyAcA0bC0CcACmF",
            "mangledName": "$s5NEKit16ProxySocketEventO21forceDisconnectCalledyAcA0bC0CcACmF",
            "moduleName": "NEKit"
          },
          {
            "kind": "Var",
            "name": "disconnected",
            "printedName": "disconnected",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.ProxySocketEvent.Type) -> (NEKit.ProxySocket) -> NEKit.ProxySocketEvent",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(NEKit.ProxySocket) -> NEKit.ProxySocketEvent",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "ProxySocketEvent",
                        "printedName": "NEKit.ProxySocketEvent",
                        "usr": "s:5NEKit16ProxySocketEventO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "ProxySocket",
                        "printedName": "NEKit.ProxySocket",
                        "usr": "c:@M@NEKit@objc(cs)ProxySocket"
                      }
                    ]
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.ProxySocketEvent.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "ProxySocketEvent",
                        "printedName": "NEKit.ProxySocketEvent",
                        "usr": "s:5NEKit16ProxySocketEventO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit16ProxySocketEventO12disconnectedyAcA0bC0CcACmF",
            "mangledName": "$s5NEKit16ProxySocketEventO12disconnectedyAcA0bC0CcACmF",
            "moduleName": "NEKit"
          },
          {
            "kind": "Var",
            "name": "receivedRequest",
            "printedName": "receivedRequest",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.ProxySocketEvent.Type) -> (NEKit.ConnectSession, NEKit.ProxySocket) -> NEKit.ProxySocketEvent",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(NEKit.ConnectSession, NEKit.ProxySocket) -> NEKit.ProxySocketEvent",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "ProxySocketEvent",
                        "printedName": "NEKit.ProxySocketEvent",
                        "usr": "s:5NEKit16ProxySocketEventO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Tuple",
                        "printedName": "(NEKit.ConnectSession, on: NEKit.ProxySocket)",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "ConnectSession",
                            "printedName": "NEKit.ConnectSession",
                            "usr": "s:5NEKit14ConnectSessionC"
                          },
                          {
                            "kind": "TypeNominal",
                            "name": "ProxySocket",
                            "printedName": "NEKit.ProxySocket",
                            "usr": "c:@M@NEKit@objc(cs)ProxySocket"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.ProxySocketEvent.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "ProxySocketEvent",
                        "printedName": "NEKit.ProxySocketEvent",
                        "usr": "s:5NEKit16ProxySocketEventO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit16ProxySocketEventO15receivedRequestyAcA14ConnectSessionC_AA0bC0CtcACmF",
            "mangledName": "$s5NEKit16ProxySocketEventO15receivedRequestyAcA14ConnectSessionC_AA0bC0CtcACmF",
            "moduleName": "NEKit"
          },
          {
            "kind": "Var",
            "name": "readData",
            "printedName": "readData",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.ProxySocketEvent.Type) -> (Foundation.Data, NEKit.ProxySocket) -> NEKit.ProxySocketEvent",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(Foundation.Data, NEKit.ProxySocket) -> NEKit.ProxySocketEvent",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "ProxySocketEvent",
                        "printedName": "NEKit.ProxySocketEvent",
                        "usr": "s:5NEKit16ProxySocketEventO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Tuple",
                        "printedName": "(Foundation.Data, on: NEKit.ProxySocket)",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "Data",
                            "printedName": "Foundation.Data",
                            "usr": "s:10Foundation4DataV"
                          },
                          {
                            "kind": "TypeNominal",
                            "name": "ProxySocket",
                            "printedName": "NEKit.ProxySocket",
                            "usr": "c:@M@NEKit@objc(cs)ProxySocket"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.ProxySocketEvent.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "ProxySocketEvent",
                        "printedName": "NEKit.ProxySocketEvent",
                        "usr": "s:5NEKit16ProxySocketEventO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit16ProxySocketEventO8readDatayAC10Foundation0F0V_AA0bC0CtcACmF",
            "mangledName": "$s5NEKit16ProxySocketEventO8readDatayAC10Foundation0F0V_AA0bC0CtcACmF",
            "moduleName": "NEKit"
          },
          {
            "kind": "Var",
            "name": "wroteData",
            "printedName": "wroteData",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.ProxySocketEvent.Type) -> (Foundation.Data?, NEKit.ProxySocket) -> NEKit.ProxySocketEvent",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(Foundation.Data?, NEKit.ProxySocket) -> NEKit.ProxySocketEvent",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "ProxySocketEvent",
                        "printedName": "NEKit.ProxySocketEvent",
                        "usr": "s:5NEKit16ProxySocketEventO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Tuple",
                        "printedName": "(Foundation.Data?, on: NEKit.ProxySocket)",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "Optional",
                            "printedName": "Foundation.Data?",
                            "children": [
                              {
                                "kind": "TypeNominal",
                                "name": "Data",
                                "printedName": "Foundation.Data",
                                "usr": "s:10Foundation4DataV"
                              }
                            ],
                            "usr": "s:Sq"
                          },
                          {
                            "kind": "TypeNominal",
                            "name": "ProxySocket",
                            "printedName": "NEKit.ProxySocket",
                            "usr": "c:@M@NEKit@objc(cs)ProxySocket"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.ProxySocketEvent.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "ProxySocketEvent",
                        "printedName": "NEKit.ProxySocketEvent",
                        "usr": "s:5NEKit16ProxySocketEventO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit16ProxySocketEventO9wroteDatayAC10Foundation0F0VSg_AA0bC0CtcACmF",
            "mangledName": "$s5NEKit16ProxySocketEventO9wroteDatayAC10Foundation0F0VSg_AA0bC0CtcACmF",
            "moduleName": "NEKit"
          },
          {
            "kind": "Var",
            "name": "askedToResponseTo",
            "printedName": "askedToResponseTo",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.ProxySocketEvent.Type) -> (NEKit.AdapterSocket, NEKit.ProxySocket) -> NEKit.ProxySocketEvent",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(NEKit.AdapterSocket, NEKit.ProxySocket) -> NEKit.ProxySocketEvent",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "ProxySocketEvent",
                        "printedName": "NEKit.ProxySocketEvent",
                        "usr": "s:5NEKit16ProxySocketEventO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Tuple",
                        "printedName": "(NEKit.AdapterSocket, on: NEKit.ProxySocket)",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "AdapterSocket",
                            "printedName": "NEKit.AdapterSocket",
                            "usr": "c:@M@NEKit@objc(cs)AdapterSocket"
                          },
                          {
                            "kind": "TypeNominal",
                            "name": "ProxySocket",
                            "printedName": "NEKit.ProxySocket",
                            "usr": "c:@M@NEKit@objc(cs)ProxySocket"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.ProxySocketEvent.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "ProxySocketEvent",
                        "printedName": "NEKit.ProxySocketEvent",
                        "usr": "s:5NEKit16ProxySocketEventO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit16ProxySocketEventO015askedToResponseF0yAcA07AdapterC0C_AA0bC0CtcACmF",
            "mangledName": "$s5NEKit16ProxySocketEventO015askedToResponseF0yAcA07AdapterC0C_AA0bC0CtcACmF",
            "moduleName": "NEKit"
          },
          {
            "kind": "Var",
            "name": "readyForForward",
            "printedName": "readyForForward",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.ProxySocketEvent.Type) -> (NEKit.ProxySocket) -> NEKit.ProxySocketEvent",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(NEKit.ProxySocket) -> NEKit.ProxySocketEvent",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "ProxySocketEvent",
                        "printedName": "NEKit.ProxySocketEvent",
                        "usr": "s:5NEKit16ProxySocketEventO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "ProxySocket",
                        "printedName": "NEKit.ProxySocket",
                        "usr": "c:@M@NEKit@objc(cs)ProxySocket"
                      }
                    ]
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.ProxySocketEvent.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "ProxySocketEvent",
                        "printedName": "NEKit.ProxySocketEvent",
                        "usr": "s:5NEKit16ProxySocketEventO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit16ProxySocketEventO15readyForForwardyAcA0bC0CcACmF",
            "mangledName": "$s5NEKit16ProxySocketEventO15readyForForwardyAcA0bC0CcACmF",
            "moduleName": "NEKit"
          },
          {
            "kind": "Var",
            "name": "errorOccured",
            "printedName": "errorOccured",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.ProxySocketEvent.Type) -> (Swift.Error, NEKit.ProxySocket) -> NEKit.ProxySocketEvent",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(Swift.Error, NEKit.ProxySocket) -> NEKit.ProxySocketEvent",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "ProxySocketEvent",
                        "printedName": "NEKit.ProxySocketEvent",
                        "usr": "s:5NEKit16ProxySocketEventO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Tuple",
                        "printedName": "(Swift.Error, on: NEKit.ProxySocket)",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "Error",
                            "printedName": "Swift.Error",
                            "usr": "s:s5ErrorP"
                          },
                          {
                            "kind": "TypeNominal",
                            "name": "ProxySocket",
                            "printedName": "NEKit.ProxySocket",
                            "usr": "c:@M@NEKit@objc(cs)ProxySocket"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.ProxySocketEvent.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "ProxySocketEvent",
                        "printedName": "NEKit.ProxySocketEvent",
                        "usr": "s:5NEKit16ProxySocketEventO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit16ProxySocketEventO12errorOccuredyACs5Error_p_AA0bC0CtcACmF",
            "mangledName": "$s5NEKit16ProxySocketEventO12errorOccuredyACs5Error_p_AA0bC0CtcACmF",
            "moduleName": "NEKit"
          }
        ],
        "declKind": "Enum",
        "usr": "s:5NEKit16ProxySocketEventO",
        "mangledName": "$s5NEKit16ProxySocketEventO",
        "moduleName": "NEKit",
        "declAttributes": [
          "AccessControl"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "EventType",
            "printedName": "EventType",
            "usr": "s:5NEKit9EventTypeP",
            "mangledName": "$s5NEKit9EventTypeP"
          },
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          }
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "TypeDecl",
        "name": "RejectAdapter",
        "printedName": "RejectAdapter",
        "children": [
          {
            "kind": "Var",
            "name": "delay",
            "printedName": "delay",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit13RejectAdapterC5delaySivp",
            "mangledName": "$s5NEKit13RejectAdapterC5delaySivp",
            "moduleName": "NEKit",
            "declAttributes": [
              "Final",
              "HasStorage",
              "AccessControl"
            ],
            "isLet": true,
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit13RejectAdapterC5delaySivg",
                "mangledName": "$s5NEKit13RejectAdapterC5delaySivg",
                "moduleName": "NEKit",
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(delay:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "RejectAdapter",
                "printedName": "NEKit.RejectAdapter",
                "usr": "c:@M@NEKit@objc(cs)RejectAdapter"
              },
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit13RejectAdapterC5delayACSi_tcfc",
            "mangledName": "$s5NEKit13RejectAdapterC5delayACSi_tcfc",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "init_kind": "Designated"
          },
          {
            "kind": "Function",
            "name": "openSocketWith",
            "printedName": "openSocketWith(session:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "ConnectSession",
                "printedName": "NEKit.ConnectSession",
                "usr": "s:5NEKit14ConnectSessionC"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit13RejectAdapterC14openSocketWith7sessionyAA14ConnectSessionC_tF",
            "mangledName": "$s5NEKit13RejectAdapterC14openSocketWith7sessionyAA14ConnectSessionC_tF",
            "moduleName": "NEKit",
            "overriding": true,
            "declAttributes": [
              "AccessControl",
              "Override"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "disconnect",
            "printedName": "disconnect(becauseOf:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Swift.Error?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Error",
                    "printedName": "Swift.Error",
                    "usr": "s:s5ErrorP"
                  }
                ],
                "hasDefaultArg": true,
                "usr": "s:Sq"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit13RejectAdapterC10disconnect9becauseOfys5Error_pSg_tF",
            "mangledName": "$s5NEKit13RejectAdapterC10disconnect9becauseOfys5Error_pSg_tF",
            "moduleName": "NEKit",
            "overriding": true,
            "declAttributes": [
              "Override",
              "AccessControl",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "forceDisconnect",
            "printedName": "forceDisconnect(becauseOf:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Swift.Error?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Error",
                    "printedName": "Swift.Error",
                    "usr": "s:s5ErrorP"
                  }
                ],
                "hasDefaultArg": true,
                "usr": "s:Sq"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit13RejectAdapterC15forceDisconnect9becauseOfys5Error_pSg_tF",
            "mangledName": "$s5NEKit13RejectAdapterC15forceDisconnect9becauseOfys5Error_pSg_tF",
            "moduleName": "NEKit",
            "overriding": true,
            "declAttributes": [
              "Override",
              "AccessControl",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(observe:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "RejectAdapter",
                "printedName": "NEKit.RejectAdapter",
                "usr": "c:@M@NEKit@objc(cs)RejectAdapter"
              },
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "hasDefaultArg": true,
                "usr": "s:Sb"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit13RejectAdapterC7observeACSb_tcfc",
            "mangledName": "$s5NEKit13RejectAdapterC7observeACSb_tcfc",
            "moduleName": "NEKit",
            "overriding": true,
            "implicit": true,
            "declAttributes": [
              "Override"
            ],
            "init_kind": "Designated"
          }
        ],
        "declKind": "Class",
        "usr": "c:@M@NEKit@objc(cs)RejectAdapter",
        "mangledName": "$s5NEKit13RejectAdapterC",
        "moduleName": "NEKit",
        "declAttributes": [
          "AccessControl",
          "ObjC"
        ],
        "superclassUsr": "c:@M@NEKit@objc(cs)AdapterSocket",
        "superclassNames": [
          "NEKit.AdapterSocket",
          "ObjectiveC.NSObject"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "SocketProtocol",
            "printedName": "SocketProtocol",
            "usr": "s:5NEKit14SocketProtocolP",
            "mangledName": "$s5NEKit14SocketProtocolP"
          },
          {
            "kind": "Conformance",
            "name": "RawTCPSocketDelegate",
            "printedName": "RawTCPSocketDelegate",
            "usr": "s:5NEKit20RawTCPSocketDelegateP",
            "mangledName": "$s5NEKit20RawTCPSocketDelegateP"
          },
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "CVarArg",
            "printedName": "CVarArg",
            "usr": "s:s7CVarArgP",
            "mangledName": "$ss7CVarArgP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObservingPublishing",
            "printedName": "_KeyValueCodingAndObservingPublishing",
            "usr": "s:10Foundation37_KeyValueCodingAndObservingPublishingP",
            "mangledName": "$s10Foundation37_KeyValueCodingAndObservingPublishingP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObserving",
            "printedName": "_KeyValueCodingAndObserving",
            "usr": "s:10Foundation27_KeyValueCodingAndObservingP",
            "mangledName": "$s10Foundation27_KeyValueCodingAndObservingP"
          },
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "CustomDebugStringConvertible",
            "printedName": "CustomDebugStringConvertible",
            "usr": "s:s28CustomDebugStringConvertibleP",
            "mangledName": "$ss28CustomDebugStringConvertibleP"
          }
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "TypeDecl",
        "name": "DirectAdapter",
        "printedName": "DirectAdapter",
        "children": [
          {
            "kind": "Function",
            "name": "openSocketWith",
            "printedName": "openSocketWith(session:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "ConnectSession",
                "printedName": "NEKit.ConnectSession",
                "usr": "s:5NEKit14ConnectSessionC"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit13DirectAdapterC14openSocketWith7sessionyAA14ConnectSessionC_tF",
            "mangledName": "$s5NEKit13DirectAdapterC14openSocketWith7sessionyAA14ConnectSessionC_tF",
            "moduleName": "NEKit",
            "overriding": true,
            "declAttributes": [
              "AccessControl",
              "Override",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "didConnectWith",
            "printedName": "didConnectWith(socket:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "RawTCPSocketProtocol",
                "printedName": "NEKit.RawTCPSocketProtocol",
                "usr": "s:5NEKit20RawTCPSocketProtocolP"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit13DirectAdapterC14didConnectWith6socketyAA20RawTCPSocketProtocol_p_tF",
            "mangledName": "$s5NEKit13DirectAdapterC14didConnectWith6socketyAA20RawTCPSocketProtocol_p_tF",
            "moduleName": "NEKit",
            "overriding": true,
            "declAttributes": [
              "AccessControl",
              "Override",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "didRead",
            "printedName": "didRead(data:from:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              },
              {
                "kind": "TypeNominal",
                "name": "RawTCPSocketProtocol",
                "printedName": "NEKit.RawTCPSocketProtocol",
                "usr": "s:5NEKit20RawTCPSocketProtocolP"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit13DirectAdapterC7didRead4data4fromy10Foundation4DataV_AA20RawTCPSocketProtocol_ptF",
            "mangledName": "$s5NEKit13DirectAdapterC7didRead4data4fromy10Foundation4DataV_AA20RawTCPSocketProtocol_ptF",
            "moduleName": "NEKit",
            "overriding": true,
            "declAttributes": [
              "AccessControl",
              "Override"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "didWrite",
            "printedName": "didWrite(data:by:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Foundation.Data?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Data",
                    "printedName": "Foundation.Data",
                    "usr": "s:10Foundation4DataV"
                  }
                ],
                "usr": "s:Sq"
              },
              {
                "kind": "TypeNominal",
                "name": "RawTCPSocketProtocol",
                "printedName": "NEKit.RawTCPSocketProtocol",
                "usr": "s:5NEKit20RawTCPSocketProtocolP"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit13DirectAdapterC8didWrite4data2byy10Foundation4DataVSg_AA20RawTCPSocketProtocol_ptF",
            "mangledName": "$s5NEKit13DirectAdapterC8didWrite4data2byy10Foundation4DataVSg_AA20RawTCPSocketProtocol_ptF",
            "moduleName": "NEKit",
            "overriding": true,
            "declAttributes": [
              "AccessControl",
              "Override"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(observe:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "DirectAdapter",
                "printedName": "NEKit.DirectAdapter",
                "usr": "c:@M@NEKit@objc(cs)DirectAdapter"
              },
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "hasDefaultArg": true,
                "usr": "s:Sb"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit13DirectAdapterC7observeACSb_tcfc",
            "mangledName": "$s5NEKit13DirectAdapterC7observeACSb_tcfc",
            "moduleName": "NEKit",
            "overriding": true,
            "implicit": true,
            "declAttributes": [
              "Override"
            ],
            "init_kind": "Designated"
          }
        ],
        "declKind": "Class",
        "usr": "c:@M@NEKit@objc(cs)DirectAdapter",
        "mangledName": "$s5NEKit13DirectAdapterC",
        "moduleName": "NEKit",
        "declAttributes": [
          "AccessControl",
          "RawDocComment",
          "ObjC"
        ],
        "superclassUsr": "c:@M@NEKit@objc(cs)AdapterSocket",
        "inheritsConvenienceInitializers": true,
        "superclassNames": [
          "NEKit.AdapterSocket",
          "ObjectiveC.NSObject"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "SocketProtocol",
            "printedName": "SocketProtocol",
            "usr": "s:5NEKit14SocketProtocolP",
            "mangledName": "$s5NEKit14SocketProtocolP"
          },
          {
            "kind": "Conformance",
            "name": "RawTCPSocketDelegate",
            "printedName": "RawTCPSocketDelegate",
            "usr": "s:5NEKit20RawTCPSocketDelegateP",
            "mangledName": "$s5NEKit20RawTCPSocketDelegateP"
          },
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "CVarArg",
            "printedName": "CVarArg",
            "usr": "s:s7CVarArgP",
            "mangledName": "$ss7CVarArgP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObservingPublishing",
            "printedName": "_KeyValueCodingAndObservingPublishing",
            "usr": "s:10Foundation37_KeyValueCodingAndObservingPublishingP",
            "mangledName": "$s10Foundation37_KeyValueCodingAndObservingPublishingP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObserving",
            "printedName": "_KeyValueCodingAndObserving",
            "usr": "s:10Foundation27_KeyValueCodingAndObservingP",
            "mangledName": "$s10Foundation27_KeyValueCodingAndObservingP"
          },
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "CustomDebugStringConvertible",
            "printedName": "CustomDebugStringConvertible",
            "usr": "s:s28CustomDebugStringConvertibleP",
            "mangledName": "$ss28CustomDebugStringConvertibleP"
          }
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "TypeDecl",
        "name": "SOCKS5AdapterFactory",
        "printedName": "SOCKS5AdapterFactory",
        "children": [
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(serverHost:serverPort:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "SOCKS5AdapterFactory",
                "printedName": "NEKit.SOCKS5AdapterFactory",
                "usr": "s:5NEKit20SOCKS5AdapterFactoryC"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              },
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit20SOCKS5AdapterFactoryC10serverHost0E4PortACSS_Sitcfc",
            "mangledName": "$s5NEKit20SOCKS5AdapterFactoryC10serverHost0E4PortACSS_Sitcfc",
            "moduleName": "NEKit",
            "overriding": true,
            "declAttributes": [
              "AccessControl",
              "Override"
            ],
            "init_kind": "Designated"
          },
          {
            "kind": "Function",
            "name": "getAdapterFor",
            "printedName": "getAdapterFor(session:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "AdapterSocket",
                "printedName": "NEKit.AdapterSocket",
                "usr": "c:@M@NEKit@objc(cs)AdapterSocket"
              },
              {
                "kind": "TypeNominal",
                "name": "ConnectSession",
                "printedName": "NEKit.ConnectSession",
                "usr": "s:5NEKit14ConnectSessionC"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit20SOCKS5AdapterFactoryC03getC3For7sessionAA0C6SocketCAA14ConnectSessionC_tF",
            "mangledName": "$s5NEKit20SOCKS5AdapterFactoryC03getC3For7sessionAA0C6SocketCAA14ConnectSessionC_tF",
            "moduleName": "NEKit",
            "overriding": true,
            "isOpen": true,
            "declAttributes": [
              "AccessControl",
              "Override",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          }
        ],
        "declKind": "Class",
        "usr": "s:5NEKit20SOCKS5AdapterFactoryC",
        "mangledName": "$s5NEKit20SOCKS5AdapterFactoryC",
        "moduleName": "NEKit",
        "isOpen": true,
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "superclassUsr": "s:5NEKit20ServerAdapterFactoryC",
        "inheritsConvenienceInitializers": true,
        "superclassNames": [
          "NEKit.ServerAdapterFactory",
          "NEKit.AdapterFactory"
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "TypeDecl",
        "name": "IPStackProtocol",
        "printedName": "IPStackProtocol",
        "children": [
          {
            "kind": "Function",
            "name": "input",
            "printedName": "input(packet:version:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              },
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Foundation.NSNumber?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "NSNumber",
                    "printedName": "Foundation.NSNumber",
                    "usr": "c:objc(cs)NSNumber"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit15IPStackProtocolP5input6packet7versionSb10Foundation4DataV_So8NSNumberCSgtF",
            "mangledName": "$s5NEKit15IPStackProtocolP5input6packet7versionSb10Foundation4DataV_So8NSNumberCSgtF",
            "moduleName": "NEKit",
            "genericSig": "<τ_0_0 where τ_0_0 : NEKit.IPStackProtocol>",
            "sugared_genericSig": "<Self where Self : NEKit.IPStackProtocol>",
            "protocolReq": true,
            "declAttributes": [
              "RawDocComment"
            ],
            "reqNewWitnessTableEntry": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Var",
            "name": "outputFunc",
            "printedName": "outputFunc",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "ImplicitlyUnwrappedOptional",
                "printedName": "(([Foundation.Data], [Foundation.NSNumber]) -> ())?",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "([Foundation.Data], [Foundation.NSNumber]) -> ()",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Void",
                        "printedName": "()"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Tuple",
                        "printedName": "([Foundation.Data], [Foundation.NSNumber])",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "Array",
                            "printedName": "[Foundation.Data]",
                            "children": [
                              {
                                "kind": "TypeNominal",
                                "name": "Data",
                                "printedName": "Foundation.Data",
                                "usr": "s:10Foundation4DataV"
                              }
                            ],
                            "usr": "s:Sa"
                          },
                          {
                            "kind": "TypeNominal",
                            "name": "Array",
                            "printedName": "[Foundation.NSNumber]",
                            "children": [
                              {
                                "kind": "TypeNominal",
                                "name": "NSNumber",
                                "printedName": "Foundation.NSNumber",
                                "usr": "c:objc(cs)NSNumber"
                              }
                            ],
                            "usr": "s:Sa"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit15IPStackProtocolP10outputFuncySay10Foundation4DataVG_SaySo8NSNumberCGtcSgvp",
            "mangledName": "$s5NEKit15IPStackProtocolP10outputFuncySay10Foundation4DataVG_SaySo8NSNumberCGtcSgvp",
            "moduleName": "NEKit",
            "protocolReq": true,
            "declAttributes": [
              "RawDocComment"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "ImplicitlyUnwrappedOptional",
                    "printedName": "(([Foundation.Data], [Foundation.NSNumber]) -> ())?",
                    "children": [
                      {
                        "kind": "TypeFunc",
                        "name": "Function",
                        "printedName": "([Foundation.Data], [Foundation.NSNumber]) -> ()",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "Void",
                            "printedName": "()"
                          },
                          {
                            "kind": "TypeNominal",
                            "name": "Tuple",
                            "printedName": "([Foundation.Data], [Foundation.NSNumber])",
                            "children": [
                              {
                                "kind": "TypeNominal",
                                "name": "Array",
                                "printedName": "[Foundation.Data]",
                                "children": [
                                  {
                                    "kind": "TypeNominal",
                                    "name": "Data",
                                    "printedName": "Foundation.Data",
                                    "usr": "s:10Foundation4DataV"
                                  }
                                ],
                                "usr": "s:Sa"
                              },
                              {
                                "kind": "TypeNominal",
                                "name": "Array",
                                "printedName": "[Foundation.NSNumber]",
                                "children": [
                                  {
                                    "kind": "TypeNominal",
                                    "name": "NSNumber",
                                    "printedName": "Foundation.NSNumber",
                                    "usr": "c:objc(cs)NSNumber"
                                  }
                                ],
                                "usr": "s:Sa"
                              }
                            ]
                          }
                        ]
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit15IPStackProtocolP10outputFuncySay10Foundation4DataVG_SaySo8NSNumberCGtcSgvg",
                "mangledName": "$s5NEKit15IPStackProtocolP10outputFuncySay10Foundation4DataVG_SaySo8NSNumberCGtcSgvg",
                "moduleName": "NEKit",
                "genericSig": "<τ_0_0 where τ_0_0 : NEKit.IPStackProtocol>",
                "sugared_genericSig": "<Self where Self : NEKit.IPStackProtocol>",
                "protocolReq": true,
                "reqNewWitnessTableEntry": true,
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "ImplicitlyUnwrappedOptional",
                    "printedName": "(([Foundation.Data], [Foundation.NSNumber]) -> ())?",
                    "children": [
                      {
                        "kind": "TypeFunc",
                        "name": "Function",
                        "printedName": "([Foundation.Data], [Foundation.NSNumber]) -> ()",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "Void",
                            "printedName": "()"
                          },
                          {
                            "kind": "TypeNominal",
                            "name": "Tuple",
                            "printedName": "([Foundation.Data], [Foundation.NSNumber])",
                            "children": [
                              {
                                "kind": "TypeNominal",
                                "name": "Array",
                                "printedName": "[Foundation.Data]",
                                "children": [
                                  {
                                    "kind": "TypeNominal",
                                    "name": "Data",
                                    "printedName": "Foundation.Data",
                                    "usr": "s:10Foundation4DataV"
                                  }
                                ],
                                "usr": "s:Sa"
                              },
                              {
                                "kind": "TypeNominal",
                                "name": "Array",
                                "printedName": "[Foundation.NSNumber]",
                                "children": [
                                  {
                                    "kind": "TypeNominal",
                                    "name": "NSNumber",
                                    "printedName": "Foundation.NSNumber",
                                    "usr": "c:objc(cs)NSNumber"
                                  }
                                ],
                                "usr": "s:Sa"
                              }
                            ]
                          }
                        ]
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit15IPStackProtocolP10outputFuncySay10Foundation4DataVG_SaySo8NSNumberCGtcSgvs",
                "mangledName": "$s5NEKit15IPStackProtocolP10outputFuncySay10Foundation4DataVG_SaySo8NSNumberCGtcSgvs",
                "moduleName": "NEKit",
                "genericSig": "<τ_0_0 where τ_0_0 : NEKit.IPStackProtocol>",
                "sugared_genericSig": "<Self where Self : NEKit.IPStackProtocol>",
                "protocolReq": true,
                "reqNewWitnessTableEntry": true,
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit15IPStackProtocolP10outputFuncySay10Foundation4DataVG_SaySo8NSNumberCGtcSgvM",
                "mangledName": "$s5NEKit15IPStackProtocolP10outputFuncySay10Foundation4DataVG_SaySo8NSNumberCGtcSgvM",
                "moduleName": "NEKit",
                "genericSig": "<τ_0_0 where τ_0_0 : NEKit.IPStackProtocol>",
                "sugared_genericSig": "<Self where Self : NEKit.IPStackProtocol>",
                "protocolReq": true,
                "implicit": true,
                "reqNewWitnessTableEntry": true,
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Function",
            "name": "start",
            "printedName": "start()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit15IPStackProtocolP5startyyF",
            "mangledName": "$s5NEKit15IPStackProtocolP5startyyF",
            "moduleName": "NEKit",
            "genericSig": "<τ_0_0 where τ_0_0 : NEKit.IPStackProtocol>",
            "sugared_genericSig": "<Self where Self : NEKit.IPStackProtocol>",
            "protocolReq": true,
            "reqNewWitnessTableEntry": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "stop",
            "printedName": "stop()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit15IPStackProtocolP4stopyyF",
            "mangledName": "$s5NEKit15IPStackProtocolP4stopyyF",
            "moduleName": "NEKit",
            "genericSig": "<τ_0_0 where τ_0_0 : NEKit.IPStackProtocol>",
            "sugared_genericSig": "<Self where Self : NEKit.IPStackProtocol>",
            "protocolReq": true,
            "declAttributes": [
              "RawDocComment"
            ],
            "reqNewWitnessTableEntry": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "stop",
            "printedName": "stop()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit15IPStackProtocolPAAE4stopyyF",
            "mangledName": "$s5NEKit15IPStackProtocolPAAE4stopyyF",
            "moduleName": "NEKit",
            "genericSig": "<τ_0_0 where τ_0_0 : NEKit.IPStackProtocol>",
            "sugared_genericSig": "<Self where Self : NEKit.IPStackProtocol>",
            "declAttributes": [
              "AccessControl"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          }
        ],
        "declKind": "Protocol",
        "usr": "s:5NEKit15IPStackProtocolP",
        "mangledName": "$s5NEKit15IPStackProtocolP",
        "moduleName": "NEKit",
        "genericSig": "<τ_0_0 : AnyObject>",
        "sugared_genericSig": "<Self : AnyObject>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "Import",
        "name": "CocoaAsyncSocket",
        "printedName": "CocoaAsyncSocket",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "TypeDecl",
        "name": "GCDTCPSocket",
        "printedName": "GCDTCPSocket",
        "children": [
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(socket:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GCDTCPSocket",
                "printedName": "NEKit.GCDTCPSocket",
                "usr": "c:@M@NEKit@objc(cs)GCDTCPSocket"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "CocoaAsyncSocket.GCDAsyncSocket?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GCDAsyncSocket",
                    "printedName": "CocoaAsyncSocket.GCDAsyncSocket",
                    "usr": "c:objc(cs)GCDAsyncSocket"
                  }
                ],
                "hasDefaultArg": true,
                "usr": "s:Sq"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit12GCDTCPSocketC6socketACSo14GCDAsyncSocketCSg_tcfc",
            "mangledName": "$s5NEKit12GCDTCPSocketC6socketACSo14GCDAsyncSocketCSg_tcfc",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "init_kind": "Designated"
          },
          {
            "kind": "Var",
            "name": "delegate",
            "printedName": "delegate",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "WeakStorage",
                "printedName": "NEKit.RawTCPSocketDelegate?"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit12GCDTCPSocketC8delegateAA20RawTCPSocketDelegate_pSgvp",
            "mangledName": "$s5NEKit12GCDTCPSocketC8delegateAA20RawTCPSocketDelegate_pSgvp",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "HasInitialValue",
              "HasStorage",
              "AccessControl",
              "ReferenceOwnership",
              "RawDocComment"
            ],
            "ownership": 1,
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "NEKit.RawTCPSocketDelegate?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "RawTCPSocketDelegate",
                        "printedName": "NEKit.RawTCPSocketDelegate",
                        "usr": "s:5NEKit20RawTCPSocketDelegateP"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit12GCDTCPSocketC8delegateAA20RawTCPSocketDelegate_pSgvg",
                "mangledName": "$s5NEKit12GCDTCPSocketC8delegateAA20RawTCPSocketDelegate_pSgvg",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "NEKit.RawTCPSocketDelegate?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "RawTCPSocketDelegate",
                        "printedName": "NEKit.RawTCPSocketDelegate",
                        "usr": "s:5NEKit20RawTCPSocketDelegateP"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit12GCDTCPSocketC8delegateAA20RawTCPSocketDelegate_pSgvs",
                "mangledName": "$s5NEKit12GCDTCPSocketC8delegateAA20RawTCPSocketDelegate_pSgvs",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit12GCDTCPSocketC8delegateAA20RawTCPSocketDelegate_pSgvM",
                "mangledName": "$s5NEKit12GCDTCPSocketC8delegateAA20RawTCPSocketDelegate_pSgvM",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "isConnected",
            "printedName": "isConnected",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit12GCDTCPSocketC11isConnectedSbvp",
            "mangledName": "$s5NEKit12GCDTCPSocketC11isConnectedSbvp",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Bool",
                    "printedName": "Swift.Bool",
                    "usr": "s:Sb"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit12GCDTCPSocketC11isConnectedSbvg",
                "mangledName": "$s5NEKit12GCDTCPSocketC11isConnectedSbvg",
                "moduleName": "NEKit",
                "isOpen": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "sourceIPAddress",
            "printedName": "sourceIPAddress",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "NEKit.IPAddress?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "IPAddress",
                    "printedName": "NEKit.IPAddress",
                    "usr": "s:5NEKit9IPAddressC"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit12GCDTCPSocketC15sourceIPAddressAA0D0CSgvp",
            "mangledName": "$s5NEKit12GCDTCPSocketC15sourceIPAddressAA0D0CSgvp",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "NEKit.IPAddress?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "IPAddress",
                        "printedName": "NEKit.IPAddress",
                        "usr": "s:5NEKit9IPAddressC"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit12GCDTCPSocketC15sourceIPAddressAA0D0CSgvg",
                "mangledName": "$s5NEKit12GCDTCPSocketC15sourceIPAddressAA0D0CSgvg",
                "moduleName": "NEKit",
                "isOpen": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "sourcePort",
            "printedName": "sourcePort",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "NEKit.Port?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Port",
                    "printedName": "NEKit.Port",
                    "usr": "s:5NEKit4PortV"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit12GCDTCPSocketC10sourcePortAA0D0VSgvp",
            "mangledName": "$s5NEKit12GCDTCPSocketC10sourcePortAA0D0VSgvp",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "NEKit.Port?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Port",
                        "printedName": "NEKit.Port",
                        "usr": "s:5NEKit4PortV"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit12GCDTCPSocketC10sourcePortAA0D0VSgvg",
                "mangledName": "$s5NEKit12GCDTCPSocketC10sourcePortAA0D0VSgvg",
                "moduleName": "NEKit",
                "isOpen": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "destinationIPAddress",
            "printedName": "destinationIPAddress",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "NEKit.IPAddress?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "IPAddress",
                    "printedName": "NEKit.IPAddress",
                    "usr": "s:5NEKit9IPAddressC"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit12GCDTCPSocketC20destinationIPAddressAA0D0CSgvp",
            "mangledName": "$s5NEKit12GCDTCPSocketC20destinationIPAddressAA0D0CSgvp",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "NEKit.IPAddress?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "IPAddress",
                        "printedName": "NEKit.IPAddress",
                        "usr": "s:5NEKit9IPAddressC"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit12GCDTCPSocketC20destinationIPAddressAA0D0CSgvg",
                "mangledName": "$s5NEKit12GCDTCPSocketC20destinationIPAddressAA0D0CSgvg",
                "moduleName": "NEKit",
                "isOpen": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "destinationPort",
            "printedName": "destinationPort",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "NEKit.Port?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Port",
                    "printedName": "NEKit.Port",
                    "usr": "s:5NEKit4PortV"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit12GCDTCPSocketC15destinationPortAA0D0VSgvp",
            "mangledName": "$s5NEKit12GCDTCPSocketC15destinationPortAA0D0VSgvp",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "NEKit.Port?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Port",
                        "printedName": "NEKit.Port",
                        "usr": "s:5NEKit4PortV"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit12GCDTCPSocketC15destinationPortAA0D0VSgvg",
                "mangledName": "$s5NEKit12GCDTCPSocketC15destinationPortAA0D0VSgvg",
                "moduleName": "NEKit",
                "isOpen": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Function",
            "name": "connectTo",
            "printedName": "connectTo(host:port:enableTLS:tlsSettings:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              },
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              },
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "hasDefaultArg": true,
                "usr": "s:Sb"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "[Swift.AnyHashable : Any]?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Dictionary",
                    "printedName": "[Swift.AnyHashable : Any]",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "AnyHashable",
                        "printedName": "Swift.AnyHashable",
                        "usr": "s:s11AnyHashableV"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "ProtocolComposition",
                        "printedName": "Any"
                      }
                    ],
                    "usr": "s:SD"
                  }
                ],
                "hasDefaultArg": true,
                "usr": "s:Sq"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit12GCDTCPSocketC9connectTo4host4port9enableTLS11tlsSettingsySS_SiSbSDys11AnyHashableVypGSgtKF",
            "mangledName": "$s5NEKit12GCDTCPSocketC9connectTo4host4port9enableTLS11tlsSettingsySS_SiSbSDys11AnyHashableVypGSgtKF",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "throwing": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "disconnect",
            "printedName": "disconnect()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit12GCDTCPSocketC10disconnectyyF",
            "mangledName": "$s5NEKit12GCDTCPSocketC10disconnectyyF",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "forceDisconnect",
            "printedName": "forceDisconnect()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit12GCDTCPSocketC15forceDisconnectyyF",
            "mangledName": "$s5NEKit12GCDTCPSocketC15forceDisconnectyyF",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "write",
            "printedName": "write(data:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit12GCDTCPSocketC5write4datay10Foundation4DataV_tF",
            "mangledName": "$s5NEKit12GCDTCPSocketC5write4datay10Foundation4DataV_tF",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "readData",
            "printedName": "readData()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit12GCDTCPSocketC8readDatayyF",
            "mangledName": "$s5NEKit12GCDTCPSocketC8readDatayyF",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "readDataTo",
            "printedName": "readDataTo(length:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit12GCDTCPSocketC10readDataTo6lengthySi_tF",
            "mangledName": "$s5NEKit12GCDTCPSocketC10readDataTo6lengthySi_tF",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "readDataTo",
            "printedName": "readDataTo(data:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit12GCDTCPSocketC10readDataTo4datay10Foundation0D0V_tF",
            "mangledName": "$s5NEKit12GCDTCPSocketC10readDataTo4datay10Foundation0D0V_tF",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "readDataTo",
            "printedName": "readDataTo(data:maxLength:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              },
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit12GCDTCPSocketC10readDataTo4data9maxLengthy10Foundation0D0V_SitF",
            "mangledName": "$s5NEKit12GCDTCPSocketC10readDataTo4data9maxLengthy10Foundation0D0V_SitF",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "socket",
            "printedName": "socket(_:didWriteDataWithTag:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "GCDAsyncSocket",
                "printedName": "CocoaAsyncSocket.GCDAsyncSocket",
                "usr": "c:objc(cs)GCDAsyncSocket"
              },
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              }
            ],
            "declKind": "Func",
            "usr": "c:@M@NEKit@objc(cs)GCDTCPSocket(im)socket:didWriteDataWithTag:",
            "mangledName": "$s5NEKit12GCDTCPSocketC6socket_19didWriteDataWithTagySo14GCDAsyncSocketC_SitF",
            "moduleName": "NEKit",
            "isOpen": true,
            "objc_name": "socket:didWriteDataWithTag:",
            "declAttributes": [
              "ObjC",
              "AccessControl",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "socket",
            "printedName": "socket(_:didRead:withTag:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "GCDAsyncSocket",
                "printedName": "CocoaAsyncSocket.GCDAsyncSocket",
                "usr": "c:objc(cs)GCDAsyncSocket"
              },
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              },
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              }
            ],
            "declKind": "Func",
            "usr": "c:@M@NEKit@objc(cs)GCDTCPSocket(im)socket:didReadData:withTag:",
            "mangledName": "$s5NEKit12GCDTCPSocketC6socket_7didRead7withTagySo14GCDAsyncSocketC_10Foundation4DataVSitF",
            "moduleName": "NEKit",
            "isOpen": true,
            "objc_name": "socket:didReadData:withTag:",
            "declAttributes": [
              "ObjC",
              "AccessControl"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "socketDidDisconnect",
            "printedName": "socketDidDisconnect(_:withError:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "GCDAsyncSocket",
                "printedName": "CocoaAsyncSocket.GCDAsyncSocket",
                "usr": "c:objc(cs)GCDAsyncSocket"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Swift.Error?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Error",
                    "printedName": "Swift.Error",
                    "usr": "s:s5ErrorP"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Func",
            "usr": "c:@M@NEKit@objc(cs)GCDTCPSocket(im)socketDidDisconnect:withError:",
            "mangledName": "$s5NEKit12GCDTCPSocketC19socketDidDisconnect_9withErrorySo14GCDAsyncSocketC_s0G0_pSgtF",
            "moduleName": "NEKit",
            "isOpen": true,
            "objc_name": "socketDidDisconnect:withError:",
            "declAttributes": [
              "ObjC",
              "AccessControl"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "socket",
            "printedName": "socket(_:didConnectToHost:port:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "GCDAsyncSocket",
                "printedName": "CocoaAsyncSocket.GCDAsyncSocket",
                "usr": "c:objc(cs)GCDAsyncSocket"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              },
              {
                "kind": "TypeNominal",
                "name": "UInt16",
                "printedName": "Swift.UInt16",
                "usr": "s:s6UInt16V"
              }
            ],
            "declKind": "Func",
            "usr": "c:@M@NEKit@objc(cs)GCDTCPSocket(im)socket:didConnectToHost:port:",
            "mangledName": "$s5NEKit12GCDTCPSocketC6socket_16didConnectToHost4portySo14GCDAsyncSocketC_SSs6UInt16VtF",
            "moduleName": "NEKit",
            "isOpen": true,
            "objc_name": "socket:didConnectToHost:port:",
            "declAttributes": [
              "ObjC",
              "AccessControl"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "socketDidSecure",
            "printedName": "socketDidSecure(_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "GCDAsyncSocket",
                "printedName": "CocoaAsyncSocket.GCDAsyncSocket",
                "usr": "c:objc(cs)GCDAsyncSocket"
              }
            ],
            "declKind": "Func",
            "usr": "c:@M@NEKit@objc(cs)GCDTCPSocket(im)socketDidSecure:",
            "mangledName": "$s5NEKit12GCDTCPSocketC15socketDidSecureyySo14GCDAsyncSocketCF",
            "moduleName": "NEKit",
            "isOpen": true,
            "objc_name": "socketDidSecure:",
            "declAttributes": [
              "ObjC",
              "AccessControl"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GCDTCPSocket",
                "printedName": "NEKit.GCDTCPSocket",
                "usr": "c:@M@NEKit@objc(cs)GCDTCPSocket"
              }
            ],
            "declKind": "Constructor",
            "usr": "c:@M@NEKit@objc(cs)GCDTCPSocket(im)init",
            "mangledName": "$s5NEKit12GCDTCPSocketCACycfc",
            "moduleName": "NEKit",
            "overriding": true,
            "implicit": true,
            "objc_name": "init",
            "declAttributes": [
              "Dynamic",
              "ObjC",
              "Override"
            ],
            "init_kind": "Designated"
          }
        ],
        "declKind": "Class",
        "usr": "c:@M@NEKit@objc(cs)GCDTCPSocket",
        "mangledName": "$s5NEKit12GCDTCPSocketC",
        "moduleName": "NEKit",
        "isOpen": true,
        "declAttributes": [
          "AccessControl",
          "RawDocComment",
          "ObjC"
        ],
        "superclassUsr": "c:objc(cs)NSObject",
        "superclassNames": [
          "ObjectiveC.NSObject"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "RawTCPSocketProtocol",
            "printedName": "RawTCPSocketProtocol",
            "usr": "s:5NEKit20RawTCPSocketProtocolP",
            "mangledName": "$s5NEKit20RawTCPSocketProtocolP"
          },
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "CVarArg",
            "printedName": "CVarArg",
            "usr": "s:s7CVarArgP",
            "mangledName": "$ss7CVarArgP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObservingPublishing",
            "printedName": "_KeyValueCodingAndObservingPublishing",
            "usr": "s:10Foundation37_KeyValueCodingAndObservingPublishingP",
            "mangledName": "$s10Foundation37_KeyValueCodingAndObservingPublishingP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObserving",
            "printedName": "_KeyValueCodingAndObserving",
            "usr": "s:10Foundation27_KeyValueCodingAndObservingP",
            "mangledName": "$s10Foundation27_KeyValueCodingAndObservingP"
          },
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "CustomDebugStringConvertible",
            "printedName": "CustomDebugStringConvertible",
            "usr": "s:s28CustomDebugStringConvertibleP",
            "mangledName": "$ss28CustomDebugStringConvertibleP"
          }
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "TypeDecl",
        "name": "ConnectSession",
        "printedName": "ConnectSession",
        "children": [
          {
            "kind": "TypeDecl",
            "name": "EventSourceEnum",
            "printedName": "EventSourceEnum",
            "children": [
              {
                "kind": "Var",
                "name": "proxy",
                "printedName": "proxy",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(NEKit.ConnectSession.EventSourceEnum.Type) -> NEKit.ConnectSession.EventSourceEnum",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "EventSourceEnum",
                        "printedName": "NEKit.ConnectSession.EventSourceEnum",
                        "usr": "s:5NEKit14ConnectSessionC15EventSourceEnumO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Metatype",
                        "printedName": "NEKit.ConnectSession.EventSourceEnum.Type",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "EventSourceEnum",
                            "printedName": "NEKit.ConnectSession.EventSourceEnum",
                            "usr": "s:5NEKit14ConnectSessionC15EventSourceEnumO"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "declKind": "EnumElement",
                "usr": "s:5NEKit14ConnectSessionC15EventSourceEnumO5proxyyA2EmF",
                "mangledName": "$s5NEKit14ConnectSessionC15EventSourceEnumO5proxyyA2EmF",
                "moduleName": "NEKit"
              },
              {
                "kind": "Var",
                "name": "adapter",
                "printedName": "adapter",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(NEKit.ConnectSession.EventSourceEnum.Type) -> NEKit.ConnectSession.EventSourceEnum",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "EventSourceEnum",
                        "printedName": "NEKit.ConnectSession.EventSourceEnum",
                        "usr": "s:5NEKit14ConnectSessionC15EventSourceEnumO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Metatype",
                        "printedName": "NEKit.ConnectSession.EventSourceEnum.Type",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "EventSourceEnum",
                            "printedName": "NEKit.ConnectSession.EventSourceEnum",
                            "usr": "s:5NEKit14ConnectSessionC15EventSourceEnumO"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "declKind": "EnumElement",
                "usr": "s:5NEKit14ConnectSessionC15EventSourceEnumO7adapteryA2EmF",
                "mangledName": "$s5NEKit14ConnectSessionC15EventSourceEnumO7adapteryA2EmF",
                "moduleName": "NEKit"
              },
              {
                "kind": "Var",
                "name": "tunnel",
                "printedName": "tunnel",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(NEKit.ConnectSession.EventSourceEnum.Type) -> NEKit.ConnectSession.EventSourceEnum",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "EventSourceEnum",
                        "printedName": "NEKit.ConnectSession.EventSourceEnum",
                        "usr": "s:5NEKit14ConnectSessionC15EventSourceEnumO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Metatype",
                        "printedName": "NEKit.ConnectSession.EventSourceEnum.Type",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "EventSourceEnum",
                            "printedName": "NEKit.ConnectSession.EventSourceEnum",
                            "usr": "s:5NEKit14ConnectSessionC15EventSourceEnumO"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "declKind": "EnumElement",
                "usr": "s:5NEKit14ConnectSessionC15EventSourceEnumO6tunnelyA2EmF",
                "mangledName": "$s5NEKit14ConnectSessionC15EventSourceEnumO6tunnelyA2EmF",
                "moduleName": "NEKit"
              },
              {
                "kind": "Function",
                "name": "==",
                "printedName": "==(_:_:)",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Bool",
                    "printedName": "Swift.Bool",
                    "usr": "s:Sb"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "EventSourceEnum",
                    "printedName": "NEKit.ConnectSession.EventSourceEnum",
                    "usr": "s:5NEKit14ConnectSessionC15EventSourceEnumO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "EventSourceEnum",
                    "printedName": "NEKit.ConnectSession.EventSourceEnum",
                    "usr": "s:5NEKit14ConnectSessionC15EventSourceEnumO"
                  }
                ],
                "declKind": "Func",
                "usr": "s:5NEKit14ConnectSessionC15EventSourceEnumO2eeoiySbAE_AEtFZ",
                "mangledName": "$s5NEKit14ConnectSessionC15EventSourceEnumO2eeoiySbAE_AEtFZ",
                "moduleName": "NEKit",
                "static": true,
                "implicit": true,
                "funcSelfKind": "NonMutating"
              },
              {
                "kind": "Var",
                "name": "hashValue",
                "printedName": "hashValue",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ],
                "declKind": "Var",
                "usr": "s:5NEKit14ConnectSessionC15EventSourceEnumO9hashValueSivp",
                "mangledName": "$s5NEKit14ConnectSessionC15EventSourceEnumO9hashValueSivp",
                "moduleName": "NEKit",
                "implicit": true,
                "accessors": [
                  {
                    "kind": "Accessor",
                    "name": "Get",
                    "printedName": "Get()",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Int",
                        "printedName": "Swift.Int",
                        "usr": "s:Si"
                      }
                    ],
                    "declKind": "Accessor",
                    "usr": "s:5NEKit14ConnectSessionC15EventSourceEnumO9hashValueSivg",
                    "mangledName": "$s5NEKit14ConnectSessionC15EventSourceEnumO9hashValueSivg",
                    "moduleName": "NEKit",
                    "implicit": true,
                    "accessorKind": "get"
                  }
                ]
              },
              {
                "kind": "Function",
                "name": "hash",
                "printedName": "hash(into:)",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Hasher",
                    "printedName": "Swift.Hasher",
                    "paramValueOwnership": "InOut",
                    "usr": "s:s6HasherV"
                  }
                ],
                "declKind": "Func",
                "usr": "s:5NEKit14ConnectSessionC15EventSourceEnumO4hash4intoys6HasherVz_tF",
                "mangledName": "$s5NEKit14ConnectSessionC15EventSourceEnumO4hash4intoys6HasherVz_tF",
                "moduleName": "NEKit",
                "implicit": true,
                "funcSelfKind": "NonMutating"
              }
            ],
            "declKind": "Enum",
            "usr": "s:5NEKit14ConnectSessionC15EventSourceEnumO",
            "mangledName": "$s5NEKit14ConnectSessionC15EventSourceEnumO",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "conformances": [
              {
                "kind": "Conformance",
                "name": "Equatable",
                "printedName": "Equatable",
                "usr": "s:SQ",
                "mangledName": "$sSQ"
              },
              {
                "kind": "Conformance",
                "name": "Hashable",
                "printedName": "Hashable",
                "usr": "s:SH",
                "mangledName": "$sSH"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "requestedHost",
            "printedName": "requestedHost",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit14ConnectSessionC13requestedHostSSvp",
            "mangledName": "$s5NEKit14ConnectSessionC13requestedHostSSvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "Final",
              "HasStorage",
              "AccessControl",
              "RawDocComment"
            ],
            "isLet": true,
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit14ConnectSessionC13requestedHostSSvg",
                "mangledName": "$s5NEKit14ConnectSessionC13requestedHostSSvg",
                "moduleName": "NEKit",
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "host",
            "printedName": "host",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit14ConnectSessionC4hostSSvp",
            "mangledName": "$s5NEKit14ConnectSessionC4hostSSvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "Final",
              "HasStorage",
              "AccessControl",
              "RawDocComment"
            ],
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit14ConnectSessionC4hostSSvg",
                "mangledName": "$s5NEKit14ConnectSessionC4hostSSvg",
                "moduleName": "NEKit",
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit14ConnectSessionC4hostSSvs",
                "mangledName": "$s5NEKit14ConnectSessionC4hostSSvs",
                "moduleName": "NEKit",
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit14ConnectSessionC4hostSSvM",
                "mangledName": "$s5NEKit14ConnectSessionC4hostSSvM",
                "moduleName": "NEKit",
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "port",
            "printedName": "port",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit14ConnectSessionC4portSivp",
            "mangledName": "$s5NEKit14ConnectSessionC4portSivp",
            "moduleName": "NEKit",
            "declAttributes": [
              "Final",
              "HasStorage",
              "AccessControl",
              "RawDocComment"
            ],
            "isLet": true,
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit14ConnectSessionC4portSivg",
                "mangledName": "$s5NEKit14ConnectSessionC4portSivg",
                "moduleName": "NEKit",
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "matchedRule",
            "printedName": "matchedRule",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "NEKit.Rule?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Rule",
                    "printedName": "NEKit.Rule",
                    "usr": "s:5NEKit4RuleC"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit14ConnectSessionC11matchedRuleAA0E0CSgvp",
            "mangledName": "$s5NEKit14ConnectSessionC11matchedRuleAA0E0CSgvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "HasInitialValue",
              "Final",
              "HasStorage",
              "AccessControl",
              "RawDocComment"
            ],
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "NEKit.Rule?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Rule",
                        "printedName": "NEKit.Rule",
                        "usr": "s:5NEKit4RuleC"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit14ConnectSessionC11matchedRuleAA0E0CSgvg",
                "mangledName": "$s5NEKit14ConnectSessionC11matchedRuleAA0E0CSgvg",
                "moduleName": "NEKit",
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "NEKit.Rule?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Rule",
                        "printedName": "NEKit.Rule",
                        "usr": "s:5NEKit4RuleC"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit14ConnectSessionC11matchedRuleAA0E0CSgvs",
                "mangledName": "$s5NEKit14ConnectSessionC11matchedRuleAA0E0CSgvs",
                "moduleName": "NEKit",
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit14ConnectSessionC11matchedRuleAA0E0CSgvM",
                "mangledName": "$s5NEKit14ConnectSessionC11matchedRuleAA0E0CSgvM",
                "moduleName": "NEKit",
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "fakeIPEnabled",
            "printedName": "fakeIPEnabled",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit14ConnectSessionC13fakeIPEnabledSbvp",
            "mangledName": "$s5NEKit14ConnectSessionC13fakeIPEnabledSbvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "Final",
              "HasStorage",
              "AccessControl",
              "RawDocComment"
            ],
            "isLet": true,
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Bool",
                    "printedName": "Swift.Bool",
                    "usr": "s:Sb"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit14ConnectSessionC13fakeIPEnabledSbvg",
                "mangledName": "$s5NEKit14ConnectSessionC13fakeIPEnabledSbvg",
                "moduleName": "NEKit",
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "error",
            "printedName": "error",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Swift.Error?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Error",
                    "printedName": "Swift.Error",
                    "usr": "s:s5ErrorP"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit14ConnectSessionC5errors5Error_pSgvp",
            "mangledName": "$s5NEKit14ConnectSessionC5errors5Error_pSgvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "HasInitialValue",
              "Final",
              "HasStorage",
              "AccessControl"
            ],
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "Swift.Error?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Error",
                        "printedName": "Swift.Error",
                        "usr": "s:s5ErrorP"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit14ConnectSessionC5errors5Error_pSgvg",
                "mangledName": "$s5NEKit14ConnectSessionC5errors5Error_pSgvg",
                "moduleName": "NEKit",
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "Swift.Error?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Error",
                        "printedName": "Swift.Error",
                        "usr": "s:s5ErrorP"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit14ConnectSessionC5errors5Error_pSgvs",
                "mangledName": "$s5NEKit14ConnectSessionC5errors5Error_pSgvs",
                "moduleName": "NEKit",
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit14ConnectSessionC5errors5Error_pSgvM",
                "mangledName": "$s5NEKit14ConnectSessionC5errors5Error_pSgvM",
                "moduleName": "NEKit",
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "errorSource",
            "printedName": "errorSource",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "NEKit.ConnectSession.EventSourceEnum?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "EventSourceEnum",
                    "printedName": "NEKit.ConnectSession.EventSourceEnum",
                    "usr": "s:5NEKit14ConnectSessionC15EventSourceEnumO"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit14ConnectSessionC11errorSourceAC05EventE4EnumOSgvp",
            "mangledName": "$s5NEKit14ConnectSessionC11errorSourceAC05EventE4EnumOSgvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "HasInitialValue",
              "Final",
              "HasStorage",
              "AccessControl"
            ],
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "NEKit.ConnectSession.EventSourceEnum?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "EventSourceEnum",
                        "printedName": "NEKit.ConnectSession.EventSourceEnum",
                        "usr": "s:5NEKit14ConnectSessionC15EventSourceEnumO"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit14ConnectSessionC11errorSourceAC05EventE4EnumOSgvg",
                "mangledName": "$s5NEKit14ConnectSessionC11errorSourceAC05EventE4EnumOSgvg",
                "moduleName": "NEKit",
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "NEKit.ConnectSession.EventSourceEnum?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "EventSourceEnum",
                        "printedName": "NEKit.ConnectSession.EventSourceEnum",
                        "usr": "s:5NEKit14ConnectSessionC15EventSourceEnumO"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit14ConnectSessionC11errorSourceAC05EventE4EnumOSgvs",
                "mangledName": "$s5NEKit14ConnectSessionC11errorSourceAC05EventE4EnumOSgvs",
                "moduleName": "NEKit",
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit14ConnectSessionC11errorSourceAC05EventE4EnumOSgvM",
                "mangledName": "$s5NEKit14ConnectSessionC11errorSourceAC05EventE4EnumOSgvM",
                "moduleName": "NEKit",
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "disconnectedBy",
            "printedName": "disconnectedBy",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "NEKit.ConnectSession.EventSourceEnum?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "EventSourceEnum",
                    "printedName": "NEKit.ConnectSession.EventSourceEnum",
                    "usr": "s:5NEKit14ConnectSessionC15EventSourceEnumO"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit14ConnectSessionC14disconnectedByAC15EventSourceEnumOSgvp",
            "mangledName": "$s5NEKit14ConnectSessionC14disconnectedByAC15EventSourceEnumOSgvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "HasInitialValue",
              "Final",
              "HasStorage",
              "AccessControl"
            ],
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "NEKit.ConnectSession.EventSourceEnum?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "EventSourceEnum",
                        "printedName": "NEKit.ConnectSession.EventSourceEnum",
                        "usr": "s:5NEKit14ConnectSessionC15EventSourceEnumO"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit14ConnectSessionC14disconnectedByAC15EventSourceEnumOSgvg",
                "mangledName": "$s5NEKit14ConnectSessionC14disconnectedByAC15EventSourceEnumOSgvg",
                "moduleName": "NEKit",
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "NEKit.ConnectSession.EventSourceEnum?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "EventSourceEnum",
                        "printedName": "NEKit.ConnectSession.EventSourceEnum",
                        "usr": "s:5NEKit14ConnectSessionC15EventSourceEnumO"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit14ConnectSessionC14disconnectedByAC15EventSourceEnumOSgvs",
                "mangledName": "$s5NEKit14ConnectSessionC14disconnectedByAC15EventSourceEnumOSgvs",
                "moduleName": "NEKit",
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit14ConnectSessionC14disconnectedByAC15EventSourceEnumOSgvM",
                "mangledName": "$s5NEKit14ConnectSessionC14disconnectedByAC15EventSourceEnumOSgvM",
                "moduleName": "NEKit",
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "ipAddress",
            "printedName": "ipAddress",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit14ConnectSessionC9ipAddressSSvp",
            "mangledName": "$s5NEKit14ConnectSessionC9ipAddressSSvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "Final",
              "Lazy",
              "AccessControl",
              "RawDocComment"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit14ConnectSessionC9ipAddressSSvg",
                "mangledName": "$s5NEKit14ConnectSessionC9ipAddressSSvg",
                "moduleName": "NEKit",
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit14ConnectSessionC9ipAddressSSvs",
                "mangledName": "$s5NEKit14ConnectSessionC9ipAddressSSvs",
                "moduleName": "NEKit",
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit14ConnectSessionC9ipAddressSSvM",
                "mangledName": "$s5NEKit14ConnectSessionC9ipAddressSSvM",
                "moduleName": "NEKit",
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "country",
            "printedName": "country",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit14ConnectSessionC7countrySSvp",
            "mangledName": "$s5NEKit14ConnectSessionC7countrySSvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "Final",
              "Lazy",
              "AccessControl",
              "RawDocComment"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit14ConnectSessionC7countrySSvg",
                "mangledName": "$s5NEKit14ConnectSessionC7countrySSvg",
                "moduleName": "NEKit",
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit14ConnectSessionC7countrySSvs",
                "mangledName": "$s5NEKit14ConnectSessionC7countrySSvs",
                "moduleName": "NEKit",
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit14ConnectSessionC7countrySSvM",
                "mangledName": "$s5NEKit14ConnectSessionC7countrySSvM",
                "moduleName": "NEKit",
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(host:port:fakeIPEnabled:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "NEKit.ConnectSession?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "ConnectSession",
                    "printedName": "NEKit.ConnectSession",
                    "usr": "s:5NEKit14ConnectSessionC"
                  }
                ],
                "usr": "s:Sq"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              },
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              },
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "hasDefaultArg": true,
                "usr": "s:Sb"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit14ConnectSessionC4host4port13fakeIPEnabledACSgSS_SiSbtcfc",
            "mangledName": "$s5NEKit14ConnectSessionC4host4port13fakeIPEnabledACSgSS_SiSbtcfc",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "init_kind": "Designated"
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(ipAddress:port:fakeIPEnabled:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "NEKit.ConnectSession?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "ConnectSession",
                    "printedName": "NEKit.ConnectSession",
                    "usr": "s:5NEKit14ConnectSessionC"
                  }
                ],
                "usr": "s:Sq"
              },
              {
                "kind": "TypeNominal",
                "name": "IPAddress",
                "printedName": "NEKit.IPAddress",
                "usr": "s:5NEKit9IPAddressC"
              },
              {
                "kind": "TypeNominal",
                "name": "Port",
                "printedName": "NEKit.Port",
                "usr": "s:5NEKit4PortV"
              },
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "hasDefaultArg": true,
                "usr": "s:Sb"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit14ConnectSessionC9ipAddress4port13fakeIPEnabledACSgAA9IPAddressC_AA4PortVSbtcfc",
            "mangledName": "$s5NEKit14ConnectSessionC9ipAddress4port13fakeIPEnabledACSgAA9IPAddressC_AA4PortVSbtcfc",
            "moduleName": "NEKit",
            "declAttributes": [
              "Convenience",
              "AccessControl"
            ],
            "init_kind": "Convenience"
          },
          {
            "kind": "Function",
            "name": "isIPv4",
            "printedName": "isIPv4()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit14ConnectSessionC6isIPv4SbyF",
            "mangledName": "$s5NEKit14ConnectSessionC6isIPv4SbyF",
            "moduleName": "NEKit",
            "declAttributes": [
              "Final",
              "AccessControl"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "isIPv6",
            "printedName": "isIPv6()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit14ConnectSessionC6isIPv6SbyF",
            "mangledName": "$s5NEKit14ConnectSessionC6isIPv6SbyF",
            "moduleName": "NEKit",
            "declAttributes": [
              "Final",
              "AccessControl"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "isIP",
            "printedName": "isIP()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit14ConnectSessionC4isIPSbyF",
            "mangledName": "$s5NEKit14ConnectSessionC4isIPSbyF",
            "moduleName": "NEKit",
            "declAttributes": [
              "Final",
              "AccessControl"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Var",
            "name": "description",
            "printedName": "description",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit14ConnectSessionC11descriptionSSvp",
            "mangledName": "$s5NEKit14ConnectSessionC11descriptionSSvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "Final",
              "AccessControl"
            ],
            "isFromExtension": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit14ConnectSessionC11descriptionSSvg",
                "mangledName": "$s5NEKit14ConnectSessionC11descriptionSSvg",
                "moduleName": "NEKit",
                "declAttributes": [
                  "Final"
                ],
                "isFromExtension": true,
                "accessorKind": "get"
              }
            ]
          }
        ],
        "declKind": "Class",
        "usr": "s:5NEKit14ConnectSessionC",
        "mangledName": "$s5NEKit14ConnectSessionC",
        "moduleName": "NEKit",
        "declAttributes": [
          "Final",
          "AccessControl",
          "RawDocComment"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          }
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "Import",
        "name": "CocoaAsyncSocket",
        "printedName": "CocoaAsyncSocket",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "Import",
        "name": "Resolver",
        "printedName": "Resolver",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "TypeDecl",
        "name": "ProxyServer",
        "printedName": "ProxyServer",
        "children": [
          {
            "kind": "Var",
            "name": "port",
            "printedName": "port",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Port",
                "printedName": "NEKit.Port",
                "usr": "s:5NEKit4PortV"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit11ProxyServerC4portAA4PortVvp",
            "mangledName": "$s5NEKit11ProxyServerC4portAA4PortVvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "HasStorage",
              "Final",
              "AccessControl",
              "RawDocComment"
            ],
            "isLet": true,
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Port",
                    "printedName": "NEKit.Port",
                    "usr": "s:5NEKit4PortV"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit11ProxyServerC4portAA4PortVvg",
                "mangledName": "$s5NEKit11ProxyServerC4portAA4PortVvg",
                "moduleName": "NEKit",
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "address",
            "printedName": "address",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "NEKit.IPAddress?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "IPAddress",
                    "printedName": "NEKit.IPAddress",
                    "usr": "s:5NEKit9IPAddressC"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit11ProxyServerC7addressAA9IPAddressCSgvp",
            "mangledName": "$s5NEKit11ProxyServerC7addressAA9IPAddressCSgvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "HasStorage",
              "Final",
              "AccessControl",
              "RawDocComment"
            ],
            "isLet": true,
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "NEKit.IPAddress?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "IPAddress",
                        "printedName": "NEKit.IPAddress",
                        "usr": "s:5NEKit9IPAddressC"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit11ProxyServerC7addressAA9IPAddressCSgvg",
                "mangledName": "$s5NEKit11ProxyServerC7addressAA9IPAddressCSgvg",
                "moduleName": "NEKit",
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "type",
            "printedName": "type",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit11ProxyServerC4typeSSvp",
            "mangledName": "$s5NEKit11ProxyServerC4typeSSvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "HasStorage",
              "Final",
              "AccessControl",
              "RawDocComment"
            ],
            "isLet": true,
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit11ProxyServerC4typeSSvg",
                "mangledName": "$s5NEKit11ProxyServerC4typeSSvg",
                "moduleName": "NEKit",
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "description",
            "printedName": "description",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Var",
            "usr": "c:@M@NEKit@objc(cs)ProxyServer(py)description",
            "mangledName": "$s5NEKit11ProxyServerC11descriptionSSvp",
            "moduleName": "NEKit",
            "overriding": true,
            "isOpen": true,
            "objc_name": "description",
            "declAttributes": [
              "Dynamic",
              "ObjC",
              "Override",
              "AccessControl",
              "RawDocComment"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "c:@M@NEKit@objc(cs)ProxyServer(im)description",
                "mangledName": "$s5NEKit11ProxyServerC11descriptionSSvg",
                "moduleName": "NEKit",
                "overriding": true,
                "isOpen": true,
                "objc_name": "description",
                "declAttributes": [
                  "Dynamic",
                  "ObjC"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "observer",
            "printedName": "observer",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "NEKit.Observer<NEKit.ProxyServerEvent>?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Observer",
                    "printedName": "NEKit.Observer<NEKit.ProxyServerEvent>",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "ProxyServerEvent",
                        "printedName": "NEKit.ProxyServerEvent",
                        "usr": "s:5NEKit16ProxyServerEventO"
                      }
                    ],
                    "usr": "s:5NEKit8ObserverC"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit11ProxyServerC8observerAA8ObserverCyAA0bC5EventOGSgvp",
            "mangledName": "$s5NEKit11ProxyServerC8observerAA8ObserverCyAA0bC5EventOGSgvp",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "HasInitialValue",
              "HasStorage",
              "AccessControl"
            ],
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "NEKit.Observer<NEKit.ProxyServerEvent>?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Observer",
                        "printedName": "NEKit.Observer<NEKit.ProxyServerEvent>",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "ProxyServerEvent",
                            "printedName": "NEKit.ProxyServerEvent",
                            "usr": "s:5NEKit16ProxyServerEventO"
                          }
                        ],
                        "usr": "s:5NEKit8ObserverC"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit11ProxyServerC8observerAA8ObserverCyAA0bC5EventOGSgvg",
                "mangledName": "$s5NEKit11ProxyServerC8observerAA8ObserverCyAA0bC5EventOGSgvg",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "NEKit.Observer<NEKit.ProxyServerEvent>?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Observer",
                        "printedName": "NEKit.Observer<NEKit.ProxyServerEvent>",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "ProxyServerEvent",
                            "printedName": "NEKit.ProxyServerEvent",
                            "usr": "s:5NEKit16ProxyServerEventO"
                          }
                        ],
                        "usr": "s:5NEKit8ObserverC"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit11ProxyServerC8observerAA8ObserverCyAA0bC5EventOGSgvs",
                "mangledName": "$s5NEKit11ProxyServerC8observerAA8ObserverCyAA0bC5EventOGSgvs",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit11ProxyServerC8observerAA8ObserverCyAA0bC5EventOGSgvM",
                "mangledName": "$s5NEKit11ProxyServerC8observerAA8ObserverCyAA0bC5EventOGSgvM",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(address:port:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "ProxyServer",
                "printedName": "NEKit.ProxyServer",
                "usr": "c:@M@NEKit@objc(cs)ProxyServer"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "NEKit.IPAddress?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "IPAddress",
                    "printedName": "NEKit.IPAddress",
                    "usr": "s:5NEKit9IPAddressC"
                  }
                ],
                "usr": "s:Sq"
              },
              {
                "kind": "TypeNominal",
                "name": "Port",
                "printedName": "NEKit.Port",
                "usr": "s:5NEKit4PortV"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit11ProxyServerC7address4portAcA9IPAddressCSg_AA4PortVtcfc",
            "mangledName": "$s5NEKit11ProxyServerC7address4portAcA9IPAddressCSg_AA4PortVtcfc",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "init_kind": "Designated"
          },
          {
            "kind": "Function",
            "name": "start",
            "printedName": "start()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit11ProxyServerC5startyyKF",
            "mangledName": "$s5NEKit11ProxyServerC5startyyKF",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "throwing": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "stop",
            "printedName": "stop()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit11ProxyServerC4stopyyF",
            "mangledName": "$s5NEKit11ProxyServerC4stopyyF",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "ProxyServer",
                "printedName": "NEKit.ProxyServer",
                "usr": "c:@M@NEKit@objc(cs)ProxyServer"
              }
            ],
            "declKind": "Constructor",
            "usr": "c:@M@NEKit@objc(cs)ProxyServer(im)init",
            "mangledName": "$s5NEKit11ProxyServerCACycfc",
            "moduleName": "NEKit",
            "overriding": true,
            "implicit": true,
            "objc_name": "init",
            "declAttributes": [
              "Dynamic",
              "ObjC",
              "Override"
            ],
            "init_kind": "Designated"
          }
        ],
        "declKind": "Class",
        "usr": "c:@M@NEKit@objc(cs)ProxyServer",
        "mangledName": "$s5NEKit11ProxyServerC",
        "moduleName": "NEKit",
        "isOpen": true,
        "declAttributes": [
          "AccessControl",
          "RawDocComment",
          "ObjC"
        ],
        "superclassUsr": "c:objc(cs)NSObject",
        "superclassNames": [
          "ObjectiveC.NSObject"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "CVarArg",
            "printedName": "CVarArg",
            "usr": "s:s7CVarArgP",
            "mangledName": "$ss7CVarArgP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObservingPublishing",
            "printedName": "_KeyValueCodingAndObservingPublishing",
            "usr": "s:10Foundation37_KeyValueCodingAndObservingPublishingP",
            "mangledName": "$s10Foundation37_KeyValueCodingAndObservingPublishingP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObserving",
            "printedName": "_KeyValueCodingAndObserving",
            "usr": "s:10Foundation27_KeyValueCodingAndObservingP",
            "mangledName": "$s10Foundation27_KeyValueCodingAndObservingP"
          },
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "CustomDebugStringConvertible",
            "printedName": "CustomDebugStringConvertible",
            "usr": "s:s28CustomDebugStringConvertibleP",
            "mangledName": "$ss28CustomDebugStringConvertibleP"
          }
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "NEKit",
        "declAttributes": [
          "RawDocComment"
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "BinaryReadable",
        "printedName": "BinaryReadable",
        "children": [
          {
            "kind": "Var",
            "name": "littleEndian",
            "printedName": "littleEndian",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit14BinaryReadableP12littleEndianxvp",
            "mangledName": "$s5NEKit14BinaryReadableP12littleEndianxvp",
            "moduleName": "NEKit",
            "protocolReq": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit14BinaryReadableP12littleEndianxvg",
                "mangledName": "$s5NEKit14BinaryReadableP12littleEndianxvg",
                "moduleName": "NEKit",
                "genericSig": "<τ_0_0 where τ_0_0 : NEKit.BinaryReadable>",
                "sugared_genericSig": "<Self where Self : NEKit.BinaryReadable>",
                "protocolReq": true,
                "reqNewWitnessTableEntry": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "bigEndian",
            "printedName": "bigEndian",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit14BinaryReadableP9bigEndianxvp",
            "mangledName": "$s5NEKit14BinaryReadableP9bigEndianxvp",
            "moduleName": "NEKit",
            "protocolReq": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit14BinaryReadableP9bigEndianxvg",
                "mangledName": "$s5NEKit14BinaryReadableP9bigEndianxvg",
                "moduleName": "NEKit",
                "genericSig": "<τ_0_0 where τ_0_0 : NEKit.BinaryReadable>",
                "sugared_genericSig": "<Self where Self : NEKit.BinaryReadable>",
                "protocolReq": true,
                "reqNewWitnessTableEntry": true,
                "accessorKind": "get"
              }
            ]
          }
        ],
        "declKind": "Protocol",
        "usr": "s:5NEKit14BinaryReadableP",
        "mangledName": "$s5NEKit14BinaryReadableP",
        "moduleName": "NEKit",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "BinaryDataScanner",
        "printedName": "BinaryDataScanner",
        "children": [
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(data:littleEndian:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "BinaryDataScanner",
                "printedName": "NEKit.BinaryDataScanner",
                "usr": "s:5NEKit17BinaryDataScannerC"
              },
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              },
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit17BinaryDataScannerC4data12littleEndianAC10Foundation0C0V_Sbtcfc",
            "mangledName": "$s5NEKit17BinaryDataScannerC4data12littleEndianAC10Foundation0C0V_Sbtcfc",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "init_kind": "Designated"
          },
          {
            "kind": "Function",
            "name": "read",
            "printedName": "read()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "τ_0_0?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit17BinaryDataScannerC4readxSgyAA0B8ReadableRzlF",
            "mangledName": "$s5NEKit17BinaryDataScannerC4readxSgyAA0B8ReadableRzlF",
            "moduleName": "NEKit",
            "genericSig": "<τ_0_0 where τ_0_0 : NEKit.BinaryReadable>",
            "sugared_genericSig": "<T where T : NEKit.BinaryReadable>",
            "isOpen": true,
            "declAttributes": [
              "AccessControl"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "skip",
            "printedName": "skip(to:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit17BinaryDataScannerC4skip2toySi_tF",
            "mangledName": "$s5NEKit17BinaryDataScannerC4skip2toySi_tF",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "advance",
            "printedName": "advance(by:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit17BinaryDataScannerC7advance2byySi_tF",
            "mangledName": "$s5NEKit17BinaryDataScannerC7advance2byySi_tF",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "AccessControl"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "readByte",
            "printedName": "readByte()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Swift.UInt8?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt8",
                    "printedName": "Swift.UInt8",
                    "usr": "s:s5UInt8V"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit17BinaryDataScannerC8readBytes5UInt8VSgyF",
            "mangledName": "$s5NEKit17BinaryDataScannerC8readBytes5UInt8VSgyF",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "read16",
            "printedName": "read16()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Swift.UInt16?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt16",
                    "printedName": "Swift.UInt16",
                    "usr": "s:s6UInt16V"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit17BinaryDataScannerC6read16s6UInt16VSgyF",
            "mangledName": "$s5NEKit17BinaryDataScannerC6read16s6UInt16VSgyF",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "AccessControl"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "read32",
            "printedName": "read32()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Swift.UInt32?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt32",
                    "printedName": "Swift.UInt32",
                    "usr": "s:s6UInt32V"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit17BinaryDataScannerC6read32s6UInt32VSgyF",
            "mangledName": "$s5NEKit17BinaryDataScannerC6read32s6UInt32VSgyF",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "AccessControl"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "read64",
            "printedName": "read64()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Swift.UInt64?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt64",
                    "printedName": "Swift.UInt64",
                    "usr": "s:s6UInt64V"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit17BinaryDataScannerC6read64s6UInt64VSgyF",
            "mangledName": "$s5NEKit17BinaryDataScannerC6read64s6UInt64VSgyF",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "AccessControl"
            ],
            "funcSelfKind": "NonMutating"
          }
        ],
        "declKind": "Class",
        "usr": "s:5NEKit17BinaryDataScannerC",
        "mangledName": "$s5NEKit17BinaryDataScannerC",
        "moduleName": "NEKit",
        "isOpen": true,
        "declAttributes": [
          "AccessControl"
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "TypeDecl",
        "name": "EventType",
        "printedName": "EventType",
        "declKind": "Protocol",
        "usr": "s:5NEKit9EventTypeP",
        "mangledName": "$s5NEKit9EventTypeP",
        "moduleName": "NEKit",
        "genericSig": "<τ_0_0 : Swift.CustomStringConvertible>",
        "sugared_genericSig": "<Self : Swift.CustomStringConvertible>",
        "declAttributes": [
          "AccessControl"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          }
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "TypeDecl",
        "name": "IPInterval",
        "printedName": "IPInterval",
        "children": [
          {
            "kind": "Var",
            "name": "IPv4",
            "printedName": "IPv4",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.IPInterval.Type) -> (Swift.UInt32) -> NEKit.IPInterval",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(Swift.UInt32) -> NEKit.IPInterval",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "IPInterval",
                        "printedName": "NEKit.IPInterval",
                        "usr": "s:5NEKit10IPIntervalO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "UInt32",
                        "printedName": "Swift.UInt32",
                        "usr": "s:s6UInt32V"
                      }
                    ]
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.IPInterval.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "IPInterval",
                        "printedName": "NEKit.IPInterval",
                        "usr": "s:5NEKit10IPIntervalO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit10IPIntervalO4IPv4yACs6UInt32VcACmF",
            "mangledName": "$s5NEKit10IPIntervalO4IPv4yACs6UInt32VcACmF",
            "moduleName": "NEKit"
          },
          {
            "kind": "Var",
            "name": "IPv6",
            "printedName": "IPv6",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.IPInterval.Type) -> (NEKit.UInt128) -> NEKit.IPInterval",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(NEKit.UInt128) -> NEKit.IPInterval",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "IPInterval",
                        "printedName": "NEKit.IPInterval",
                        "usr": "s:5NEKit10IPIntervalO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "UInt128",
                        "printedName": "NEKit.UInt128",
                        "usr": "s:5NEKit7UInt128V"
                      }
                    ]
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.IPInterval.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "IPInterval",
                        "printedName": "NEKit.IPInterval",
                        "usr": "s:5NEKit10IPIntervalO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit10IPIntervalO4IPv6yAcA7UInt128VcACmF",
            "mangledName": "$s5NEKit10IPIntervalO4IPv6yAcA7UInt128VcACmF",
            "moduleName": "NEKit"
          }
        ],
        "declKind": "Enum",
        "usr": "s:5NEKit10IPIntervalO",
        "mangledName": "$s5NEKit10IPIntervalO",
        "moduleName": "NEKit",
        "declAttributes": [
          "AccessControl"
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "TypeDecl",
        "name": "HTTPAdapterError",
        "printedName": "HTTPAdapterError",
        "children": [
          {
            "kind": "Var",
            "name": "invalidURL",
            "printedName": "invalidURL",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.HTTPAdapterError.Type) -> NEKit.HTTPAdapterError",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "HTTPAdapterError",
                    "printedName": "NEKit.HTTPAdapterError",
                    "usr": "s:5NEKit16HTTPAdapterErrorO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.HTTPAdapterError.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "HTTPAdapterError",
                        "printedName": "NEKit.HTTPAdapterError",
                        "usr": "s:5NEKit16HTTPAdapterErrorO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit16HTTPAdapterErrorO10invalidURLyA2CmF",
            "mangledName": "$s5NEKit16HTTPAdapterErrorO10invalidURLyA2CmF",
            "moduleName": "NEKit"
          },
          {
            "kind": "Var",
            "name": "serailizationFailure",
            "printedName": "serailizationFailure",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.HTTPAdapterError.Type) -> NEKit.HTTPAdapterError",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "HTTPAdapterError",
                    "printedName": "NEKit.HTTPAdapterError",
                    "usr": "s:5NEKit16HTTPAdapterErrorO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.HTTPAdapterError.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "HTTPAdapterError",
                        "printedName": "NEKit.HTTPAdapterError",
                        "usr": "s:5NEKit16HTTPAdapterErrorO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit16HTTPAdapterErrorO20serailizationFailureyA2CmF",
            "mangledName": "$s5NEKit16HTTPAdapterErrorO20serailizationFailureyA2CmF",
            "moduleName": "NEKit"
          },
          {
            "kind": "Var",
            "name": "description",
            "printedName": "description",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit16HTTPAdapterErrorO11descriptionSSvp",
            "mangledName": "$s5NEKit16HTTPAdapterErrorO11descriptionSSvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit16HTTPAdapterErrorO11descriptionSSvg",
                "mangledName": "$s5NEKit16HTTPAdapterErrorO11descriptionSSvg",
                "moduleName": "NEKit",
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Function",
            "name": "==",
            "printedName": "==(_:_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              },
              {
                "kind": "TypeNominal",
                "name": "HTTPAdapterError",
                "printedName": "NEKit.HTTPAdapterError",
                "usr": "s:5NEKit16HTTPAdapterErrorO"
              },
              {
                "kind": "TypeNominal",
                "name": "HTTPAdapterError",
                "printedName": "NEKit.HTTPAdapterError",
                "usr": "s:5NEKit16HTTPAdapterErrorO"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit16HTTPAdapterErrorO2eeoiySbAC_ACtFZ",
            "mangledName": "$s5NEKit16HTTPAdapterErrorO2eeoiySbAC_ACtFZ",
            "moduleName": "NEKit",
            "static": true,
            "implicit": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Var",
            "name": "hashValue",
            "printedName": "hashValue",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit16HTTPAdapterErrorO9hashValueSivp",
            "mangledName": "$s5NEKit16HTTPAdapterErrorO9hashValueSivp",
            "moduleName": "NEKit",
            "implicit": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit16HTTPAdapterErrorO9hashValueSivg",
                "mangledName": "$s5NEKit16HTTPAdapterErrorO9hashValueSivg",
                "moduleName": "NEKit",
                "implicit": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Function",
            "name": "hash",
            "printedName": "hash(into:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Hasher",
                "printedName": "Swift.Hasher",
                "paramValueOwnership": "InOut",
                "usr": "s:s6HasherV"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit16HTTPAdapterErrorO4hash4intoys6HasherVz_tF",
            "mangledName": "$s5NEKit16HTTPAdapterErrorO4hash4intoys6HasherVz_tF",
            "moduleName": "NEKit",
            "implicit": true,
            "funcSelfKind": "NonMutating"
          }
        ],
        "declKind": "Enum",
        "usr": "s:5NEKit16HTTPAdapterErrorO",
        "mangledName": "$s5NEKit16HTTPAdapterErrorO",
        "moduleName": "NEKit",
        "declAttributes": [
          "AccessControl"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "Error",
            "printedName": "Error",
            "usr": "s:s5ErrorP",
            "mangledName": "$ss5ErrorP"
          },
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "Sendable",
            "printedName": "Sendable",
            "usr": "s:s8SendableP",
            "mangledName": "$ss8SendableP"
          }
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "HTTPAdapter",
        "printedName": "HTTPAdapter",
        "children": [
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(serverHost:serverPort:auth:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "HTTPAdapter",
                "printedName": "NEKit.HTTPAdapter",
                "usr": "c:@M@NEKit@objc(cs)HTTPAdapter"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              },
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "NEKit.HTTPAuthentication?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "HTTPAuthentication",
                    "printedName": "NEKit.HTTPAuthentication",
                    "usr": "s:5NEKit18HTTPAuthenticationV"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit11HTTPAdapterC10serverHost0C4Port4authACSS_SiAA18HTTPAuthenticationVSgtcfc",
            "mangledName": "$s5NEKit11HTTPAdapterC10serverHost0C4Port4authACSS_SiAA18HTTPAuthenticationVSgtcfc",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "init_kind": "Designated"
          },
          {
            "kind": "Function",
            "name": "openSocketWith",
            "printedName": "openSocketWith(session:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "ConnectSession",
                "printedName": "NEKit.ConnectSession",
                "usr": "s:5NEKit14ConnectSessionC"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit11HTTPAdapterC14openSocketWith7sessionyAA14ConnectSessionC_tF",
            "mangledName": "$s5NEKit11HTTPAdapterC14openSocketWith7sessionyAA14ConnectSessionC_tF",
            "moduleName": "NEKit",
            "overriding": true,
            "declAttributes": [
              "AccessControl",
              "Override"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "didConnectWith",
            "printedName": "didConnectWith(socket:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "RawTCPSocketProtocol",
                "printedName": "NEKit.RawTCPSocketProtocol",
                "usr": "s:5NEKit20RawTCPSocketProtocolP"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit11HTTPAdapterC14didConnectWith6socketyAA20RawTCPSocketProtocol_p_tF",
            "mangledName": "$s5NEKit11HTTPAdapterC14didConnectWith6socketyAA20RawTCPSocketProtocol_p_tF",
            "moduleName": "NEKit",
            "overriding": true,
            "declAttributes": [
              "AccessControl",
              "Override"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "didRead",
            "printedName": "didRead(data:from:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              },
              {
                "kind": "TypeNominal",
                "name": "RawTCPSocketProtocol",
                "printedName": "NEKit.RawTCPSocketProtocol",
                "usr": "s:5NEKit20RawTCPSocketProtocolP"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit11HTTPAdapterC7didRead4data4fromy10Foundation4DataV_AA20RawTCPSocketProtocol_ptF",
            "mangledName": "$s5NEKit11HTTPAdapterC7didRead4data4fromy10Foundation4DataV_AA20RawTCPSocketProtocol_ptF",
            "moduleName": "NEKit",
            "overriding": true,
            "declAttributes": [
              "AccessControl",
              "Override"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "didWrite",
            "printedName": "didWrite(data:by:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Foundation.Data?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Data",
                    "printedName": "Foundation.Data",
                    "usr": "s:10Foundation4DataV"
                  }
                ],
                "usr": "s:Sq"
              },
              {
                "kind": "TypeNominal",
                "name": "RawTCPSocketProtocol",
                "printedName": "NEKit.RawTCPSocketProtocol",
                "usr": "s:5NEKit20RawTCPSocketProtocolP"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit11HTTPAdapterC8didWrite4data2byy10Foundation4DataVSg_AA20RawTCPSocketProtocol_ptF",
            "mangledName": "$s5NEKit11HTTPAdapterC8didWrite4data2byy10Foundation4DataVSg_AA20RawTCPSocketProtocol_ptF",
            "moduleName": "NEKit",
            "overriding": true,
            "declAttributes": [
              "AccessControl",
              "Override"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(observe:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "HTTPAdapter",
                "printedName": "NEKit.HTTPAdapter",
                "usr": "c:@M@NEKit@objc(cs)HTTPAdapter"
              },
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "hasDefaultArg": true,
                "usr": "s:Sb"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit11HTTPAdapterC7observeACSb_tcfc",
            "mangledName": "$s5NEKit11HTTPAdapterC7observeACSb_tcfc",
            "moduleName": "NEKit",
            "overriding": true,
            "implicit": true,
            "declAttributes": [
              "Override"
            ],
            "init_kind": "Designated"
          }
        ],
        "declKind": "Class",
        "usr": "c:@M@NEKit@objc(cs)HTTPAdapter",
        "mangledName": "$s5NEKit11HTTPAdapterC",
        "moduleName": "NEKit",
        "declAttributes": [
          "AccessControl",
          "RawDocComment",
          "ObjC"
        ],
        "superclassUsr": "c:@M@NEKit@objc(cs)AdapterSocket",
        "superclassNames": [
          "NEKit.AdapterSocket",
          "ObjectiveC.NSObject"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "SocketProtocol",
            "printedName": "SocketProtocol",
            "usr": "s:5NEKit14SocketProtocolP",
            "mangledName": "$s5NEKit14SocketProtocolP"
          },
          {
            "kind": "Conformance",
            "name": "RawTCPSocketDelegate",
            "printedName": "RawTCPSocketDelegate",
            "usr": "s:5NEKit20RawTCPSocketDelegateP",
            "mangledName": "$s5NEKit20RawTCPSocketDelegateP"
          },
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "CVarArg",
            "printedName": "CVarArg",
            "usr": "s:s7CVarArgP",
            "mangledName": "$ss7CVarArgP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObservingPublishing",
            "printedName": "_KeyValueCodingAndObservingPublishing",
            "usr": "s:10Foundation37_KeyValueCodingAndObservingPublishingP",
            "mangledName": "$s10Foundation37_KeyValueCodingAndObservingPublishingP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObserving",
            "printedName": "_KeyValueCodingAndObserving",
            "usr": "s:10Foundation27_KeyValueCodingAndObservingP",
            "mangledName": "$s10Foundation27_KeyValueCodingAndObservingP"
          },
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "CustomDebugStringConvertible",
            "printedName": "CustomDebugStringConvertible",
            "usr": "s:s28CustomDebugStringConvertibleP",
            "mangledName": "$ss28CustomDebugStringConvertibleP"
          }
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "TypeDecl",
        "name": "Utils",
        "printedName": "Utils",
        "children": [
          {
            "kind": "TypeDecl",
            "name": "HTTPData",
            "printedName": "HTTPData",
            "children": [
              {
                "kind": "Var",
                "name": "DoubleCRLF",
                "printedName": "DoubleCRLF",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Data",
                    "printedName": "Foundation.Data",
                    "usr": "s:10Foundation4DataV"
                  }
                ],
                "declKind": "Var",
                "usr": "s:5NEKit5UtilsV8HTTPDataV10DoubleCRLF10Foundation4DataVvpZ",
                "mangledName": "$s5NEKit5UtilsV8HTTPDataV10DoubleCRLF10Foundation4DataVvpZ",
                "moduleName": "NEKit",
                "static": true,
                "declAttributes": [
                  "HasInitialValue",
                  "HasStorage",
                  "AccessControl"
                ],
                "isLet": true,
                "hasStorage": true,
                "accessors": [
                  {
                    "kind": "Accessor",
                    "name": "Get",
                    "printedName": "Get()",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Data",
                        "printedName": "Foundation.Data",
                        "usr": "s:10Foundation4DataV"
                      }
                    ],
                    "declKind": "Accessor",
                    "usr": "s:5NEKit5UtilsV8HTTPDataV10DoubleCRLF10Foundation4DataVvgZ",
                    "mangledName": "$s5NEKit5UtilsV8HTTPDataV10DoubleCRLF10Foundation4DataVvgZ",
                    "moduleName": "NEKit",
                    "static": true,
                    "implicit": true,
                    "accessorKind": "get"
                  }
                ]
              },
              {
                "kind": "Var",
                "name": "CRLF",
                "printedName": "CRLF",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Data",
                    "printedName": "Foundation.Data",
                    "usr": "s:10Foundation4DataV"
                  }
                ],
                "declKind": "Var",
                "usr": "s:5NEKit5UtilsV8HTTPDataV4CRLF10Foundation4DataVvpZ",
                "mangledName": "$s5NEKit5UtilsV8HTTPDataV4CRLF10Foundation4DataVvpZ",
                "moduleName": "NEKit",
                "static": true,
                "declAttributes": [
                  "HasInitialValue",
                  "HasStorage",
                  "AccessControl"
                ],
                "isLet": true,
                "hasStorage": true,
                "accessors": [
                  {
                    "kind": "Accessor",
                    "name": "Get",
                    "printedName": "Get()",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Data",
                        "printedName": "Foundation.Data",
                        "usr": "s:10Foundation4DataV"
                      }
                    ],
                    "declKind": "Accessor",
                    "usr": "s:5NEKit5UtilsV8HTTPDataV4CRLF10Foundation4DataVvgZ",
                    "mangledName": "$s5NEKit5UtilsV8HTTPDataV4CRLF10Foundation4DataVvgZ",
                    "moduleName": "NEKit",
                    "static": true,
                    "implicit": true,
                    "accessorKind": "get"
                  }
                ]
              },
              {
                "kind": "Var",
                "name": "ConnectSuccessResponse",
                "printedName": "ConnectSuccessResponse",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Data",
                    "printedName": "Foundation.Data",
                    "usr": "s:10Foundation4DataV"
                  }
                ],
                "declKind": "Var",
                "usr": "s:5NEKit5UtilsV8HTTPDataV22ConnectSuccessResponse10Foundation4DataVvpZ",
                "mangledName": "$s5NEKit5UtilsV8HTTPDataV22ConnectSuccessResponse10Foundation4DataVvpZ",
                "moduleName": "NEKit",
                "static": true,
                "declAttributes": [
                  "HasInitialValue",
                  "HasStorage",
                  "AccessControl"
                ],
                "isLet": true,
                "hasStorage": true,
                "accessors": [
                  {
                    "kind": "Accessor",
                    "name": "Get",
                    "printedName": "Get()",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Data",
                        "printedName": "Foundation.Data",
                        "usr": "s:10Foundation4DataV"
                      }
                    ],
                    "declKind": "Accessor",
                    "usr": "s:5NEKit5UtilsV8HTTPDataV22ConnectSuccessResponse10Foundation4DataVvgZ",
                    "mangledName": "$s5NEKit5UtilsV8HTTPDataV22ConnectSuccessResponse10Foundation4DataVvgZ",
                    "moduleName": "NEKit",
                    "static": true,
                    "implicit": true,
                    "accessorKind": "get"
                  }
                ]
              }
            ],
            "declKind": "Struct",
            "usr": "s:5NEKit5UtilsV8HTTPDataV",
            "mangledName": "$s5NEKit5UtilsV8HTTPDataV",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ]
          },
          {
            "kind": "TypeDecl",
            "name": "DNS",
            "printedName": "DNS",
            "children": [
              {
                "kind": "TypeDecl",
                "name": "QueryType",
                "printedName": "QueryType",
                "children": [
                  {
                    "kind": "Var",
                    "name": "a",
                    "printedName": "a",
                    "children": [
                      {
                        "kind": "TypeFunc",
                        "name": "Function",
                        "printedName": "(NEKit.Utils.DNS.QueryType.Type) -> NEKit.Utils.DNS.QueryType",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "QueryType",
                            "printedName": "NEKit.Utils.DNS.QueryType",
                            "usr": "s:5NEKit5UtilsV3DNSV9QueryTypeO"
                          },
                          {
                            "kind": "TypeNominal",
                            "name": "Metatype",
                            "printedName": "NEKit.Utils.DNS.QueryType.Type",
                            "children": [
                              {
                                "kind": "TypeNominal",
                                "name": "QueryType",
                                "printedName": "NEKit.Utils.DNS.QueryType",
                                "usr": "s:5NEKit5UtilsV3DNSV9QueryTypeO"
                              }
                            ]
                          }
                        ]
                      }
                    ],
                    "declKind": "EnumElement",
                    "usr": "s:5NEKit5UtilsV3DNSV9QueryTypeO1ayA2GmF",
                    "mangledName": "$s5NEKit5UtilsV3DNSV9QueryTypeO1ayA2GmF",
                    "moduleName": "NEKit",
                    "declAttributes": [
                      "RawDocComment"
                    ]
                  },
                  {
                    "kind": "Var",
                    "name": "aaaa",
                    "printedName": "aaaa",
                    "children": [
                      {
                        "kind": "TypeFunc",
                        "name": "Function",
                        "printedName": "(NEKit.Utils.DNS.QueryType.Type) -> NEKit.Utils.DNS.QueryType",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "QueryType",
                            "printedName": "NEKit.Utils.DNS.QueryType",
                            "usr": "s:5NEKit5UtilsV3DNSV9QueryTypeO"
                          },
                          {
                            "kind": "TypeNominal",
                            "name": "Metatype",
                            "printedName": "NEKit.Utils.DNS.QueryType.Type",
                            "children": [
                              {
                                "kind": "TypeNominal",
                                "name": "QueryType",
                                "printedName": "NEKit.Utils.DNS.QueryType",
                                "usr": "s:5NEKit5UtilsV3DNSV9QueryTypeO"
                              }
                            ]
                          }
                        ]
                      }
                    ],
                    "declKind": "EnumElement",
                    "usr": "s:5NEKit5UtilsV3DNSV9QueryTypeO4aaaayA2GmF",
                    "mangledName": "$s5NEKit5UtilsV3DNSV9QueryTypeO4aaaayA2GmF",
                    "moduleName": "NEKit",
                    "declAttributes": [
                      "RawDocComment"
                    ]
                  },
                  {
                    "kind": "Var",
                    "name": "unspec",
                    "printedName": "unspec",
                    "children": [
                      {
                        "kind": "TypeFunc",
                        "name": "Function",
                        "printedName": "(NEKit.Utils.DNS.QueryType.Type) -> NEKit.Utils.DNS.QueryType",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "QueryType",
                            "printedName": "NEKit.Utils.DNS.QueryType",
                            "usr": "s:5NEKit5UtilsV3DNSV9QueryTypeO"
                          },
                          {
                            "kind": "TypeNominal",
                            "name": "Metatype",
                            "printedName": "NEKit.Utils.DNS.QueryType.Type",
                            "children": [
                              {
                                "kind": "TypeNominal",
                                "name": "QueryType",
                                "printedName": "NEKit.Utils.DNS.QueryType",
                                "usr": "s:5NEKit5UtilsV3DNSV9QueryTypeO"
                              }
                            ]
                          }
                        ]
                      }
                    ],
                    "declKind": "EnumElement",
                    "usr": "s:5NEKit5UtilsV3DNSV9QueryTypeO6unspecyA2GmF",
                    "mangledName": "$s5NEKit5UtilsV3DNSV9QueryTypeO6unspecyA2GmF",
                    "moduleName": "NEKit",
                    "declAttributes": [
                      "RawDocComment"
                    ]
                  },
                  {
                    "kind": "Function",
                    "name": "==",
                    "printedName": "==(_:_:)",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Bool",
                        "printedName": "Swift.Bool",
                        "usr": "s:Sb"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "QueryType",
                        "printedName": "NEKit.Utils.DNS.QueryType",
                        "usr": "s:5NEKit5UtilsV3DNSV9QueryTypeO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "QueryType",
                        "printedName": "NEKit.Utils.DNS.QueryType",
                        "usr": "s:5NEKit5UtilsV3DNSV9QueryTypeO"
                      }
                    ],
                    "declKind": "Func",
                    "usr": "s:5NEKit5UtilsV3DNSV9QueryTypeO2eeoiySbAG_AGtFZ",
                    "mangledName": "$s5NEKit5UtilsV3DNSV9QueryTypeO2eeoiySbAG_AGtFZ",
                    "moduleName": "NEKit",
                    "static": true,
                    "implicit": true,
                    "funcSelfKind": "NonMutating"
                  },
                  {
                    "kind": "Var",
                    "name": "hashValue",
                    "printedName": "hashValue",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Int",
                        "printedName": "Swift.Int",
                        "usr": "s:Si"
                      }
                    ],
                    "declKind": "Var",
                    "usr": "s:5NEKit5UtilsV3DNSV9QueryTypeO9hashValueSivp",
                    "mangledName": "$s5NEKit5UtilsV3DNSV9QueryTypeO9hashValueSivp",
                    "moduleName": "NEKit",
                    "implicit": true,
                    "accessors": [
                      {
                        "kind": "Accessor",
                        "name": "Get",
                        "printedName": "Get()",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "Int",
                            "printedName": "Swift.Int",
                            "usr": "s:Si"
                          }
                        ],
                        "declKind": "Accessor",
                        "usr": "s:5NEKit5UtilsV3DNSV9QueryTypeO9hashValueSivg",
                        "mangledName": "$s5NEKit5UtilsV3DNSV9QueryTypeO9hashValueSivg",
                        "moduleName": "NEKit",
                        "implicit": true,
                        "accessorKind": "get"
                      }
                    ]
                  },
                  {
                    "kind": "Function",
                    "name": "hash",
                    "printedName": "hash(into:)",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Void",
                        "printedName": "()"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Hasher",
                        "printedName": "Swift.Hasher",
                        "paramValueOwnership": "InOut",
                        "usr": "s:s6HasherV"
                      }
                    ],
                    "declKind": "Func",
                    "usr": "s:5NEKit5UtilsV3DNSV9QueryTypeO4hash4intoys6HasherVz_tF",
                    "mangledName": "$s5NEKit5UtilsV3DNSV9QueryTypeO4hash4intoys6HasherVz_tF",
                    "moduleName": "NEKit",
                    "implicit": true,
                    "funcSelfKind": "NonMutating"
                  }
                ],
                "declKind": "Enum",
                "usr": "s:5NEKit5UtilsV3DNSV9QueryTypeO",
                "mangledName": "$s5NEKit5UtilsV3DNSV9QueryTypeO",
                "moduleName": "NEKit",
                "declAttributes": [
                  "AccessControl",
                  "RawDocComment"
                ],
                "conformances": [
                  {
                    "kind": "Conformance",
                    "name": "Equatable",
                    "printedName": "Equatable",
                    "usr": "s:SQ",
                    "mangledName": "$sSQ"
                  },
                  {
                    "kind": "Conformance",
                    "name": "Hashable",
                    "printedName": "Hashable",
                    "usr": "s:SH",
                    "mangledName": "$sSH"
                  }
                ]
              },
              {
                "kind": "Function",
                "name": "resolve",
                "printedName": "resolve(_:type:)",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "QueryType",
                    "printedName": "NEKit.Utils.DNS.QueryType",
                    "hasDefaultArg": true,
                    "usr": "s:5NEKit5UtilsV3DNSV9QueryTypeO"
                  }
                ],
                "declKind": "Func",
                "usr": "s:5NEKit5UtilsV3DNSV7resolve_4typeS2S_AE9QueryTypeOtFZ",
                "mangledName": "$s5NEKit5UtilsV3DNSV7resolve_4typeS2S_AE9QueryTypeOtFZ",
                "moduleName": "NEKit",
                "static": true,
                "declAttributes": [
                  "AccessControl"
                ],
                "funcSelfKind": "NonMutating"
              }
            ],
            "declKind": "Struct",
            "usr": "s:5NEKit5UtilsV3DNSV",
            "mangledName": "$s5NEKit5UtilsV3DNSV",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ]
          },
          {
            "kind": "TypeDecl",
            "name": "IP",
            "printedName": "IP",
            "children": [
              {
                "kind": "Function",
                "name": "isIPv4",
                "printedName": "isIPv4(_:)",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Bool",
                    "printedName": "Swift.Bool",
                    "usr": "s:Sb"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Func",
                "usr": "s:5NEKit5UtilsV2IPV6isIPv4ySbSSFZ",
                "mangledName": "$s5NEKit5UtilsV2IPV6isIPv4ySbSSFZ",
                "moduleName": "NEKit",
                "static": true,
                "declAttributes": [
                  "AccessControl"
                ],
                "funcSelfKind": "NonMutating"
              },
              {
                "kind": "Function",
                "name": "isIPv6",
                "printedName": "isIPv6(_:)",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Bool",
                    "printedName": "Swift.Bool",
                    "usr": "s:Sb"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Func",
                "usr": "s:5NEKit5UtilsV2IPV6isIPv6ySbSSFZ",
                "mangledName": "$s5NEKit5UtilsV2IPV6isIPv6ySbSSFZ",
                "moduleName": "NEKit",
                "static": true,
                "declAttributes": [
                  "AccessControl"
                ],
                "funcSelfKind": "NonMutating"
              },
              {
                "kind": "Function",
                "name": "isIP",
                "printedName": "isIP(_:)",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Bool",
                    "printedName": "Swift.Bool",
                    "usr": "s:Sb"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Func",
                "usr": "s:5NEKit5UtilsV2IPV02isC0ySbSSFZ",
                "mangledName": "$s5NEKit5UtilsV2IPV02isC0ySbSSFZ",
                "moduleName": "NEKit",
                "static": true,
                "declAttributes": [
                  "AccessControl"
                ],
                "funcSelfKind": "NonMutating"
              },
              {
                "kind": "Function",
                "name": "IPv4ToInt",
                "printedName": "IPv4ToInt(_:)",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "Swift.UInt32?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "UInt32",
                        "printedName": "Swift.UInt32",
                        "usr": "s:s6UInt32V"
                      }
                    ],
                    "usr": "s:Sq"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Func",
                "usr": "s:5NEKit5UtilsV2IPV9IPv4ToIntys6UInt32VSgSSFZ",
                "mangledName": "$s5NEKit5UtilsV2IPV9IPv4ToIntys6UInt32VSgSSFZ",
                "moduleName": "NEKit",
                "static": true,
                "declAttributes": [
                  "AccessControl"
                ],
                "funcSelfKind": "NonMutating"
              },
              {
                "kind": "Function",
                "name": "IPv4ToBytes",
                "printedName": "IPv4ToBytes(_:)",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "[Swift.UInt8]?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Array",
                        "printedName": "[Swift.UInt8]",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "UInt8",
                            "printedName": "Swift.UInt8",
                            "usr": "s:s5UInt8V"
                          }
                        ],
                        "usr": "s:Sa"
                      }
                    ],
                    "usr": "s:Sq"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Func",
                "usr": "s:5NEKit5UtilsV2IPV11IPv4ToBytesySays5UInt8VGSgSSFZ",
                "mangledName": "$s5NEKit5UtilsV2IPV11IPv4ToBytesySays5UInt8VGSgSSFZ",
                "moduleName": "NEKit",
                "static": true,
                "declAttributes": [
                  "AccessControl"
                ],
                "funcSelfKind": "NonMutating"
              },
              {
                "kind": "Function",
                "name": "IPv6ToBytes",
                "printedName": "IPv6ToBytes(_:)",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "[Swift.UInt8]?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Array",
                        "printedName": "[Swift.UInt8]",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "UInt8",
                            "printedName": "Swift.UInt8",
                            "usr": "s:s5UInt8V"
                          }
                        ],
                        "usr": "s:Sa"
                      }
                    ],
                    "usr": "s:Sq"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Func",
                "usr": "s:5NEKit5UtilsV2IPV11IPv6ToBytesySays5UInt8VGSgSSFZ",
                "mangledName": "$s5NEKit5UtilsV2IPV11IPv6ToBytesySays5UInt8VGSgSSFZ",
                "moduleName": "NEKit",
                "static": true,
                "declAttributes": [
                  "AccessControl"
                ],
                "funcSelfKind": "NonMutating"
              }
            ],
            "declKind": "Struct",
            "usr": "s:5NEKit5UtilsV2IPV",
            "mangledName": "$s5NEKit5UtilsV2IPV",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ]
          }
        ],
        "declKind": "Struct",
        "usr": "s:5NEKit5UtilsV",
        "mangledName": "$s5NEKit5UtilsV",
        "moduleName": "NEKit",
        "declAttributes": [
          "AccessControl"
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "TypeDecl",
        "name": "ProxySocket",
        "printedName": "ProxySocket",
        "children": [
          {
            "kind": "Var",
            "name": "session",
            "printedName": "session",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "NEKit.ConnectSession?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "ConnectSession",
                    "printedName": "NEKit.ConnectSession",
                    "usr": "s:5NEKit14ConnectSessionC"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit11ProxySocketC7sessionAA14ConnectSessionCSgvp",
            "mangledName": "$s5NEKit11ProxySocketC7sessionAA14ConnectSessionCSgvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "HasInitialValue",
              "HasStorage",
              "AccessControl",
              "RawDocComment"
            ],
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "NEKit.ConnectSession?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "ConnectSession",
                        "printedName": "NEKit.ConnectSession",
                        "usr": "s:5NEKit14ConnectSessionC"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit11ProxySocketC7sessionAA14ConnectSessionCSgvg",
                "mangledName": "$s5NEKit11ProxySocketC7sessionAA14ConnectSessionCSgvg",
                "moduleName": "NEKit",
                "implicit": true,
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "NEKit.ConnectSession?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "ConnectSession",
                        "printedName": "NEKit.ConnectSession",
                        "usr": "s:5NEKit14ConnectSessionC"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit11ProxySocketC7sessionAA14ConnectSessionCSgvs",
                "mangledName": "$s5NEKit11ProxySocketC7sessionAA14ConnectSessionCSgvs",
                "moduleName": "NEKit",
                "implicit": true,
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit11ProxySocketC7sessionAA14ConnectSessionCSgvM",
                "mangledName": "$s5NEKit11ProxySocketC7sessionAA14ConnectSessionCSgvM",
                "moduleName": "NEKit",
                "implicit": true,
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "observer",
            "printedName": "observer",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "NEKit.Observer<NEKit.ProxySocketEvent>?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Observer",
                    "printedName": "NEKit.Observer<NEKit.ProxySocketEvent>",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "ProxySocketEvent",
                        "printedName": "NEKit.ProxySocketEvent",
                        "usr": "s:5NEKit16ProxySocketEventO"
                      }
                    ],
                    "usr": "s:5NEKit8ObserverC"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit11ProxySocketC8observerAA8ObserverCyAA0bC5EventOGSgvp",
            "mangledName": "$s5NEKit11ProxySocketC8observerAA8ObserverCyAA0bC5EventOGSgvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "HasInitialValue",
              "HasStorage",
              "AccessControl"
            ],
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "NEKit.Observer<NEKit.ProxySocketEvent>?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Observer",
                        "printedName": "NEKit.Observer<NEKit.ProxySocketEvent>",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "ProxySocketEvent",
                            "printedName": "NEKit.ProxySocketEvent",
                            "usr": "s:5NEKit16ProxySocketEventO"
                          }
                        ],
                        "usr": "s:5NEKit8ObserverC"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit11ProxySocketC8observerAA8ObserverCyAA0bC5EventOGSgvg",
                "mangledName": "$s5NEKit11ProxySocketC8observerAA8ObserverCyAA0bC5EventOGSgvg",
                "moduleName": "NEKit",
                "implicit": true,
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "NEKit.Observer<NEKit.ProxySocketEvent>?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Observer",
                        "printedName": "NEKit.Observer<NEKit.ProxySocketEvent>",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "ProxySocketEvent",
                            "printedName": "NEKit.ProxySocketEvent",
                            "usr": "s:5NEKit16ProxySocketEventO"
                          }
                        ],
                        "usr": "s:5NEKit8ObserverC"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit11ProxySocketC8observerAA8ObserverCyAA0bC5EventOGSgvs",
                "mangledName": "$s5NEKit11ProxySocketC8observerAA8ObserverCyAA0bC5EventOGSgvs",
                "moduleName": "NEKit",
                "implicit": true,
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit11ProxySocketC8observerAA8ObserverCyAA0bC5EventOGSgvM",
                "mangledName": "$s5NEKit11ProxySocketC8observerAA8ObserverCyAA0bC5EventOGSgvM",
                "moduleName": "NEKit",
                "implicit": true,
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "description",
            "printedName": "description",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Var",
            "usr": "c:@M@NEKit@objc(cs)ProxySocket(py)description",
            "mangledName": "$s5NEKit11ProxySocketC11descriptionSSvp",
            "moduleName": "NEKit",
            "overriding": true,
            "isOpen": true,
            "objc_name": "description",
            "declAttributes": [
              "Dynamic",
              "ObjC",
              "Override",
              "AccessControl"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "c:@M@NEKit@objc(cs)ProxySocket(im)description",
                "mangledName": "$s5NEKit11ProxySocketC11descriptionSSvg",
                "moduleName": "NEKit",
                "overriding": true,
                "isOpen": true,
                "objc_name": "description",
                "declAttributes": [
                  "Dynamic",
                  "ObjC"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(socket:observe:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "ProxySocket",
                "printedName": "NEKit.ProxySocket",
                "usr": "c:@M@NEKit@objc(cs)ProxySocket"
              },
              {
                "kind": "TypeNominal",
                "name": "RawTCPSocketProtocol",
                "printedName": "NEKit.RawTCPSocketProtocol",
                "usr": "s:5NEKit20RawTCPSocketProtocolP"
              },
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "hasDefaultArg": true,
                "usr": "s:Sb"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit11ProxySocketC6socket7observeAcA20RawTCPSocketProtocol_p_Sbtcfc",
            "mangledName": "$s5NEKit11ProxySocketC6socket7observeAcA20RawTCPSocketProtocol_p_Sbtcfc",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "init_kind": "Designated"
          },
          {
            "kind": "Function",
            "name": "openSocket",
            "printedName": "openSocket()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit11ProxySocketC04openC0yyF",
            "mangledName": "$s5NEKit11ProxySocketC04openC0yyF",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "respondTo",
            "printedName": "respondTo(adapter:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "AdapterSocket",
                "printedName": "NEKit.AdapterSocket",
                "usr": "c:@M@NEKit@objc(cs)AdapterSocket"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit11ProxySocketC9respondTo7adapteryAA07AdapterC0C_tF",
            "mangledName": "$s5NEKit11ProxySocketC9respondTo7adapteryAA07AdapterC0C_tF",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "readData",
            "printedName": "readData()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit11ProxySocketC8readDatayyF",
            "mangledName": "$s5NEKit11ProxySocketC8readDatayyF",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "write",
            "printedName": "write(data:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit11ProxySocketC5write4datay10Foundation4DataV_tF",
            "mangledName": "$s5NEKit11ProxySocketC5write4datay10Foundation4DataV_tF",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "disconnect",
            "printedName": "disconnect(becauseOf:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Swift.Error?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Error",
                    "printedName": "Swift.Error",
                    "usr": "s:s5ErrorP"
                  }
                ],
                "hasDefaultArg": true,
                "usr": "s:Sq"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit11ProxySocketC10disconnect9becauseOfys5Error_pSg_tF",
            "mangledName": "$s5NEKit11ProxySocketC10disconnect9becauseOfys5Error_pSg_tF",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "forceDisconnect",
            "printedName": "forceDisconnect(becauseOf:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Swift.Error?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Error",
                    "printedName": "Swift.Error",
                    "usr": "s:s5ErrorP"
                  }
                ],
                "hasDefaultArg": true,
                "usr": "s:Sq"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit11ProxySocketC15forceDisconnect9becauseOfys5Error_pSg_tF",
            "mangledName": "$s5NEKit11ProxySocketC15forceDisconnect9becauseOfys5Error_pSg_tF",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Var",
            "name": "socket",
            "printedName": "socket",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "ImplicitlyUnwrappedOptional",
                "printedName": "NEKit.RawTCPSocketProtocol?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "RawTCPSocketProtocol",
                    "printedName": "NEKit.RawTCPSocketProtocol",
                    "usr": "s:5NEKit20RawTCPSocketProtocolP"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit11ProxySocketC6socketAA20RawTCPSocketProtocol_pSgvp",
            "mangledName": "$s5NEKit11ProxySocketC6socketAA20RawTCPSocketProtocol_pSgvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "HasInitialValue",
              "HasStorage",
              "AccessControl",
              "RawDocComment"
            ],
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "ImplicitlyUnwrappedOptional",
                    "printedName": "NEKit.RawTCPSocketProtocol?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "RawTCPSocketProtocol",
                        "printedName": "NEKit.RawTCPSocketProtocol",
                        "usr": "s:5NEKit20RawTCPSocketProtocolP"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit11ProxySocketC6socketAA20RawTCPSocketProtocol_pSgvg",
                "mangledName": "$s5NEKit11ProxySocketC6socketAA20RawTCPSocketProtocol_pSgvg",
                "moduleName": "NEKit",
                "implicit": true,
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "ImplicitlyUnwrappedOptional",
                    "printedName": "NEKit.RawTCPSocketProtocol?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "RawTCPSocketProtocol",
                        "printedName": "NEKit.RawTCPSocketProtocol",
                        "usr": "s:5NEKit20RawTCPSocketProtocolP"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit11ProxySocketC6socketAA20RawTCPSocketProtocol_pSgvs",
                "mangledName": "$s5NEKit11ProxySocketC6socketAA20RawTCPSocketProtocol_pSgvs",
                "moduleName": "NEKit",
                "implicit": true,
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit11ProxySocketC6socketAA20RawTCPSocketProtocol_pSgvM",
                "mangledName": "$s5NEKit11ProxySocketC6socketAA20RawTCPSocketProtocol_pSgvM",
                "moduleName": "NEKit",
                "implicit": true,
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "delegate",
            "printedName": "delegate",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "WeakStorage",
                "printedName": "NEKit.SocketDelegate?"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit11ProxySocketC8delegateAA0C8Delegate_pSgvp",
            "mangledName": "$s5NEKit11ProxySocketC8delegateAA0C8Delegate_pSgvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "HasInitialValue",
              "HasStorage",
              "AccessControl",
              "ReferenceOwnership",
              "RawDocComment"
            ],
            "ownership": 1,
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "NEKit.SocketDelegate?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "SocketDelegate",
                        "printedName": "NEKit.SocketDelegate",
                        "usr": "s:5NEKit14SocketDelegateP"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit11ProxySocketC8delegateAA0C8Delegate_pSgvg",
                "mangledName": "$s5NEKit11ProxySocketC8delegateAA0C8Delegate_pSgvg",
                "moduleName": "NEKit",
                "implicit": true,
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "NEKit.SocketDelegate?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "SocketDelegate",
                        "printedName": "NEKit.SocketDelegate",
                        "usr": "s:5NEKit14SocketDelegateP"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit11ProxySocketC8delegateAA0C8Delegate_pSgvs",
                "mangledName": "$s5NEKit11ProxySocketC8delegateAA0C8Delegate_pSgvs",
                "moduleName": "NEKit",
                "implicit": true,
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit11ProxySocketC8delegateAA0C8Delegate_pSgvM",
                "mangledName": "$s5NEKit11ProxySocketC8delegateAA0C8Delegate_pSgvM",
                "moduleName": "NEKit",
                "implicit": true,
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "status",
            "printedName": "status",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "SocketStatus",
                "printedName": "NEKit.SocketStatus",
                "usr": "s:5NEKit12SocketStatusO"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit11ProxySocketC6statusAA0C6StatusOvp",
            "mangledName": "$s5NEKit11ProxySocketC6statusAA0C6StatusOvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SocketStatus",
                    "printedName": "NEKit.SocketStatus",
                    "usr": "s:5NEKit12SocketStatusO"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit11ProxySocketC6statusAA0C6StatusOvg",
                "mangledName": "$s5NEKit11ProxySocketC6statusAA0C6StatusOvg",
                "moduleName": "NEKit",
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Function",
            "name": "didDisconnectWith",
            "printedName": "didDisconnectWith(socket:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "RawTCPSocketProtocol",
                "printedName": "NEKit.RawTCPSocketProtocol",
                "usr": "s:5NEKit20RawTCPSocketProtocolP"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit11ProxySocketC17didDisconnectWith6socketyAA20RawTCPSocketProtocol_p_tF",
            "mangledName": "$s5NEKit11ProxySocketC17didDisconnectWith6socketyAA20RawTCPSocketProtocol_p_tF",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "didRead",
            "printedName": "didRead(data:from:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              },
              {
                "kind": "TypeNominal",
                "name": "RawTCPSocketProtocol",
                "printedName": "NEKit.RawTCPSocketProtocol",
                "usr": "s:5NEKit20RawTCPSocketProtocolP"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit11ProxySocketC7didRead4data4fromy10Foundation4DataV_AA20RawTCPSocketProtocol_ptF",
            "mangledName": "$s5NEKit11ProxySocketC7didRead4data4fromy10Foundation4DataV_AA20RawTCPSocketProtocol_ptF",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "didWrite",
            "printedName": "didWrite(data:by:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Foundation.Data?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Data",
                    "printedName": "Foundation.Data",
                    "usr": "s:10Foundation4DataV"
                  }
                ],
                "usr": "s:Sq"
              },
              {
                "kind": "TypeNominal",
                "name": "RawTCPSocketProtocol",
                "printedName": "NEKit.RawTCPSocketProtocol",
                "usr": "s:5NEKit20RawTCPSocketProtocolP"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit11ProxySocketC8didWrite4data2byy10Foundation4DataVSg_AA20RawTCPSocketProtocol_ptF",
            "mangledName": "$s5NEKit11ProxySocketC8didWrite4data2byy10Foundation4DataVSg_AA20RawTCPSocketProtocol_ptF",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "didConnectWith",
            "printedName": "didConnectWith(socket:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "RawTCPSocketProtocol",
                "printedName": "NEKit.RawTCPSocketProtocol",
                "usr": "s:5NEKit20RawTCPSocketProtocolP"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit11ProxySocketC14didConnectWith6socketyAA20RawTCPSocketProtocol_p_tF",
            "mangledName": "$s5NEKit11ProxySocketC14didConnectWith6socketyAA20RawTCPSocketProtocol_p_tF",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "ProxySocket",
                "printedName": "NEKit.ProxySocket",
                "usr": "c:@M@NEKit@objc(cs)ProxySocket"
              }
            ],
            "declKind": "Constructor",
            "usr": "c:@M@NEKit@objc(cs)ProxySocket(im)init",
            "mangledName": "$s5NEKit11ProxySocketCACycfc",
            "moduleName": "NEKit",
            "overriding": true,
            "implicit": true,
            "objc_name": "init",
            "declAttributes": [
              "Dynamic",
              "ObjC",
              "Override"
            ],
            "init_kind": "Designated"
          }
        ],
        "declKind": "Class",
        "usr": "c:@M@NEKit@objc(cs)ProxySocket",
        "mangledName": "$s5NEKit11ProxySocketC",
        "moduleName": "NEKit",
        "isOpen": true,
        "declAttributes": [
          "AccessControl",
          "RawDocComment",
          "ObjC"
        ],
        "superclassUsr": "c:objc(cs)NSObject",
        "superclassNames": [
          "ObjectiveC.NSObject"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "SocketProtocol",
            "printedName": "SocketProtocol",
            "usr": "s:5NEKit14SocketProtocolP",
            "mangledName": "$s5NEKit14SocketProtocolP"
          },
          {
            "kind": "Conformance",
            "name": "RawTCPSocketDelegate",
            "printedName": "RawTCPSocketDelegate",
            "usr": "s:5NEKit20RawTCPSocketDelegateP",
            "mangledName": "$s5NEKit20RawTCPSocketDelegateP"
          },
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "CVarArg",
            "printedName": "CVarArg",
            "usr": "s:s7CVarArgP",
            "mangledName": "$ss7CVarArgP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObservingPublishing",
            "printedName": "_KeyValueCodingAndObservingPublishing",
            "usr": "s:10Foundation37_KeyValueCodingAndObservingPublishingP",
            "mangledName": "$s10Foundation37_KeyValueCodingAndObservingPublishingP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObserving",
            "printedName": "_KeyValueCodingAndObserving",
            "usr": "s:10Foundation27_KeyValueCodingAndObservingP",
            "mangledName": "$s10Foundation27_KeyValueCodingAndObservingP"
          },
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "CustomDebugStringConvertible",
            "printedName": "CustomDebugStringConvertible",
            "usr": "s:s28CustomDebugStringConvertibleP",
            "mangledName": "$ss28CustomDebugStringConvertibleP"
          }
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "TypeDecl",
        "name": "DNSSessionMatchType",
        "printedName": "DNSSessionMatchType",
        "children": [
          {
            "kind": "Var",
            "name": "domain",
            "printedName": "domain",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.DNSSessionMatchType.Type) -> NEKit.DNSSessionMatchType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSSessionMatchType",
                    "printedName": "NEKit.DNSSessionMatchType",
                    "usr": "s:5NEKit19DNSSessionMatchTypeO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.DNSSessionMatchType.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSSessionMatchType",
                        "printedName": "NEKit.DNSSessionMatchType",
                        "usr": "s:5NEKit19DNSSessionMatchTypeO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit19DNSSessionMatchTypeO6domainyA2CmF",
            "mangledName": "$s5NEKit19DNSSessionMatchTypeO6domainyA2CmF",
            "moduleName": "NEKit"
          },
          {
            "kind": "Var",
            "name": "ip",
            "printedName": "ip",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.DNSSessionMatchType.Type) -> NEKit.DNSSessionMatchType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSSessionMatchType",
                    "printedName": "NEKit.DNSSessionMatchType",
                    "usr": "s:5NEKit19DNSSessionMatchTypeO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.DNSSessionMatchType.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSSessionMatchType",
                        "printedName": "NEKit.DNSSessionMatchType",
                        "usr": "s:5NEKit19DNSSessionMatchTypeO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit19DNSSessionMatchTypeO2ipyA2CmF",
            "mangledName": "$s5NEKit19DNSSessionMatchTypeO2ipyA2CmF",
            "moduleName": "NEKit"
          },
          {
            "kind": "Function",
            "name": "==",
            "printedName": "==(_:_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              },
              {
                "kind": "TypeNominal",
                "name": "DNSSessionMatchType",
                "printedName": "NEKit.DNSSessionMatchType",
                "usr": "s:5NEKit19DNSSessionMatchTypeO"
              },
              {
                "kind": "TypeNominal",
                "name": "DNSSessionMatchType",
                "printedName": "NEKit.DNSSessionMatchType",
                "usr": "s:5NEKit19DNSSessionMatchTypeO"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit19DNSSessionMatchTypeO2eeoiySbAC_ACtFZ",
            "mangledName": "$s5NEKit19DNSSessionMatchTypeO2eeoiySbAC_ACtFZ",
            "moduleName": "NEKit",
            "static": true,
            "implicit": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Var",
            "name": "hashValue",
            "printedName": "hashValue",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit19DNSSessionMatchTypeO9hashValueSivp",
            "mangledName": "$s5NEKit19DNSSessionMatchTypeO9hashValueSivp",
            "moduleName": "NEKit",
            "implicit": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit19DNSSessionMatchTypeO9hashValueSivg",
                "mangledName": "$s5NEKit19DNSSessionMatchTypeO9hashValueSivg",
                "moduleName": "NEKit",
                "implicit": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Function",
            "name": "hash",
            "printedName": "hash(into:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Hasher",
                "printedName": "Swift.Hasher",
                "paramValueOwnership": "InOut",
                "usr": "s:s6HasherV"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit19DNSSessionMatchTypeO4hash4intoys6HasherVz_tF",
            "mangledName": "$s5NEKit19DNSSessionMatchTypeO4hash4intoys6HasherVz_tF",
            "moduleName": "NEKit",
            "implicit": true,
            "funcSelfKind": "NonMutating"
          }
        ],
        "declKind": "Enum",
        "usr": "s:5NEKit19DNSSessionMatchTypeO",
        "mangledName": "$s5NEKit19DNSSessionMatchTypeO",
        "moduleName": "NEKit",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          }
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "TypeDecl",
        "name": "UDPDirectStack",
        "printedName": "UDPDirectStack",
        "children": [
          {
            "kind": "Var",
            "name": "outputFunc",
            "printedName": "outputFunc",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "ImplicitlyUnwrappedOptional",
                "printedName": "(([Foundation.Data], [Foundation.NSNumber]) -> ())?",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "([Foundation.Data], [Foundation.NSNumber]) -> ()",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Void",
                        "printedName": "()"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Tuple",
                        "printedName": "([Foundation.Data], [Foundation.NSNumber])",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "Array",
                            "printedName": "[Foundation.Data]",
                            "children": [
                              {
                                "kind": "TypeNominal",
                                "name": "Data",
                                "printedName": "Foundation.Data",
                                "usr": "s:10Foundation4DataV"
                              }
                            ],
                            "usr": "s:Sa"
                          },
                          {
                            "kind": "TypeNominal",
                            "name": "Array",
                            "printedName": "[Foundation.NSNumber]",
                            "children": [
                              {
                                "kind": "TypeNominal",
                                "name": "NSNumber",
                                "printedName": "Foundation.NSNumber",
                                "usr": "c:objc(cs)NSNumber"
                              }
                            ],
                            "usr": "s:Sa"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit14UDPDirectStackC10outputFuncySay10Foundation4DataVG_SaySo8NSNumberCGtcSgvp",
            "mangledName": "$s5NEKit14UDPDirectStackC10outputFuncySay10Foundation4DataVG_SaySo8NSNumberCGtcSgvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "HasInitialValue",
              "HasStorage",
              "AccessControl"
            ],
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "ImplicitlyUnwrappedOptional",
                    "printedName": "(([Foundation.Data], [Foundation.NSNumber]) -> ())?",
                    "children": [
                      {
                        "kind": "TypeFunc",
                        "name": "Function",
                        "printedName": "([Foundation.Data], [Foundation.NSNumber]) -> ()",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "Void",
                            "printedName": "()"
                          },
                          {
                            "kind": "TypeNominal",
                            "name": "Tuple",
                            "printedName": "([Foundation.Data], [Foundation.NSNumber])",
                            "children": [
                              {
                                "kind": "TypeNominal",
                                "name": "Array",
                                "printedName": "[Foundation.Data]",
                                "children": [
                                  {
                                    "kind": "TypeNominal",
                                    "name": "Data",
                                    "printedName": "Foundation.Data",
                                    "usr": "s:10Foundation4DataV"
                                  }
                                ],
                                "usr": "s:Sa"
                              },
                              {
                                "kind": "TypeNominal",
                                "name": "Array",
                                "printedName": "[Foundation.NSNumber]",
                                "children": [
                                  {
                                    "kind": "TypeNominal",
                                    "name": "NSNumber",
                                    "printedName": "Foundation.NSNumber",
                                    "usr": "c:objc(cs)NSNumber"
                                  }
                                ],
                                "usr": "s:Sa"
                              }
                            ]
                          }
                        ]
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit14UDPDirectStackC10outputFuncySay10Foundation4DataVG_SaySo8NSNumberCGtcSgvg",
                "mangledName": "$s5NEKit14UDPDirectStackC10outputFuncySay10Foundation4DataVG_SaySo8NSNumberCGtcSgvg",
                "moduleName": "NEKit",
                "implicit": true,
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "ImplicitlyUnwrappedOptional",
                    "printedName": "(([Foundation.Data], [Foundation.NSNumber]) -> ())?",
                    "children": [
                      {
                        "kind": "TypeFunc",
                        "name": "Function",
                        "printedName": "([Foundation.Data], [Foundation.NSNumber]) -> ()",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "Void",
                            "printedName": "()"
                          },
                          {
                            "kind": "TypeNominal",
                            "name": "Tuple",
                            "printedName": "([Foundation.Data], [Foundation.NSNumber])",
                            "children": [
                              {
                                "kind": "TypeNominal",
                                "name": "Array",
                                "printedName": "[Foundation.Data]",
                                "children": [
                                  {
                                    "kind": "TypeNominal",
                                    "name": "Data",
                                    "printedName": "Foundation.Data",
                                    "usr": "s:10Foundation4DataV"
                                  }
                                ],
                                "usr": "s:Sa"
                              },
                              {
                                "kind": "TypeNominal",
                                "name": "Array",
                                "printedName": "[Foundation.NSNumber]",
                                "children": [
                                  {
                                    "kind": "TypeNominal",
                                    "name": "NSNumber",
                                    "printedName": "Foundation.NSNumber",
                                    "usr": "c:objc(cs)NSNumber"
                                  }
                                ],
                                "usr": "s:Sa"
                              }
                            ]
                          }
                        ]
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit14UDPDirectStackC10outputFuncySay10Foundation4DataVG_SaySo8NSNumberCGtcSgvs",
                "mangledName": "$s5NEKit14UDPDirectStackC10outputFuncySay10Foundation4DataVG_SaySo8NSNumberCGtcSgvs",
                "moduleName": "NEKit",
                "implicit": true,
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit14UDPDirectStackC10outputFuncySay10Foundation4DataVG_SaySo8NSNumberCGtcSgvM",
                "mangledName": "$s5NEKit14UDPDirectStackC10outputFuncySay10Foundation4DataVG_SaySo8NSNumberCGtcSgvM",
                "moduleName": "NEKit",
                "implicit": true,
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "UDPDirectStack",
                "printedName": "NEKit.UDPDirectStack",
                "usr": "s:5NEKit14UDPDirectStackC"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit14UDPDirectStackCACycfc",
            "mangledName": "$s5NEKit14UDPDirectStackCACycfc",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "init_kind": "Designated"
          },
          {
            "kind": "Function",
            "name": "input",
            "printedName": "input(packet:version:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              },
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Foundation.NSNumber?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "NSNumber",
                    "printedName": "Foundation.NSNumber",
                    "usr": "c:objc(cs)NSNumber"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit14UDPDirectStackC5input6packet7versionSb10Foundation4DataV_So8NSNumberCSgtF",
            "mangledName": "$s5NEKit14UDPDirectStackC5input6packet7versionSb10Foundation4DataV_So8NSNumberCSgtF",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "start",
            "printedName": "start()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit14UDPDirectStackC5startyyF",
            "mangledName": "$s5NEKit14UDPDirectStackC5startyyF",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "stop",
            "printedName": "stop()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit14UDPDirectStackC4stopyyF",
            "mangledName": "$s5NEKit14UDPDirectStackC4stopyyF",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "didReceive",
            "printedName": "didReceive(data:from:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              },
              {
                "kind": "TypeNominal",
                "name": "NWUDPSocket",
                "printedName": "NEKit.NWUDPSocket",
                "usr": "c:@M@NEKit@objc(cs)NWUDPSocket"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit14UDPDirectStackC10didReceive4data4fromy10Foundation4DataV_AA11NWUDPSocketCtF",
            "mangledName": "$s5NEKit14UDPDirectStackC10didReceive4data4fromy10Foundation4DataV_AA11NWUDPSocketCtF",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "didCancel",
            "printedName": "didCancel(socket:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "NWUDPSocket",
                "printedName": "NEKit.NWUDPSocket",
                "usr": "c:@M@NEKit@objc(cs)NWUDPSocket"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit14UDPDirectStackC9didCancel6socketyAA11NWUDPSocketC_tF",
            "mangledName": "$s5NEKit14UDPDirectStackC9didCancel6socketyAA11NWUDPSocketC_tF",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "funcSelfKind": "NonMutating"
          }
        ],
        "declKind": "Class",
        "usr": "s:5NEKit14UDPDirectStackC",
        "mangledName": "$s5NEKit14UDPDirectStackC",
        "moduleName": "NEKit",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "IPStackProtocol",
            "printedName": "IPStackProtocol",
            "usr": "s:5NEKit15IPStackProtocolP",
            "mangledName": "$s5NEKit15IPStackProtocolP"
          },
          {
            "kind": "Conformance",
            "name": "NWUDPSocketDelegate",
            "printedName": "NWUDPSocketDelegate",
            "usr": "s:5NEKit19NWUDPSocketDelegateP",
            "mangledName": "$s5NEKit19NWUDPSocketDelegateP"
          }
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "NEKit",
        "declAttributes": [
          "RawDocComment"
        ]
      },
      {
        "kind": "Import",
        "name": "NetworkExtension",
        "printedName": "NetworkExtension",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "Import",
        "name": "WidgetKit",
        "printedName": "WidgetKit",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "Import",
        "name": "CocoaLumberjackSwift",
        "printedName": "CocoaLumberjackSwift",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "TypeDecl",
        "name": "DNSMessage",
        "printedName": "DNSMessage",
        "children": [
          {
            "kind": "Var",
            "name": "transactionID",
            "printedName": "transactionID",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "UInt16",
                "printedName": "Swift.UInt16",
                "usr": "s:s6UInt16V"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit10DNSMessageC13transactionIDs6UInt16Vvp",
            "mangledName": "$s5NEKit10DNSMessageC13transactionIDs6UInt16Vvp",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "HasInitialValue",
              "HasStorage",
              "AccessControl",
              "RawDocComment"
            ],
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt16",
                    "printedName": "Swift.UInt16",
                    "usr": "s:s6UInt16V"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit10DNSMessageC13transactionIDs6UInt16Vvg",
                "mangledName": "$s5NEKit10DNSMessageC13transactionIDs6UInt16Vvg",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "UInt16",
                    "printedName": "Swift.UInt16",
                    "usr": "s:s6UInt16V"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit10DNSMessageC13transactionIDs6UInt16Vvs",
                "mangledName": "$s5NEKit10DNSMessageC13transactionIDs6UInt16Vvs",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit10DNSMessageC13transactionIDs6UInt16VvM",
                "mangledName": "$s5NEKit10DNSMessageC13transactionIDs6UInt16VvM",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "messageType",
            "printedName": "messageType",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "DNSMessageType",
                "printedName": "NEKit.DNSMessageType",
                "usr": "s:5NEKit14DNSMessageTypeO"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit10DNSMessageC11messageTypeAA0bD0Ovp",
            "mangledName": "$s5NEKit10DNSMessageC11messageTypeAA0bD0Ovp",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "HasInitialValue",
              "HasStorage",
              "AccessControl"
            ],
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSMessageType",
                    "printedName": "NEKit.DNSMessageType",
                    "usr": "s:5NEKit14DNSMessageTypeO"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit10DNSMessageC11messageTypeAA0bD0Ovg",
                "mangledName": "$s5NEKit10DNSMessageC11messageTypeAA0bD0Ovg",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "DNSMessageType",
                    "printedName": "NEKit.DNSMessageType",
                    "usr": "s:5NEKit14DNSMessageTypeO"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit10DNSMessageC11messageTypeAA0bD0Ovs",
                "mangledName": "$s5NEKit10DNSMessageC11messageTypeAA0bD0Ovs",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit10DNSMessageC11messageTypeAA0bD0OvM",
                "mangledName": "$s5NEKit10DNSMessageC11messageTypeAA0bD0OvM",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "authoritative",
            "printedName": "authoritative",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit10DNSMessageC13authoritativeSbvp",
            "mangledName": "$s5NEKit10DNSMessageC13authoritativeSbvp",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "HasInitialValue",
              "HasStorage",
              "AccessControl"
            ],
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Bool",
                    "printedName": "Swift.Bool",
                    "usr": "s:Sb"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit10DNSMessageC13authoritativeSbvg",
                "mangledName": "$s5NEKit10DNSMessageC13authoritativeSbvg",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Bool",
                    "printedName": "Swift.Bool",
                    "usr": "s:Sb"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit10DNSMessageC13authoritativeSbvs",
                "mangledName": "$s5NEKit10DNSMessageC13authoritativeSbvs",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit10DNSMessageC13authoritativeSbvM",
                "mangledName": "$s5NEKit10DNSMessageC13authoritativeSbvM",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "truncation",
            "printedName": "truncation",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit10DNSMessageC10truncationSbvp",
            "mangledName": "$s5NEKit10DNSMessageC10truncationSbvp",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "HasInitialValue",
              "HasStorage",
              "AccessControl"
            ],
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Bool",
                    "printedName": "Swift.Bool",
                    "usr": "s:Sb"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit10DNSMessageC10truncationSbvg",
                "mangledName": "$s5NEKit10DNSMessageC10truncationSbvg",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Bool",
                    "printedName": "Swift.Bool",
                    "usr": "s:Sb"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit10DNSMessageC10truncationSbvs",
                "mangledName": "$s5NEKit10DNSMessageC10truncationSbvs",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit10DNSMessageC10truncationSbvM",
                "mangledName": "$s5NEKit10DNSMessageC10truncationSbvM",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "recursionDesired",
            "printedName": "recursionDesired",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit10DNSMessageC16recursionDesiredSbvp",
            "mangledName": "$s5NEKit10DNSMessageC16recursionDesiredSbvp",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "HasInitialValue",
              "HasStorage",
              "AccessControl"
            ],
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Bool",
                    "printedName": "Swift.Bool",
                    "usr": "s:Sb"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit10DNSMessageC16recursionDesiredSbvg",
                "mangledName": "$s5NEKit10DNSMessageC16recursionDesiredSbvg",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Bool",
                    "printedName": "Swift.Bool",
                    "usr": "s:Sb"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit10DNSMessageC16recursionDesiredSbvs",
                "mangledName": "$s5NEKit10DNSMessageC16recursionDesiredSbvs",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit10DNSMessageC16recursionDesiredSbvM",
                "mangledName": "$s5NEKit10DNSMessageC16recursionDesiredSbvM",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "recursionAvailable",
            "printedName": "recursionAvailable",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit10DNSMessageC18recursionAvailableSbvp",
            "mangledName": "$s5NEKit10DNSMessageC18recursionAvailableSbvp",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "HasInitialValue",
              "HasStorage",
              "AccessControl"
            ],
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Bool",
                    "printedName": "Swift.Bool",
                    "usr": "s:Sb"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit10DNSMessageC18recursionAvailableSbvg",
                "mangledName": "$s5NEKit10DNSMessageC18recursionAvailableSbvg",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Bool",
                    "printedName": "Swift.Bool",
                    "usr": "s:Sb"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit10DNSMessageC18recursionAvailableSbvs",
                "mangledName": "$s5NEKit10DNSMessageC18recursionAvailableSbvs",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit10DNSMessageC18recursionAvailableSbvM",
                "mangledName": "$s5NEKit10DNSMessageC18recursionAvailableSbvM",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "status",
            "printedName": "status",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "DNSReturnStatus",
                "printedName": "NEKit.DNSReturnStatus",
                "usr": "s:5NEKit15DNSReturnStatusO"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit10DNSMessageC6statusAA15DNSReturnStatusOvp",
            "mangledName": "$s5NEKit10DNSMessageC6statusAA15DNSReturnStatusOvp",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "HasInitialValue",
              "HasStorage",
              "AccessControl"
            ],
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSReturnStatus",
                    "printedName": "NEKit.DNSReturnStatus",
                    "usr": "s:5NEKit15DNSReturnStatusO"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit10DNSMessageC6statusAA15DNSReturnStatusOvg",
                "mangledName": "$s5NEKit10DNSMessageC6statusAA15DNSReturnStatusOvg",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "DNSReturnStatus",
                    "printedName": "NEKit.DNSReturnStatus",
                    "usr": "s:5NEKit15DNSReturnStatusO"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit10DNSMessageC6statusAA15DNSReturnStatusOvs",
                "mangledName": "$s5NEKit10DNSMessageC6statusAA15DNSReturnStatusOvs",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit10DNSMessageC6statusAA15DNSReturnStatusOvM",
                "mangledName": "$s5NEKit10DNSMessageC6statusAA15DNSReturnStatusOvM",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "queries",
            "printedName": "queries",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Array",
                "printedName": "[NEKit.DNSQuery]",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSQuery",
                    "printedName": "NEKit.DNSQuery",
                    "usr": "s:5NEKit8DNSQueryC"
                  }
                ],
                "usr": "s:Sa"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit10DNSMessageC7queriesSayAA8DNSQueryCGvp",
            "mangledName": "$s5NEKit10DNSMessageC7queriesSayAA8DNSQueryCGvp",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "HasInitialValue",
              "HasStorage",
              "AccessControl"
            ],
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Array",
                    "printedName": "[NEKit.DNSQuery]",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSQuery",
                        "printedName": "NEKit.DNSQuery",
                        "usr": "s:5NEKit8DNSQueryC"
                      }
                    ],
                    "usr": "s:Sa"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit10DNSMessageC7queriesSayAA8DNSQueryCGvg",
                "mangledName": "$s5NEKit10DNSMessageC7queriesSayAA8DNSQueryCGvg",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Array",
                    "printedName": "[NEKit.DNSQuery]",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSQuery",
                        "printedName": "NEKit.DNSQuery",
                        "usr": "s:5NEKit8DNSQueryC"
                      }
                    ],
                    "usr": "s:Sa"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit10DNSMessageC7queriesSayAA8DNSQueryCGvs",
                "mangledName": "$s5NEKit10DNSMessageC7queriesSayAA8DNSQueryCGvs",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit10DNSMessageC7queriesSayAA8DNSQueryCGvM",
                "mangledName": "$s5NEKit10DNSMessageC7queriesSayAA8DNSQueryCGvM",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "answers",
            "printedName": "answers",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Array",
                "printedName": "[NEKit.DNSResource]",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSResource",
                    "printedName": "NEKit.DNSResource",
                    "usr": "s:5NEKit11DNSResourceC"
                  }
                ],
                "usr": "s:Sa"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit10DNSMessageC7answersSayAA11DNSResourceCGvp",
            "mangledName": "$s5NEKit10DNSMessageC7answersSayAA11DNSResourceCGvp",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "HasInitialValue",
              "HasStorage",
              "AccessControl"
            ],
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Array",
                    "printedName": "[NEKit.DNSResource]",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSResource",
                        "printedName": "NEKit.DNSResource",
                        "usr": "s:5NEKit11DNSResourceC"
                      }
                    ],
                    "usr": "s:Sa"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit10DNSMessageC7answersSayAA11DNSResourceCGvg",
                "mangledName": "$s5NEKit10DNSMessageC7answersSayAA11DNSResourceCGvg",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Array",
                    "printedName": "[NEKit.DNSResource]",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSResource",
                        "printedName": "NEKit.DNSResource",
                        "usr": "s:5NEKit11DNSResourceC"
                      }
                    ],
                    "usr": "s:Sa"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit10DNSMessageC7answersSayAA11DNSResourceCGvs",
                "mangledName": "$s5NEKit10DNSMessageC7answersSayAA11DNSResourceCGvs",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit10DNSMessageC7answersSayAA11DNSResourceCGvM",
                "mangledName": "$s5NEKit10DNSMessageC7answersSayAA11DNSResourceCGvM",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "nameservers",
            "printedName": "nameservers",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Array",
                "printedName": "[NEKit.DNSResource]",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSResource",
                    "printedName": "NEKit.DNSResource",
                    "usr": "s:5NEKit11DNSResourceC"
                  }
                ],
                "usr": "s:Sa"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit10DNSMessageC11nameserversSayAA11DNSResourceCGvp",
            "mangledName": "$s5NEKit10DNSMessageC11nameserversSayAA11DNSResourceCGvp",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "HasInitialValue",
              "HasStorage",
              "AccessControl"
            ],
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Array",
                    "printedName": "[NEKit.DNSResource]",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSResource",
                        "printedName": "NEKit.DNSResource",
                        "usr": "s:5NEKit11DNSResourceC"
                      }
                    ],
                    "usr": "s:Sa"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit10DNSMessageC11nameserversSayAA11DNSResourceCGvg",
                "mangledName": "$s5NEKit10DNSMessageC11nameserversSayAA11DNSResourceCGvg",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Array",
                    "printedName": "[NEKit.DNSResource]",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSResource",
                        "printedName": "NEKit.DNSResource",
                        "usr": "s:5NEKit11DNSResourceC"
                      }
                    ],
                    "usr": "s:Sa"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit10DNSMessageC11nameserversSayAA11DNSResourceCGvs",
                "mangledName": "$s5NEKit10DNSMessageC11nameserversSayAA11DNSResourceCGvs",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit10DNSMessageC11nameserversSayAA11DNSResourceCGvM",
                "mangledName": "$s5NEKit10DNSMessageC11nameserversSayAA11DNSResourceCGvM",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "addtionals",
            "printedName": "addtionals",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Array",
                "printedName": "[NEKit.DNSResource]",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSResource",
                    "printedName": "NEKit.DNSResource",
                    "usr": "s:5NEKit11DNSResourceC"
                  }
                ],
                "usr": "s:Sa"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit10DNSMessageC10addtionalsSayAA11DNSResourceCGvp",
            "mangledName": "$s5NEKit10DNSMessageC10addtionalsSayAA11DNSResourceCGvp",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "HasInitialValue",
              "HasStorage",
              "AccessControl"
            ],
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Array",
                    "printedName": "[NEKit.DNSResource]",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSResource",
                        "printedName": "NEKit.DNSResource",
                        "usr": "s:5NEKit11DNSResourceC"
                      }
                    ],
                    "usr": "s:Sa"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit10DNSMessageC10addtionalsSayAA11DNSResourceCGvg",
                "mangledName": "$s5NEKit10DNSMessageC10addtionalsSayAA11DNSResourceCGvg",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Array",
                    "printedName": "[NEKit.DNSResource]",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "DNSResource",
                        "printedName": "NEKit.DNSResource",
                        "usr": "s:5NEKit11DNSResourceC"
                      }
                    ],
                    "usr": "s:Sa"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit10DNSMessageC10addtionalsSayAA11DNSResourceCGvs",
                "mangledName": "$s5NEKit10DNSMessageC10addtionalsSayAA11DNSResourceCGvs",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit10DNSMessageC10addtionalsSayAA11DNSResourceCGvM",
                "mangledName": "$s5NEKit10DNSMessageC10addtionalsSayAA11DNSResourceCGvM",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "_modify"
              }
            ]
          }
        ],
        "declKind": "Class",
        "usr": "s:5NEKit10DNSMessageC",
        "mangledName": "$s5NEKit10DNSMessageC",
        "moduleName": "NEKit",
        "isOpen": true,
        "declAttributes": [
          "AccessControl"
        ],
        "hasMissingDesignatedInitializers": true
      },
      {
        "kind": "TypeDecl",
        "name": "DNSQuery",
        "printedName": "DNSQuery",
        "children": [
          {
            "kind": "Var",
            "name": "name",
            "printedName": "name",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit8DNSQueryC4nameSSvp",
            "mangledName": "$s5NEKit8DNSQueryC4nameSSvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "Final",
              "HasStorage",
              "AccessControl"
            ],
            "isLet": true,
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit8DNSQueryC4nameSSvg",
                "mangledName": "$s5NEKit8DNSQueryC4nameSSvg",
                "moduleName": "NEKit",
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "type",
            "printedName": "type",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "DNSType",
                "printedName": "NEKit.DNSType",
                "usr": "s:5NEKit7DNSTypeO"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit8DNSQueryC4typeAA7DNSTypeOvp",
            "mangledName": "$s5NEKit8DNSQueryC4typeAA7DNSTypeOvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "Final",
              "HasStorage",
              "AccessControl"
            ],
            "isLet": true,
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSType",
                    "printedName": "NEKit.DNSType",
                    "usr": "s:5NEKit7DNSTypeO"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit8DNSQueryC4typeAA7DNSTypeOvg",
                "mangledName": "$s5NEKit8DNSQueryC4typeAA7DNSTypeOvg",
                "moduleName": "NEKit",
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "klass",
            "printedName": "klass",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "DNSClass",
                "printedName": "NEKit.DNSClass",
                "usr": "s:5NEKit8DNSClassO"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit8DNSQueryC5klassAA8DNSClassOvp",
            "mangledName": "$s5NEKit8DNSQueryC5klassAA8DNSClassOvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "Final",
              "HasStorage",
              "AccessControl"
            ],
            "isLet": true,
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSClass",
                    "printedName": "NEKit.DNSClass",
                    "usr": "s:5NEKit8DNSClassO"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit8DNSQueryC5klassAA8DNSClassOvg",
                "mangledName": "$s5NEKit8DNSQueryC5klassAA8DNSClassOvg",
                "moduleName": "NEKit",
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "get"
              }
            ]
          }
        ],
        "declKind": "Class",
        "usr": "s:5NEKit8DNSQueryC",
        "mangledName": "$s5NEKit8DNSQueryC",
        "moduleName": "NEKit",
        "isOpen": true,
        "declAttributes": [
          "AccessControl"
        ],
        "hasMissingDesignatedInitializers": true
      },
      {
        "kind": "TypeDecl",
        "name": "DNSResource",
        "printedName": "DNSResource",
        "children": [
          {
            "kind": "Var",
            "name": "name",
            "printedName": "name",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit11DNSResourceC4nameSSvp",
            "mangledName": "$s5NEKit11DNSResourceC4nameSSvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "Final",
              "HasStorage",
              "AccessControl"
            ],
            "isLet": true,
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit11DNSResourceC4nameSSvg",
                "mangledName": "$s5NEKit11DNSResourceC4nameSSvg",
                "moduleName": "NEKit",
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "type",
            "printedName": "type",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "DNSType",
                "printedName": "NEKit.DNSType",
                "usr": "s:5NEKit7DNSTypeO"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit11DNSResourceC4typeAA7DNSTypeOvp",
            "mangledName": "$s5NEKit11DNSResourceC4typeAA7DNSTypeOvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "Final",
              "HasStorage",
              "AccessControl"
            ],
            "isLet": true,
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSType",
                    "printedName": "NEKit.DNSType",
                    "usr": "s:5NEKit7DNSTypeO"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit11DNSResourceC4typeAA7DNSTypeOvg",
                "mangledName": "$s5NEKit11DNSResourceC4typeAA7DNSTypeOvg",
                "moduleName": "NEKit",
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "klass",
            "printedName": "klass",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "DNSClass",
                "printedName": "NEKit.DNSClass",
                "usr": "s:5NEKit8DNSClassO"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit11DNSResourceC5klassAA8DNSClassOvp",
            "mangledName": "$s5NEKit11DNSResourceC5klassAA8DNSClassOvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "Final",
              "HasStorage",
              "AccessControl"
            ],
            "isLet": true,
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DNSClass",
                    "printedName": "NEKit.DNSClass",
                    "usr": "s:5NEKit8DNSClassO"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit11DNSResourceC5klassAA8DNSClassOvg",
                "mangledName": "$s5NEKit11DNSResourceC5klassAA8DNSClassOvg",
                "moduleName": "NEKit",
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "TTL",
            "printedName": "TTL",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "UInt32",
                "printedName": "Swift.UInt32",
                "usr": "s:s6UInt32V"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit11DNSResourceC3TTLs6UInt32Vvp",
            "mangledName": "$s5NEKit11DNSResourceC3TTLs6UInt32Vvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "Final",
              "HasStorage",
              "AccessControl"
            ],
            "isLet": true,
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt32",
                    "printedName": "Swift.UInt32",
                    "usr": "s:s6UInt32V"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit11DNSResourceC3TTLs6UInt32Vvg",
                "mangledName": "$s5NEKit11DNSResourceC3TTLs6UInt32Vvg",
                "moduleName": "NEKit",
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "data",
            "printedName": "data",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit11DNSResourceC4data10Foundation4DataVvp",
            "mangledName": "$s5NEKit11DNSResourceC4data10Foundation4DataVvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "Final",
              "HasStorage",
              "AccessControl"
            ],
            "isLet": true,
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Data",
                    "printedName": "Foundation.Data",
                    "usr": "s:10Foundation4DataV"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit11DNSResourceC4data10Foundation4DataVvg",
                "mangledName": "$s5NEKit11DNSResourceC4data10Foundation4DataVvg",
                "moduleName": "NEKit",
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "get"
              }
            ]
          }
        ],
        "declKind": "Class",
        "usr": "s:5NEKit11DNSResourceC",
        "mangledName": "$s5NEKit11DNSResourceC",
        "moduleName": "NEKit",
        "isOpen": true,
        "declAttributes": [
          "AccessControl"
        ],
        "hasMissingDesignatedInitializers": true
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "TypeDecl",
        "name": "Opt",
        "printedName": "Opt",
        "children": [
          {
            "kind": "Var",
            "name": "MAXNWTCPSocketReadDataSize",
            "printedName": "MAXNWTCPSocketReadDataSize",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit3OptV26MAXNWTCPSocketReadDataSizeSivpZ",
            "mangledName": "$s5NEKit3OptV26MAXNWTCPSocketReadDataSizeSivpZ",
            "moduleName": "NEKit",
            "static": true,
            "declAttributes": [
              "HasInitialValue",
              "HasStorage",
              "AccessControl"
            ],
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit3OptV26MAXNWTCPSocketReadDataSizeSivgZ",
                "mangledName": "$s5NEKit3OptV26MAXNWTCPSocketReadDataSizeSivgZ",
                "moduleName": "NEKit",
                "static": true,
                "implicit": true,
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit3OptV26MAXNWTCPSocketReadDataSizeSivsZ",
                "mangledName": "$s5NEKit3OptV26MAXNWTCPSocketReadDataSizeSivsZ",
                "moduleName": "NEKit",
                "static": true,
                "implicit": true,
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit3OptV26MAXNWTCPSocketReadDataSizeSivMZ",
                "mangledName": "$s5NEKit3OptV26MAXNWTCPSocketReadDataSizeSivMZ",
                "moduleName": "NEKit",
                "static": true,
                "implicit": true,
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "MAXNWTCPScanLength",
            "printedName": "MAXNWTCPScanLength",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit3OptV18MAXNWTCPScanLengthSivpZ",
            "mangledName": "$s5NEKit3OptV18MAXNWTCPScanLengthSivpZ",
            "moduleName": "NEKit",
            "static": true,
            "declAttributes": [
              "HasInitialValue",
              "HasStorage",
              "AccessControl",
              "RawDocComment"
            ],
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit3OptV18MAXNWTCPScanLengthSivgZ",
                "mangledName": "$s5NEKit3OptV18MAXNWTCPScanLengthSivgZ",
                "moduleName": "NEKit",
                "static": true,
                "implicit": true,
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit3OptV18MAXNWTCPScanLengthSivsZ",
                "mangledName": "$s5NEKit3OptV18MAXNWTCPScanLengthSivsZ",
                "moduleName": "NEKit",
                "static": true,
                "implicit": true,
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit3OptV18MAXNWTCPScanLengthSivMZ",
                "mangledName": "$s5NEKit3OptV18MAXNWTCPScanLengthSivMZ",
                "moduleName": "NEKit",
                "static": true,
                "implicit": true,
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "DNSFakeIPTTL",
            "printedName": "DNSFakeIPTTL",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit3OptV12DNSFakeIPTTLSivpZ",
            "mangledName": "$s5NEKit3OptV12DNSFakeIPTTLSivpZ",
            "moduleName": "NEKit",
            "static": true,
            "declAttributes": [
              "HasInitialValue",
              "HasStorage",
              "AccessControl"
            ],
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit3OptV12DNSFakeIPTTLSivgZ",
                "mangledName": "$s5NEKit3OptV12DNSFakeIPTTLSivgZ",
                "moduleName": "NEKit",
                "static": true,
                "implicit": true,
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit3OptV12DNSFakeIPTTLSivsZ",
                "mangledName": "$s5NEKit3OptV12DNSFakeIPTTLSivsZ",
                "moduleName": "NEKit",
                "static": true,
                "implicit": true,
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit3OptV12DNSFakeIPTTLSivMZ",
                "mangledName": "$s5NEKit3OptV12DNSFakeIPTTLSivMZ",
                "moduleName": "NEKit",
                "static": true,
                "implicit": true,
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "DNSPendingSessionLifeTime",
            "printedName": "DNSPendingSessionLifeTime",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit3OptV25DNSPendingSessionLifeTimeSivpZ",
            "mangledName": "$s5NEKit3OptV25DNSPendingSessionLifeTimeSivpZ",
            "moduleName": "NEKit",
            "static": true,
            "declAttributes": [
              "HasInitialValue",
              "HasStorage",
              "AccessControl"
            ],
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit3OptV25DNSPendingSessionLifeTimeSivgZ",
                "mangledName": "$s5NEKit3OptV25DNSPendingSessionLifeTimeSivgZ",
                "moduleName": "NEKit",
                "static": true,
                "implicit": true,
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit3OptV25DNSPendingSessionLifeTimeSivsZ",
                "mangledName": "$s5NEKit3OptV25DNSPendingSessionLifeTimeSivsZ",
                "moduleName": "NEKit",
                "static": true,
                "implicit": true,
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit3OptV25DNSPendingSessionLifeTimeSivMZ",
                "mangledName": "$s5NEKit3OptV25DNSPendingSessionLifeTimeSivMZ",
                "moduleName": "NEKit",
                "static": true,
                "implicit": true,
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "UDPSocketActiveTimeout",
            "printedName": "UDPSocketActiveTimeout",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit3OptV22UDPSocketActiveTimeoutSivpZ",
            "mangledName": "$s5NEKit3OptV22UDPSocketActiveTimeoutSivpZ",
            "moduleName": "NEKit",
            "static": true,
            "declAttributes": [
              "HasInitialValue",
              "HasStorage",
              "AccessControl"
            ],
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit3OptV22UDPSocketActiveTimeoutSivgZ",
                "mangledName": "$s5NEKit3OptV22UDPSocketActiveTimeoutSivgZ",
                "moduleName": "NEKit",
                "static": true,
                "implicit": true,
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit3OptV22UDPSocketActiveTimeoutSivsZ",
                "mangledName": "$s5NEKit3OptV22UDPSocketActiveTimeoutSivsZ",
                "moduleName": "NEKit",
                "static": true,
                "implicit": true,
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit3OptV22UDPSocketActiveTimeoutSivMZ",
                "mangledName": "$s5NEKit3OptV22UDPSocketActiveTimeoutSivMZ",
                "moduleName": "NEKit",
                "static": true,
                "implicit": true,
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "UDPSocketActiveCheckInterval",
            "printedName": "UDPSocketActiveCheckInterval",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit3OptV28UDPSocketActiveCheckIntervalSivpZ",
            "mangledName": "$s5NEKit3OptV28UDPSocketActiveCheckIntervalSivpZ",
            "moduleName": "NEKit",
            "static": true,
            "declAttributes": [
              "HasInitialValue",
              "HasStorage",
              "AccessControl"
            ],
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit3OptV28UDPSocketActiveCheckIntervalSivgZ",
                "mangledName": "$s5NEKit3OptV28UDPSocketActiveCheckIntervalSivgZ",
                "moduleName": "NEKit",
                "static": true,
                "implicit": true,
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit3OptV28UDPSocketActiveCheckIntervalSivsZ",
                "mangledName": "$s5NEKit3OptV28UDPSocketActiveCheckIntervalSivsZ",
                "moduleName": "NEKit",
                "static": true,
                "implicit": true,
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit3OptV28UDPSocketActiveCheckIntervalSivMZ",
                "mangledName": "$s5NEKit3OptV28UDPSocketActiveCheckIntervalSivMZ",
                "moduleName": "NEKit",
                "static": true,
                "implicit": true,
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "MAXHTTPContentBlockLength",
            "printedName": "MAXHTTPContentBlockLength",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit3OptV25MAXHTTPContentBlockLengthSivpZ",
            "mangledName": "$s5NEKit3OptV25MAXHTTPContentBlockLengthSivpZ",
            "moduleName": "NEKit",
            "static": true,
            "declAttributes": [
              "HasInitialValue",
              "HasStorage",
              "AccessControl"
            ],
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit3OptV25MAXHTTPContentBlockLengthSivgZ",
                "mangledName": "$s5NEKit3OptV25MAXHTTPContentBlockLengthSivgZ",
                "moduleName": "NEKit",
                "static": true,
                "implicit": true,
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit3OptV25MAXHTTPContentBlockLengthSivsZ",
                "mangledName": "$s5NEKit3OptV25MAXHTTPContentBlockLengthSivsZ",
                "moduleName": "NEKit",
                "static": true,
                "implicit": true,
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit3OptV25MAXHTTPContentBlockLengthSivMZ",
                "mangledName": "$s5NEKit3OptV25MAXHTTPContentBlockLengthSivMZ",
                "moduleName": "NEKit",
                "static": true,
                "implicit": true,
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "RejectAdapterDefaultDelay",
            "printedName": "RejectAdapterDefaultDelay",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit3OptV25RejectAdapterDefaultDelaySivpZ",
            "mangledName": "$s5NEKit3OptV25RejectAdapterDefaultDelaySivpZ",
            "moduleName": "NEKit",
            "static": true,
            "declAttributes": [
              "HasInitialValue",
              "HasStorage",
              "AccessControl"
            ],
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit3OptV25RejectAdapterDefaultDelaySivgZ",
                "mangledName": "$s5NEKit3OptV25RejectAdapterDefaultDelaySivgZ",
                "moduleName": "NEKit",
                "static": true,
                "implicit": true,
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit3OptV25RejectAdapterDefaultDelaySivsZ",
                "mangledName": "$s5NEKit3OptV25RejectAdapterDefaultDelaySivsZ",
                "moduleName": "NEKit",
                "static": true,
                "implicit": true,
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit3OptV25RejectAdapterDefaultDelaySivMZ",
                "mangledName": "$s5NEKit3OptV25RejectAdapterDefaultDelaySivMZ",
                "moduleName": "NEKit",
                "static": true,
                "implicit": true,
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "DNSTimeout",
            "printedName": "DNSTimeout",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit3OptV10DNSTimeoutSivpZ",
            "mangledName": "$s5NEKit3OptV10DNSTimeoutSivpZ",
            "moduleName": "NEKit",
            "static": true,
            "declAttributes": [
              "HasInitialValue",
              "HasStorage",
              "AccessControl"
            ],
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit3OptV10DNSTimeoutSivgZ",
                "mangledName": "$s5NEKit3OptV10DNSTimeoutSivgZ",
                "moduleName": "NEKit",
                "static": true,
                "implicit": true,
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit3OptV10DNSTimeoutSivsZ",
                "mangledName": "$s5NEKit3OptV10DNSTimeoutSivsZ",
                "moduleName": "NEKit",
                "static": true,
                "implicit": true,
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit3OptV10DNSTimeoutSivMZ",
                "mangledName": "$s5NEKit3OptV10DNSTimeoutSivMZ",
                "moduleName": "NEKit",
                "static": true,
                "implicit": true,
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "forwardReadInterval",
            "printedName": "forwardReadInterval",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit3OptV19forwardReadIntervalSivpZ",
            "mangledName": "$s5NEKit3OptV19forwardReadIntervalSivpZ",
            "moduleName": "NEKit",
            "static": true,
            "declAttributes": [
              "HasInitialValue",
              "HasStorage",
              "AccessControl"
            ],
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit3OptV19forwardReadIntervalSivgZ",
                "mangledName": "$s5NEKit3OptV19forwardReadIntervalSivgZ",
                "moduleName": "NEKit",
                "static": true,
                "implicit": true,
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit3OptV19forwardReadIntervalSivsZ",
                "mangledName": "$s5NEKit3OptV19forwardReadIntervalSivsZ",
                "moduleName": "NEKit",
                "static": true,
                "implicit": true,
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit3OptV19forwardReadIntervalSivMZ",
                "mangledName": "$s5NEKit3OptV19forwardReadIntervalSivMZ",
                "moduleName": "NEKit",
                "static": true,
                "implicit": true,
                "accessorKind": "_modify"
              }
            ]
          }
        ],
        "declKind": "Struct",
        "usr": "s:5NEKit3OptV",
        "mangledName": "$s5NEKit3OptV",
        "moduleName": "NEKit",
        "declAttributes": [
          "AccessControl"
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "TypeDecl",
        "name": "ProxyServerEvent",
        "printedName": "ProxyServerEvent",
        "children": [
          {
            "kind": "Var",
            "name": "description",
            "printedName": "description",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit16ProxyServerEventO11descriptionSSvp",
            "mangledName": "$s5NEKit16ProxyServerEventO11descriptionSSvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit16ProxyServerEventO11descriptionSSvg",
                "mangledName": "$s5NEKit16ProxyServerEventO11descriptionSSvg",
                "moduleName": "NEKit",
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "newSocketAccepted",
            "printedName": "newSocketAccepted",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.ProxyServerEvent.Type) -> (NEKit.ProxySocket, NEKit.ProxyServer) -> NEKit.ProxyServerEvent",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(NEKit.ProxySocket, NEKit.ProxyServer) -> NEKit.ProxyServerEvent",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "ProxyServerEvent",
                        "printedName": "NEKit.ProxyServerEvent",
                        "usr": "s:5NEKit16ProxyServerEventO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Tuple",
                        "printedName": "(NEKit.ProxySocket, onServer: NEKit.ProxyServer)",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "ProxySocket",
                            "printedName": "NEKit.ProxySocket",
                            "usr": "c:@M@NEKit@objc(cs)ProxySocket"
                          },
                          {
                            "kind": "TypeNominal",
                            "name": "ProxyServer",
                            "printedName": "NEKit.ProxyServer",
                            "usr": "c:@M@NEKit@objc(cs)ProxyServer"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.ProxyServerEvent.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "ProxyServerEvent",
                        "printedName": "NEKit.ProxyServerEvent",
                        "usr": "s:5NEKit16ProxyServerEventO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit16ProxyServerEventO17newSocketAcceptedyAcA0bF0C_AA0bC0CtcACmF",
            "mangledName": "$s5NEKit16ProxyServerEventO17newSocketAcceptedyAcA0bF0C_AA0bC0CtcACmF",
            "moduleName": "NEKit"
          },
          {
            "kind": "Var",
            "name": "tunnelClosed",
            "printedName": "tunnelClosed",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.ProxyServerEvent.Type) -> (NEKit.Tunnel, NEKit.ProxyServer) -> NEKit.ProxyServerEvent",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(NEKit.Tunnel, NEKit.ProxyServer) -> NEKit.ProxyServerEvent",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "ProxyServerEvent",
                        "printedName": "NEKit.ProxyServerEvent",
                        "usr": "s:5NEKit16ProxyServerEventO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Tuple",
                        "printedName": "(NEKit.Tunnel, onServer: NEKit.ProxyServer)",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "Tunnel",
                            "printedName": "NEKit.Tunnel",
                            "usr": "c:@M@NEKit@objc(cs)Tunnel"
                          },
                          {
                            "kind": "TypeNominal",
                            "name": "ProxyServer",
                            "printedName": "NEKit.ProxyServer",
                            "usr": "c:@M@NEKit@objc(cs)ProxyServer"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.ProxyServerEvent.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "ProxyServerEvent",
                        "printedName": "NEKit.ProxyServerEvent",
                        "usr": "s:5NEKit16ProxyServerEventO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit16ProxyServerEventO12tunnelClosedyAcA6TunnelC_AA0bC0CtcACmF",
            "mangledName": "$s5NEKit16ProxyServerEventO12tunnelClosedyAcA6TunnelC_AA0bC0CtcACmF",
            "moduleName": "NEKit"
          },
          {
            "kind": "Var",
            "name": "started",
            "printedName": "started",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.ProxyServerEvent.Type) -> (NEKit.ProxyServer) -> NEKit.ProxyServerEvent",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(NEKit.ProxyServer) -> NEKit.ProxyServerEvent",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "ProxyServerEvent",
                        "printedName": "NEKit.ProxyServerEvent",
                        "usr": "s:5NEKit16ProxyServerEventO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "ProxyServer",
                        "printedName": "NEKit.ProxyServer",
                        "usr": "c:@M@NEKit@objc(cs)ProxyServer"
                      }
                    ]
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.ProxyServerEvent.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "ProxyServerEvent",
                        "printedName": "NEKit.ProxyServerEvent",
                        "usr": "s:5NEKit16ProxyServerEventO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit16ProxyServerEventO7startedyAcA0bC0CcACmF",
            "mangledName": "$s5NEKit16ProxyServerEventO7startedyAcA0bC0CcACmF",
            "moduleName": "NEKit"
          },
          {
            "kind": "Var",
            "name": "stopped",
            "printedName": "stopped",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.ProxyServerEvent.Type) -> (NEKit.ProxyServer) -> NEKit.ProxyServerEvent",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(NEKit.ProxyServer) -> NEKit.ProxyServerEvent",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "ProxyServerEvent",
                        "printedName": "NEKit.ProxyServerEvent",
                        "usr": "s:5NEKit16ProxyServerEventO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "ProxyServer",
                        "printedName": "NEKit.ProxyServer",
                        "usr": "c:@M@NEKit@objc(cs)ProxyServer"
                      }
                    ]
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.ProxyServerEvent.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "ProxyServerEvent",
                        "printedName": "NEKit.ProxyServerEvent",
                        "usr": "s:5NEKit16ProxyServerEventO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit16ProxyServerEventO7stoppedyAcA0bC0CcACmF",
            "mangledName": "$s5NEKit16ProxyServerEventO7stoppedyAcA0bC0CcACmF",
            "moduleName": "NEKit"
          }
        ],
        "declKind": "Enum",
        "usr": "s:5NEKit16ProxyServerEventO",
        "mangledName": "$s5NEKit16ProxyServerEventO",
        "moduleName": "NEKit",
        "declAttributes": [
          "AccessControl"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "EventType",
            "printedName": "EventType",
            "usr": "s:5NEKit9EventTypeP",
            "mangledName": "$s5NEKit9EventTypeP"
          },
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          }
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "Import",
        "name": "NetworkExtension",
        "printedName": "NetworkExtension",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "Import",
        "name": "CocoaLumberjackSwift",
        "printedName": "CocoaLumberjackSwift",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "TypeDecl",
        "name": "NWUDPSocketDelegate",
        "printedName": "NWUDPSocketDelegate",
        "children": [
          {
            "kind": "Function",
            "name": "didReceive",
            "printedName": "didReceive(data:from:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              },
              {
                "kind": "TypeNominal",
                "name": "NWUDPSocket",
                "printedName": "NEKit.NWUDPSocket",
                "usr": "c:@M@NEKit@objc(cs)NWUDPSocket"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit19NWUDPSocketDelegateP10didReceive4data4fromy10Foundation4DataV_AA0B0CtF",
            "mangledName": "$s5NEKit19NWUDPSocketDelegateP10didReceive4data4fromy10Foundation4DataV_AA0B0CtF",
            "moduleName": "NEKit",
            "genericSig": "<τ_0_0 where τ_0_0 : NEKit.NWUDPSocketDelegate>",
            "sugared_genericSig": "<Self where Self : NEKit.NWUDPSocketDelegate>",
            "protocolReq": true,
            "declAttributes": [
              "RawDocComment"
            ],
            "reqNewWitnessTableEntry": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "didCancel",
            "printedName": "didCancel(socket:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "NWUDPSocket",
                "printedName": "NEKit.NWUDPSocket",
                "usr": "c:@M@NEKit@objc(cs)NWUDPSocket"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit19NWUDPSocketDelegateP9didCancel6socketyAA0B0C_tF",
            "mangledName": "$s5NEKit19NWUDPSocketDelegateP9didCancel6socketyAA0B0C_tF",
            "moduleName": "NEKit",
            "genericSig": "<τ_0_0 where τ_0_0 : NEKit.NWUDPSocketDelegate>",
            "sugared_genericSig": "<Self where Self : NEKit.NWUDPSocketDelegate>",
            "protocolReq": true,
            "reqNewWitnessTableEntry": true,
            "funcSelfKind": "NonMutating"
          }
        ],
        "declKind": "Protocol",
        "usr": "s:5NEKit19NWUDPSocketDelegateP",
        "mangledName": "$s5NEKit19NWUDPSocketDelegateP",
        "moduleName": "NEKit",
        "genericSig": "<τ_0_0 : AnyObject>",
        "sugared_genericSig": "<Self : AnyObject>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "NWUDPSocket",
        "printedName": "NWUDPSocket",
        "children": [
          {
            "kind": "Var",
            "name": "delegate",
            "printedName": "delegate",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "WeakStorage",
                "printedName": "NEKit.NWUDPSocketDelegate?"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit11NWUDPSocketC8delegateAA0B8Delegate_pSgvp",
            "mangledName": "$s5NEKit11NWUDPSocketC8delegateAA0B8Delegate_pSgvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "HasInitialValue",
              "HasStorage",
              "ReferenceOwnership",
              "AccessControl",
              "RawDocComment"
            ],
            "ownership": 1,
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "NEKit.NWUDPSocketDelegate?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "NWUDPSocketDelegate",
                        "printedName": "NEKit.NWUDPSocketDelegate",
                        "usr": "s:5NEKit19NWUDPSocketDelegateP"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit11NWUDPSocketC8delegateAA0B8Delegate_pSgvg",
                "mangledName": "$s5NEKit11NWUDPSocketC8delegateAA0B8Delegate_pSgvg",
                "moduleName": "NEKit",
                "implicit": true,
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "NEKit.NWUDPSocketDelegate?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "NWUDPSocketDelegate",
                        "printedName": "NEKit.NWUDPSocketDelegate",
                        "usr": "s:5NEKit19NWUDPSocketDelegateP"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit11NWUDPSocketC8delegateAA0B8Delegate_pSgvs",
                "mangledName": "$s5NEKit11NWUDPSocketC8delegateAA0B8Delegate_pSgvs",
                "moduleName": "NEKit",
                "implicit": true,
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit11NWUDPSocketC8delegateAA0B8Delegate_pSgvM",
                "mangledName": "$s5NEKit11NWUDPSocketC8delegateAA0B8Delegate_pSgvM",
                "moduleName": "NEKit",
                "implicit": true,
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "lastActive",
            "printedName": "lastActive",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Date",
                "printedName": "Foundation.Date",
                "usr": "s:10Foundation4DateV"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit11NWUDPSocketC10lastActive10Foundation4DateVvp",
            "mangledName": "$s5NEKit11NWUDPSocketC10lastActive10Foundation4DateVvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "HasInitialValue",
              "HasStorage",
              "AccessControl",
              "RawDocComment"
            ],
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Date",
                    "printedName": "Foundation.Date",
                    "usr": "s:10Foundation4DateV"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit11NWUDPSocketC10lastActive10Foundation4DateVvg",
                "mangledName": "$s5NEKit11NWUDPSocketC10lastActive10Foundation4DateVvg",
                "moduleName": "NEKit",
                "implicit": true,
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Date",
                    "printedName": "Foundation.Date",
                    "usr": "s:10Foundation4DateV"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit11NWUDPSocketC10lastActive10Foundation4DateVvs",
                "mangledName": "$s5NEKit11NWUDPSocketC10lastActive10Foundation4DateVvs",
                "moduleName": "NEKit",
                "implicit": true,
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit11NWUDPSocketC10lastActive10Foundation4DateVvM",
                "mangledName": "$s5NEKit11NWUDPSocketC10lastActive10Foundation4DateVvM",
                "moduleName": "NEKit",
                "implicit": true,
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(host:port:timeout:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "NEKit.NWUDPSocket?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "NWUDPSocket",
                    "printedName": "NEKit.NWUDPSocket",
                    "usr": "c:@M@NEKit@objc(cs)NWUDPSocket"
                  }
                ],
                "usr": "s:Sq"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              },
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              },
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "hasDefaultArg": true,
                "usr": "s:Si"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit11NWUDPSocketC4host4port7timeoutACSgSS_S2itcfc",
            "mangledName": "$s5NEKit11NWUDPSocketC4host4port7timeoutACSgSS_S2itcfc",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "init_kind": "Designated"
          },
          {
            "kind": "Function",
            "name": "write",
            "printedName": "write(data:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit11NWUDPSocketC5write4datay10Foundation4DataV_tF",
            "mangledName": "$s5NEKit11NWUDPSocketC5write4datay10Foundation4DataV_tF",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "disconnect",
            "printedName": "disconnect()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit11NWUDPSocketC10disconnectyyF",
            "mangledName": "$s5NEKit11NWUDPSocketC10disconnectyyF",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "observeValue",
            "printedName": "observeValue(forKeyPath:of:change:context:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Swift.String?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "usr": "s:Sq"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Any?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "ProtocolComposition",
                    "printedName": "Any"
                  }
                ],
                "usr": "s:Sq"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "[Foundation.NSKeyValueChangeKey : Any]?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Dictionary",
                    "printedName": "[Foundation.NSKeyValueChangeKey : Any]",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "NSKeyValueChangeKey",
                        "printedName": "Foundation.NSKeyValueChangeKey",
                        "usr": "c:@T@NSKeyValueChangeKey"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "ProtocolComposition",
                        "printedName": "Any"
                      }
                    ],
                    "usr": "s:SD"
                  }
                ],
                "usr": "s:Sq"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Swift.UnsafeMutableRawPointer?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UnsafeMutableRawPointer",
                    "printedName": "Swift.UnsafeMutableRawPointer",
                    "usr": "s:Sv"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Func",
            "usr": "c:@M@NEKit@objc(cs)NWUDPSocket(im)observeValueForKeyPath:ofObject:change:context:",
            "mangledName": "$s5NEKit11NWUDPSocketC12observeValue10forKeyPath2of6change7contextySSSg_ypSgSDySo05NSKeyd6ChangeF0aypGSgSvSgtF",
            "moduleName": "NEKit",
            "overriding": true,
            "objc_name": "observeValueForKeyPath:ofObject:change:context:",
            "declAttributes": [
              "Dynamic",
              "ObjC",
              "Override",
              "AccessControl"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "NWUDPSocket",
                "printedName": "NEKit.NWUDPSocket",
                "usr": "c:@M@NEKit@objc(cs)NWUDPSocket"
              }
            ],
            "declKind": "Constructor",
            "usr": "c:@M@NEKit@objc(cs)NWUDPSocket(im)init",
            "mangledName": "$s5NEKit11NWUDPSocketCACycfc",
            "moduleName": "NEKit",
            "overriding": true,
            "implicit": true,
            "objc_name": "init",
            "declAttributes": [
              "Dynamic",
              "ObjC",
              "Override"
            ],
            "init_kind": "Designated"
          }
        ],
        "declKind": "Class",
        "usr": "c:@M@NEKit@objc(cs)NWUDPSocket",
        "mangledName": "$s5NEKit11NWUDPSocketC",
        "moduleName": "NEKit",
        "declAttributes": [
          "AccessControl",
          "RawDocComment",
          "ObjC"
        ],
        "superclassUsr": "c:objc(cs)NSObject",
        "superclassNames": [
          "ObjectiveC.NSObject"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "CVarArg",
            "printedName": "CVarArg",
            "usr": "s:s7CVarArgP",
            "mangledName": "$ss7CVarArgP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObservingPublishing",
            "printedName": "_KeyValueCodingAndObservingPublishing",
            "usr": "s:10Foundation37_KeyValueCodingAndObservingPublishingP",
            "mangledName": "$s10Foundation37_KeyValueCodingAndObservingPublishingP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObserving",
            "printedName": "_KeyValueCodingAndObserving",
            "usr": "s:10Foundation27_KeyValueCodingAndObservingP",
            "mangledName": "$s10Foundation27_KeyValueCodingAndObservingP"
          },
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "CustomDebugStringConvertible",
            "printedName": "CustomDebugStringConvertible",
            "usr": "s:s28CustomDebugStringConvertibleP",
            "mangledName": "$ss28CustomDebugStringConvertibleP"
          }
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "NEKit",
        "declAttributes": [
          "RawDocComment"
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "TypeDecl",
        "name": "IPRangeError",
        "printedName": "IPRangeError",
        "children": [
          {
            "kind": "Var",
            "name": "invalidCIDRFormat",
            "printedName": "invalidCIDRFormat",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.IPRangeError.Type) -> NEKit.IPRangeError",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "IPRangeError",
                    "printedName": "NEKit.IPRangeError",
                    "usr": "s:5NEKit12IPRangeErrorO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.IPRangeError.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "IPRangeError",
                        "printedName": "NEKit.IPRangeError",
                        "usr": "s:5NEKit12IPRangeErrorO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit12IPRangeErrorO17invalidCIDRFormatyA2CmF",
            "mangledName": "$s5NEKit12IPRangeErrorO17invalidCIDRFormatyA2CmF",
            "moduleName": "NEKit"
          },
          {
            "kind": "Var",
            "name": "invalidRangeFormat",
            "printedName": "invalidRangeFormat",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.IPRangeError.Type) -> NEKit.IPRangeError",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "IPRangeError",
                    "printedName": "NEKit.IPRangeError",
                    "usr": "s:5NEKit12IPRangeErrorO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.IPRangeError.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "IPRangeError",
                        "printedName": "NEKit.IPRangeError",
                        "usr": "s:5NEKit12IPRangeErrorO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit12IPRangeErrorO18invalidRangeFormatyA2CmF",
            "mangledName": "$s5NEKit12IPRangeErrorO18invalidRangeFormatyA2CmF",
            "moduleName": "NEKit"
          },
          {
            "kind": "Var",
            "name": "invalidRange",
            "printedName": "invalidRange",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.IPRangeError.Type) -> NEKit.IPRangeError",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "IPRangeError",
                    "printedName": "NEKit.IPRangeError",
                    "usr": "s:5NEKit12IPRangeErrorO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.IPRangeError.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "IPRangeError",
                        "printedName": "NEKit.IPRangeError",
                        "usr": "s:5NEKit12IPRangeErrorO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit12IPRangeErrorO12invalidRangeyA2CmF",
            "mangledName": "$s5NEKit12IPRangeErrorO12invalidRangeyA2CmF",
            "moduleName": "NEKit"
          },
          {
            "kind": "Var",
            "name": "invalidFormat",
            "printedName": "invalidFormat",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.IPRangeError.Type) -> NEKit.IPRangeError",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "IPRangeError",
                    "printedName": "NEKit.IPRangeError",
                    "usr": "s:5NEKit12IPRangeErrorO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.IPRangeError.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "IPRangeError",
                        "printedName": "NEKit.IPRangeError",
                        "usr": "s:5NEKit12IPRangeErrorO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit12IPRangeErrorO13invalidFormatyA2CmF",
            "mangledName": "$s5NEKit12IPRangeErrorO13invalidFormatyA2CmF",
            "moduleName": "NEKit"
          },
          {
            "kind": "Var",
            "name": "addressIncompatible",
            "printedName": "addressIncompatible",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.IPRangeError.Type) -> NEKit.IPRangeError",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "IPRangeError",
                    "printedName": "NEKit.IPRangeError",
                    "usr": "s:5NEKit12IPRangeErrorO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.IPRangeError.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "IPRangeError",
                        "printedName": "NEKit.IPRangeError",
                        "usr": "s:5NEKit12IPRangeErrorO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit12IPRangeErrorO19addressIncompatibleyA2CmF",
            "mangledName": "$s5NEKit12IPRangeErrorO19addressIncompatibleyA2CmF",
            "moduleName": "NEKit"
          },
          {
            "kind": "Var",
            "name": "noRange",
            "printedName": "noRange",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.IPRangeError.Type) -> NEKit.IPRangeError",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "IPRangeError",
                    "printedName": "NEKit.IPRangeError",
                    "usr": "s:5NEKit12IPRangeErrorO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.IPRangeError.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "IPRangeError",
                        "printedName": "NEKit.IPRangeError",
                        "usr": "s:5NEKit12IPRangeErrorO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit12IPRangeErrorO7noRangeyA2CmF",
            "mangledName": "$s5NEKit12IPRangeErrorO7noRangeyA2CmF",
            "moduleName": "NEKit"
          },
          {
            "kind": "Var",
            "name": "intervalInvalid",
            "printedName": "intervalInvalid",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.IPRangeError.Type) -> NEKit.IPRangeError",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "IPRangeError",
                    "printedName": "NEKit.IPRangeError",
                    "usr": "s:5NEKit12IPRangeErrorO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.IPRangeError.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "IPRangeError",
                        "printedName": "NEKit.IPRangeError",
                        "usr": "s:5NEKit12IPRangeErrorO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit12IPRangeErrorO15intervalInvalidyA2CmF",
            "mangledName": "$s5NEKit12IPRangeErrorO15intervalInvalidyA2CmF",
            "moduleName": "NEKit"
          },
          {
            "kind": "Var",
            "name": "invalidMask",
            "printedName": "invalidMask",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.IPRangeError.Type) -> NEKit.IPRangeError",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "IPRangeError",
                    "printedName": "NEKit.IPRangeError",
                    "usr": "s:5NEKit12IPRangeErrorO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.IPRangeError.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "IPRangeError",
                        "printedName": "NEKit.IPRangeError",
                        "usr": "s:5NEKit12IPRangeErrorO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit12IPRangeErrorO11invalidMaskyA2CmF",
            "mangledName": "$s5NEKit12IPRangeErrorO11invalidMaskyA2CmF",
            "moduleName": "NEKit"
          },
          {
            "kind": "Function",
            "name": "==",
            "printedName": "==(_:_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              },
              {
                "kind": "TypeNominal",
                "name": "IPRangeError",
                "printedName": "NEKit.IPRangeError",
                "usr": "s:5NEKit12IPRangeErrorO"
              },
              {
                "kind": "TypeNominal",
                "name": "IPRangeError",
                "printedName": "NEKit.IPRangeError",
                "usr": "s:5NEKit12IPRangeErrorO"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit12IPRangeErrorO2eeoiySbAC_ACtFZ",
            "mangledName": "$s5NEKit12IPRangeErrorO2eeoiySbAC_ACtFZ",
            "moduleName": "NEKit",
            "static": true,
            "implicit": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Var",
            "name": "hashValue",
            "printedName": "hashValue",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit12IPRangeErrorO9hashValueSivp",
            "mangledName": "$s5NEKit12IPRangeErrorO9hashValueSivp",
            "moduleName": "NEKit",
            "implicit": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit12IPRangeErrorO9hashValueSivg",
                "mangledName": "$s5NEKit12IPRangeErrorO9hashValueSivg",
                "moduleName": "NEKit",
                "implicit": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Function",
            "name": "hash",
            "printedName": "hash(into:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Hasher",
                "printedName": "Swift.Hasher",
                "paramValueOwnership": "InOut",
                "usr": "s:s6HasherV"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit12IPRangeErrorO4hash4intoys6HasherVz_tF",
            "mangledName": "$s5NEKit12IPRangeErrorO4hash4intoys6HasherVz_tF",
            "moduleName": "NEKit",
            "implicit": true,
            "funcSelfKind": "NonMutating"
          }
        ],
        "declKind": "Enum",
        "usr": "s:5NEKit12IPRangeErrorO",
        "mangledName": "$s5NEKit12IPRangeErrorO",
        "moduleName": "NEKit",
        "declAttributes": [
          "AccessControl"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "Error",
            "printedName": "Error",
            "usr": "s:s5ErrorP",
            "mangledName": "$ss5ErrorP"
          },
          {
            "kind": "Conformance",
            "name": "Sendable",
            "printedName": "Sendable",
            "usr": "s:s8SendableP",
            "mangledName": "$ss8SendableP"
          }
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "IPRange",
        "printedName": "IPRange",
        "children": [
          {
            "kind": "Var",
            "name": "startIP",
            "printedName": "startIP",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "IPAddress",
                "printedName": "NEKit.IPAddress",
                "usr": "s:5NEKit9IPAddressC"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit7IPRangeC7startIPAA9IPAddressCvp",
            "mangledName": "$s5NEKit7IPRangeC7startIPAA9IPAddressCvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "Final",
              "HasStorage",
              "AccessControl"
            ],
            "isLet": true,
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "IPAddress",
                    "printedName": "NEKit.IPAddress",
                    "usr": "s:5NEKit9IPAddressC"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit7IPRangeC7startIPAA9IPAddressCvg",
                "mangledName": "$s5NEKit7IPRangeC7startIPAA9IPAddressCvg",
                "moduleName": "NEKit",
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "endIP",
            "printedName": "endIP",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "IPAddress",
                "printedName": "NEKit.IPAddress",
                "usr": "s:5NEKit9IPAddressC"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit7IPRangeC5endIPAA9IPAddressCvp",
            "mangledName": "$s5NEKit7IPRangeC5endIPAA9IPAddressCvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "Final",
              "HasStorage",
              "AccessControl",
              "RawDocComment"
            ],
            "isLet": true,
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "IPAddress",
                    "printedName": "NEKit.IPAddress",
                    "usr": "s:5NEKit9IPAddressC"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit7IPRangeC5endIPAA9IPAddressCvg",
                "mangledName": "$s5NEKit7IPRangeC5endIPAA9IPAddressCvg",
                "moduleName": "NEKit",
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "family",
            "printedName": "family",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Family",
                "printedName": "NEKit.IPAddress.Family",
                "usr": "s:5NEKit9IPAddressC6FamilyO"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit7IPRangeC6familyAA9IPAddressC6FamilyOvp",
            "mangledName": "$s5NEKit7IPRangeC6familyAA9IPAddressC6FamilyOvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "Final",
              "HasStorage",
              "AccessControl"
            ],
            "isLet": true,
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Family",
                    "printedName": "NEKit.IPAddress.Family",
                    "usr": "s:5NEKit9IPAddressC6FamilyO"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit7IPRangeC6familyAA9IPAddressC6FamilyOvg",
                "mangledName": "$s5NEKit7IPRangeC6familyAA9IPAddressC6FamilyOvg",
                "moduleName": "NEKit",
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(startIP:endIP:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "IPRange",
                "printedName": "NEKit.IPRange",
                "usr": "s:5NEKit7IPRangeC"
              },
              {
                "kind": "TypeNominal",
                "name": "IPAddress",
                "printedName": "NEKit.IPAddress",
                "usr": "s:5NEKit9IPAddressC"
              },
              {
                "kind": "TypeNominal",
                "name": "IPAddress",
                "printedName": "NEKit.IPAddress",
                "usr": "s:5NEKit9IPAddressC"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit7IPRangeC7startIP03endD0AcA9IPAddressC_AGtKcfc",
            "mangledName": "$s5NEKit7IPRangeC7startIP03endD0AcA9IPAddressC_AGtKcfc",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "throwing": true,
            "init_kind": "Designated"
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(startIP:interval:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "IPRange",
                "printedName": "NEKit.IPRange",
                "usr": "s:5NEKit7IPRangeC"
              },
              {
                "kind": "TypeNominal",
                "name": "IPAddress",
                "printedName": "NEKit.IPAddress",
                "usr": "s:5NEKit9IPAddressC"
              },
              {
                "kind": "TypeNominal",
                "name": "IPInterval",
                "printedName": "NEKit.IPInterval",
                "usr": "s:5NEKit10IPIntervalO"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit7IPRangeC7startIP8intervalAcA9IPAddressC_AA10IPIntervalOtKcfc",
            "mangledName": "$s5NEKit7IPRangeC7startIP8intervalAcA9IPAddressC_AA10IPIntervalOtKcfc",
            "moduleName": "NEKit",
            "declAttributes": [
              "Convenience",
              "AccessControl"
            ],
            "throwing": true,
            "init_kind": "Convenience"
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(startIP:mask:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "IPRange",
                "printedName": "NEKit.IPRange",
                "usr": "s:5NEKit7IPRangeC"
              },
              {
                "kind": "TypeNominal",
                "name": "IPAddress",
                "printedName": "NEKit.IPAddress",
                "usr": "s:5NEKit9IPAddressC"
              },
              {
                "kind": "TypeNominal",
                "name": "IPMask",
                "printedName": "NEKit.IPMask",
                "usr": "s:5NEKit6IPMaskO"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit7IPRangeC7startIP4maskAcA9IPAddressC_AA6IPMaskOtKcfc",
            "mangledName": "$s5NEKit7IPRangeC7startIP4maskAcA9IPAddressC_AA6IPMaskOtKcfc",
            "moduleName": "NEKit",
            "declAttributes": [
              "Convenience",
              "AccessControl"
            ],
            "throwing": true,
            "init_kind": "Convenience"
          },
          {
            "kind": "Function",
            "name": "contains",
            "printedName": "contains(ip:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              },
              {
                "kind": "TypeNominal",
                "name": "IPAddress",
                "printedName": "NEKit.IPAddress",
                "usr": "s:5NEKit9IPAddressC"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit7IPRangeC8contains2ipSbAA9IPAddressC_tF",
            "mangledName": "$s5NEKit7IPRangeC8contains2ipSbAA9IPAddressC_tF",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(withCIDRString:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "IPRange",
                "printedName": "NEKit.IPRange",
                "usr": "s:5NEKit7IPRangeC"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit7IPRangeC14withCIDRStringACSS_tKcfc",
            "mangledName": "$s5NEKit7IPRangeC14withCIDRStringACSS_tKcfc",
            "moduleName": "NEKit",
            "declAttributes": [
              "Convenience",
              "AccessControl"
            ],
            "isFromExtension": true,
            "throwing": true,
            "init_kind": "Convenience"
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(withRangeString:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "IPRange",
                "printedName": "NEKit.IPRange",
                "usr": "s:5NEKit7IPRangeC"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit7IPRangeC15withRangeStringACSS_tKcfc",
            "mangledName": "$s5NEKit7IPRangeC15withRangeStringACSS_tKcfc",
            "moduleName": "NEKit",
            "declAttributes": [
              "Convenience",
              "AccessControl"
            ],
            "isFromExtension": true,
            "throwing": true,
            "init_kind": "Convenience"
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(withString:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "IPRange",
                "printedName": "NEKit.IPRange",
                "usr": "s:5NEKit7IPRangeC"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit7IPRangeC10withStringACSS_tKcfc",
            "mangledName": "$s5NEKit7IPRangeC10withStringACSS_tKcfc",
            "moduleName": "NEKit",
            "declAttributes": [
              "Convenience",
              "AccessControl"
            ],
            "isFromExtension": true,
            "throwing": true,
            "init_kind": "Convenience"
          }
        ],
        "declKind": "Class",
        "usr": "s:5NEKit7IPRangeC",
        "mangledName": "$s5NEKit7IPRangeC",
        "moduleName": "NEKit",
        "declAttributes": [
          "AccessControl"
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "TypeDecl",
        "name": "IPRangeListRule",
        "printedName": "IPRangeListRule",
        "children": [
          {
            "kind": "Var",
            "name": "description",
            "printedName": "description",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit15IPRangeListRuleC11descriptionSSvp",
            "mangledName": "$s5NEKit15IPRangeListRuleC11descriptionSSvp",
            "moduleName": "NEKit",
            "overriding": true,
            "isOpen": true,
            "declAttributes": [
              "Override",
              "AccessControl"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit15IPRangeListRuleC11descriptionSSvg",
                "mangledName": "$s5NEKit15IPRangeListRuleC11descriptionSSvg",
                "moduleName": "NEKit",
                "overriding": true,
                "isOpen": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "ranges",
            "printedName": "ranges",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Array",
                "printedName": "[NEKit.IPRange]",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "IPRange",
                    "printedName": "NEKit.IPRange",
                    "usr": "s:5NEKit7IPRangeC"
                  }
                ],
                "usr": "s:Sa"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit15IPRangeListRuleC6rangesSayAA0B0CGvp",
            "mangledName": "$s5NEKit15IPRangeListRuleC6rangesSayAA0B0CGvp",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "HasInitialValue",
              "HasStorage",
              "AccessControl",
              "RawDocComment"
            ],
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Array",
                    "printedName": "[NEKit.IPRange]",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "IPRange",
                        "printedName": "NEKit.IPRange",
                        "usr": "s:5NEKit7IPRangeC"
                      }
                    ],
                    "usr": "s:Sa"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit15IPRangeListRuleC6rangesSayAA0B0CGvg",
                "mangledName": "$s5NEKit15IPRangeListRuleC6rangesSayAA0B0CGvg",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Array",
                    "printedName": "[NEKit.IPRange]",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "IPRange",
                        "printedName": "NEKit.IPRange",
                        "usr": "s:5NEKit7IPRangeC"
                      }
                    ],
                    "usr": "s:Sa"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit15IPRangeListRuleC6rangesSayAA0B0CGvs",
                "mangledName": "$s5NEKit15IPRangeListRuleC6rangesSayAA0B0CGvs",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit15IPRangeListRuleC6rangesSayAA0B0CGvM",
                "mangledName": "$s5NEKit15IPRangeListRuleC6rangesSayAA0B0CGvM",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(adapterFactory:ranges:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "IPRangeListRule",
                "printedName": "NEKit.IPRangeListRule",
                "usr": "s:5NEKit15IPRangeListRuleC"
              },
              {
                "kind": "TypeNominal",
                "name": "AdapterFactory",
                "printedName": "NEKit.AdapterFactory",
                "usr": "s:5NEKit14AdapterFactoryC"
              },
              {
                "kind": "TypeNominal",
                "name": "Array",
                "printedName": "[Swift.String]",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "usr": "s:Sa"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit15IPRangeListRuleC14adapterFactory6rangesAcA07AdapterF0C_SaySSGtKcfc",
            "mangledName": "$s5NEKit15IPRangeListRuleC14adapterFactory6rangesAcA07AdapterF0C_SaySSGtKcfc",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "throwing": true,
            "init_kind": "Designated"
          },
          {
            "kind": "Function",
            "name": "matchDNS",
            "printedName": "matchDNS(_:type:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "DNSSessionMatchResult",
                "printedName": "NEKit.DNSSessionMatchResult",
                "usr": "s:5NEKit21DNSSessionMatchResultO"
              },
              {
                "kind": "TypeNominal",
                "name": "DNSSession",
                "printedName": "NEKit.DNSSession",
                "usr": "s:5NEKit10DNSSessionC"
              },
              {
                "kind": "TypeNominal",
                "name": "DNSSessionMatchType",
                "printedName": "NEKit.DNSSessionMatchType",
                "usr": "s:5NEKit19DNSSessionMatchTypeO"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit15IPRangeListRuleC8matchDNS_4typeAA21DNSSessionMatchResultOAA0H0C_AA0hI4TypeOtF",
            "mangledName": "$s5NEKit15IPRangeListRuleC8matchDNS_4typeAA21DNSSessionMatchResultOAA0H0C_AA0hI4TypeOtF",
            "moduleName": "NEKit",
            "overriding": true,
            "isOpen": true,
            "declAttributes": [
              "AccessControl",
              "Override",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "match",
            "printedName": "match(_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "NEKit.AdapterFactory?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "AdapterFactory",
                    "printedName": "NEKit.AdapterFactory",
                    "usr": "s:5NEKit14AdapterFactoryC"
                  }
                ],
                "usr": "s:Sq"
              },
              {
                "kind": "TypeNominal",
                "name": "ConnectSession",
                "printedName": "NEKit.ConnectSession",
                "usr": "s:5NEKit14ConnectSessionC"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit15IPRangeListRuleC5matchyAA14AdapterFactoryCSgAA14ConnectSessionCF",
            "mangledName": "$s5NEKit15IPRangeListRuleC5matchyAA14AdapterFactoryCSgAA14ConnectSessionCF",
            "moduleName": "NEKit",
            "overriding": true,
            "isOpen": true,
            "declAttributes": [
              "AccessControl",
              "Override",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "IPRangeListRule",
                "printedName": "NEKit.IPRangeListRule",
                "usr": "s:5NEKit15IPRangeListRuleC"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit15IPRangeListRuleCACycfc",
            "mangledName": "$s5NEKit15IPRangeListRuleCACycfc",
            "moduleName": "NEKit",
            "overriding": true,
            "implicit": true,
            "declAttributes": [
              "Override"
            ],
            "init_kind": "Designated"
          }
        ],
        "declKind": "Class",
        "usr": "s:5NEKit15IPRangeListRuleC",
        "mangledName": "$s5NEKit15IPRangeListRuleC",
        "moduleName": "NEKit",
        "isOpen": true,
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "superclassUsr": "s:5NEKit4RuleC",
        "superclassNames": [
          "NEKit.Rule"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          }
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "TypeDecl",
        "name": "SocketStatus",
        "printedName": "SocketStatus",
        "children": [
          {
            "kind": "Var",
            "name": "invalid",
            "printedName": "invalid",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.SocketStatus.Type) -> NEKit.SocketStatus",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SocketStatus",
                    "printedName": "NEKit.SocketStatus",
                    "usr": "s:5NEKit12SocketStatusO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.SocketStatus.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "SocketStatus",
                        "printedName": "NEKit.SocketStatus",
                        "usr": "s:5NEKit12SocketStatusO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit12SocketStatusO7invalidyA2CmF",
            "mangledName": "$s5NEKit12SocketStatusO7invalidyA2CmF",
            "moduleName": "NEKit",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "connecting",
            "printedName": "connecting",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.SocketStatus.Type) -> NEKit.SocketStatus",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SocketStatus",
                    "printedName": "NEKit.SocketStatus",
                    "usr": "s:5NEKit12SocketStatusO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.SocketStatus.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "SocketStatus",
                        "printedName": "NEKit.SocketStatus",
                        "usr": "s:5NEKit12SocketStatusO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit12SocketStatusO10connectingyA2CmF",
            "mangledName": "$s5NEKit12SocketStatusO10connectingyA2CmF",
            "moduleName": "NEKit",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "established",
            "printedName": "established",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.SocketStatus.Type) -> NEKit.SocketStatus",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SocketStatus",
                    "printedName": "NEKit.SocketStatus",
                    "usr": "s:5NEKit12SocketStatusO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.SocketStatus.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "SocketStatus",
                        "printedName": "NEKit.SocketStatus",
                        "usr": "s:5NEKit12SocketStatusO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit12SocketStatusO11establishedyA2CmF",
            "mangledName": "$s5NEKit12SocketStatusO11establishedyA2CmF",
            "moduleName": "NEKit",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "disconnecting",
            "printedName": "disconnecting",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.SocketStatus.Type) -> NEKit.SocketStatus",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SocketStatus",
                    "printedName": "NEKit.SocketStatus",
                    "usr": "s:5NEKit12SocketStatusO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.SocketStatus.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "SocketStatus",
                        "printedName": "NEKit.SocketStatus",
                        "usr": "s:5NEKit12SocketStatusO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit12SocketStatusO13disconnectingyA2CmF",
            "mangledName": "$s5NEKit12SocketStatusO13disconnectingyA2CmF",
            "moduleName": "NEKit",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "closed",
            "printedName": "closed",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.SocketStatus.Type) -> NEKit.SocketStatus",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SocketStatus",
                    "printedName": "NEKit.SocketStatus",
                    "usr": "s:5NEKit12SocketStatusO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.SocketStatus.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "SocketStatus",
                        "printedName": "NEKit.SocketStatus",
                        "usr": "s:5NEKit12SocketStatusO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit12SocketStatusO6closedyA2CmF",
            "mangledName": "$s5NEKit12SocketStatusO6closedyA2CmF",
            "moduleName": "NEKit",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Function",
            "name": "==",
            "printedName": "==(_:_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              },
              {
                "kind": "TypeNominal",
                "name": "SocketStatus",
                "printedName": "NEKit.SocketStatus",
                "usr": "s:5NEKit12SocketStatusO"
              },
              {
                "kind": "TypeNominal",
                "name": "SocketStatus",
                "printedName": "NEKit.SocketStatus",
                "usr": "s:5NEKit12SocketStatusO"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit12SocketStatusO2eeoiySbAC_ACtFZ",
            "mangledName": "$s5NEKit12SocketStatusO2eeoiySbAC_ACtFZ",
            "moduleName": "NEKit",
            "static": true,
            "implicit": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Var",
            "name": "hashValue",
            "printedName": "hashValue",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit12SocketStatusO9hashValueSivp",
            "mangledName": "$s5NEKit12SocketStatusO9hashValueSivp",
            "moduleName": "NEKit",
            "implicit": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit12SocketStatusO9hashValueSivg",
                "mangledName": "$s5NEKit12SocketStatusO9hashValueSivg",
                "moduleName": "NEKit",
                "implicit": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Function",
            "name": "hash",
            "printedName": "hash(into:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Hasher",
                "printedName": "Swift.Hasher",
                "paramValueOwnership": "InOut",
                "usr": "s:s6HasherV"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit12SocketStatusO4hash4intoys6HasherVz_tF",
            "mangledName": "$s5NEKit12SocketStatusO4hash4intoys6HasherVz_tF",
            "moduleName": "NEKit",
            "implicit": true,
            "funcSelfKind": "NonMutating"
          }
        ],
        "declKind": "Enum",
        "usr": "s:5NEKit12SocketStatusO",
        "mangledName": "$s5NEKit12SocketStatusO",
        "moduleName": "NEKit",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          }
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "SocketProtocol",
        "printedName": "SocketProtocol",
        "children": [
          {
            "kind": "Var",
            "name": "socket",
            "printedName": "socket",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "ImplicitlyUnwrappedOptional",
                "printedName": "NEKit.RawTCPSocketProtocol?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "RawTCPSocketProtocol",
                    "printedName": "NEKit.RawTCPSocketProtocol",
                    "usr": "s:5NEKit20RawTCPSocketProtocolP"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit14SocketProtocolP6socketAA012RawTCPSocketC0_pSgvp",
            "mangledName": "$s5NEKit14SocketProtocolP6socketAA012RawTCPSocketC0_pSgvp",
            "moduleName": "NEKit",
            "protocolReq": true,
            "declAttributes": [
              "RawDocComment"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "ImplicitlyUnwrappedOptional",
                    "printedName": "NEKit.RawTCPSocketProtocol?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "RawTCPSocketProtocol",
                        "printedName": "NEKit.RawTCPSocketProtocol",
                        "usr": "s:5NEKit20RawTCPSocketProtocolP"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit14SocketProtocolP6socketAA012RawTCPSocketC0_pSgvg",
                "mangledName": "$s5NEKit14SocketProtocolP6socketAA012RawTCPSocketC0_pSgvg",
                "moduleName": "NEKit",
                "genericSig": "<τ_0_0 where τ_0_0 : NEKit.SocketProtocol>",
                "sugared_genericSig": "<Self where Self : NEKit.SocketProtocol>",
                "protocolReq": true,
                "reqNewWitnessTableEntry": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "delegate",
            "printedName": "delegate",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "NEKit.SocketDelegate?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SocketDelegate",
                    "printedName": "NEKit.SocketDelegate",
                    "usr": "s:5NEKit14SocketDelegateP"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit14SocketProtocolP8delegateAA0B8Delegate_pSgvp",
            "mangledName": "$s5NEKit14SocketProtocolP8delegateAA0B8Delegate_pSgvp",
            "moduleName": "NEKit",
            "protocolReq": true,
            "declAttributes": [
              "RawDocComment"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "NEKit.SocketDelegate?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "SocketDelegate",
                        "printedName": "NEKit.SocketDelegate",
                        "usr": "s:5NEKit14SocketDelegateP"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit14SocketProtocolP8delegateAA0B8Delegate_pSgvg",
                "mangledName": "$s5NEKit14SocketProtocolP8delegateAA0B8Delegate_pSgvg",
                "moduleName": "NEKit",
                "genericSig": "<τ_0_0 where τ_0_0 : NEKit.SocketProtocol>",
                "sugared_genericSig": "<Self where Self : NEKit.SocketProtocol>",
                "protocolReq": true,
                "reqNewWitnessTableEntry": true,
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "NEKit.SocketDelegate?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "SocketDelegate",
                        "printedName": "NEKit.SocketDelegate",
                        "usr": "s:5NEKit14SocketDelegateP"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit14SocketProtocolP8delegateAA0B8Delegate_pSgvs",
                "mangledName": "$s5NEKit14SocketProtocolP8delegateAA0B8Delegate_pSgvs",
                "moduleName": "NEKit",
                "genericSig": "<τ_0_0 where τ_0_0 : NEKit.SocketProtocol>",
                "sugared_genericSig": "<Self where Self : NEKit.SocketProtocol>",
                "protocolReq": true,
                "reqNewWitnessTableEntry": true,
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit14SocketProtocolP8delegateAA0B8Delegate_pSgvM",
                "mangledName": "$s5NEKit14SocketProtocolP8delegateAA0B8Delegate_pSgvM",
                "moduleName": "NEKit",
                "genericSig": "<τ_0_0 where τ_0_0 : NEKit.SocketProtocol>",
                "sugared_genericSig": "<Self where Self : NEKit.SocketProtocol>",
                "protocolReq": true,
                "implicit": true,
                "reqNewWitnessTableEntry": true,
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "status",
            "printedName": "status",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "SocketStatus",
                "printedName": "NEKit.SocketStatus",
                "usr": "s:5NEKit12SocketStatusO"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit14SocketProtocolP6statusAA0B6StatusOvp",
            "mangledName": "$s5NEKit14SocketProtocolP6statusAA0B6StatusOvp",
            "moduleName": "NEKit",
            "protocolReq": true,
            "declAttributes": [
              "RawDocComment"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SocketStatus",
                    "printedName": "NEKit.SocketStatus",
                    "usr": "s:5NEKit12SocketStatusO"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit14SocketProtocolP6statusAA0B6StatusOvg",
                "mangledName": "$s5NEKit14SocketProtocolP6statusAA0B6StatusOvg",
                "moduleName": "NEKit",
                "genericSig": "<τ_0_0 where τ_0_0 : NEKit.SocketProtocol>",
                "sugared_genericSig": "<Self where Self : NEKit.SocketProtocol>",
                "protocolReq": true,
                "reqNewWitnessTableEntry": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "isDisconnected",
            "printedName": "isDisconnected",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit14SocketProtocolP14isDisconnectedSbvp",
            "mangledName": "$s5NEKit14SocketProtocolP14isDisconnectedSbvp",
            "moduleName": "NEKit",
            "protocolReq": true,
            "declAttributes": [
              "RawDocComment"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Bool",
                    "printedName": "Swift.Bool",
                    "usr": "s:Sb"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit14SocketProtocolP14isDisconnectedSbvg",
                "mangledName": "$s5NEKit14SocketProtocolP14isDisconnectedSbvg",
                "moduleName": "NEKit",
                "genericSig": "<τ_0_0 where τ_0_0 : NEKit.SocketProtocol>",
                "sugared_genericSig": "<Self where Self : NEKit.SocketProtocol>",
                "protocolReq": true,
                "reqNewWitnessTableEntry": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "typeName",
            "printedName": "typeName",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit14SocketProtocolP8typeNameSSvp",
            "mangledName": "$s5NEKit14SocketProtocolP8typeNameSSvp",
            "moduleName": "NEKit",
            "protocolReq": true,
            "declAttributes": [
              "RawDocComment"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit14SocketProtocolP8typeNameSSvg",
                "mangledName": "$s5NEKit14SocketProtocolP8typeNameSSvg",
                "moduleName": "NEKit",
                "genericSig": "<τ_0_0 where τ_0_0 : NEKit.SocketProtocol>",
                "sugared_genericSig": "<Self where Self : NEKit.SocketProtocol>",
                "protocolReq": true,
                "reqNewWitnessTableEntry": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "readStatusDescription",
            "printedName": "readStatusDescription",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit14SocketProtocolP21readStatusDescriptionSSvp",
            "mangledName": "$s5NEKit14SocketProtocolP21readStatusDescriptionSSvp",
            "moduleName": "NEKit",
            "protocolReq": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit14SocketProtocolP21readStatusDescriptionSSvg",
                "mangledName": "$s5NEKit14SocketProtocolP21readStatusDescriptionSSvg",
                "moduleName": "NEKit",
                "genericSig": "<τ_0_0 where τ_0_0 : NEKit.SocketProtocol>",
                "sugared_genericSig": "<Self where Self : NEKit.SocketProtocol>",
                "protocolReq": true,
                "reqNewWitnessTableEntry": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "writeStatusDescription",
            "printedName": "writeStatusDescription",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit14SocketProtocolP22writeStatusDescriptionSSvp",
            "mangledName": "$s5NEKit14SocketProtocolP22writeStatusDescriptionSSvp",
            "moduleName": "NEKit",
            "protocolReq": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit14SocketProtocolP22writeStatusDescriptionSSvg",
                "mangledName": "$s5NEKit14SocketProtocolP22writeStatusDescriptionSSvg",
                "moduleName": "NEKit",
                "genericSig": "<τ_0_0 where τ_0_0 : NEKit.SocketProtocol>",
                "sugared_genericSig": "<Self where Self : NEKit.SocketProtocol>",
                "protocolReq": true,
                "reqNewWitnessTableEntry": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Function",
            "name": "readData",
            "printedName": "readData()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit14SocketProtocolP8readDatayyF",
            "mangledName": "$s5NEKit14SocketProtocolP8readDatayyF",
            "moduleName": "NEKit",
            "genericSig": "<τ_0_0 where τ_0_0 : NEKit.SocketProtocol>",
            "sugared_genericSig": "<Self where Self : NEKit.SocketProtocol>",
            "protocolReq": true,
            "declAttributes": [
              "RawDocComment"
            ],
            "reqNewWitnessTableEntry": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "write",
            "printedName": "write(data:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit14SocketProtocolP5write4datay10Foundation4DataV_tF",
            "mangledName": "$s5NEKit14SocketProtocolP5write4datay10Foundation4DataV_tF",
            "moduleName": "NEKit",
            "genericSig": "<τ_0_0 where τ_0_0 : NEKit.SocketProtocol>",
            "sugared_genericSig": "<Self where Self : NEKit.SocketProtocol>",
            "protocolReq": true,
            "declAttributes": [
              "RawDocComment"
            ],
            "reqNewWitnessTableEntry": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "disconnect",
            "printedName": "disconnect(becauseOf:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Swift.Error?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Error",
                    "printedName": "Swift.Error",
                    "usr": "s:s5ErrorP"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit14SocketProtocolP10disconnect9becauseOfys5Error_pSg_tF",
            "mangledName": "$s5NEKit14SocketProtocolP10disconnect9becauseOfys5Error_pSg_tF",
            "moduleName": "NEKit",
            "genericSig": "<τ_0_0 where τ_0_0 : NEKit.SocketProtocol>",
            "sugared_genericSig": "<Self where Self : NEKit.SocketProtocol>",
            "protocolReq": true,
            "declAttributes": [
              "RawDocComment"
            ],
            "reqNewWitnessTableEntry": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "forceDisconnect",
            "printedName": "forceDisconnect(becauseOf:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Swift.Error?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Error",
                    "printedName": "Swift.Error",
                    "usr": "s:s5ErrorP"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit14SocketProtocolP15forceDisconnect9becauseOfys5Error_pSg_tF",
            "mangledName": "$s5NEKit14SocketProtocolP15forceDisconnect9becauseOfys5Error_pSg_tF",
            "moduleName": "NEKit",
            "genericSig": "<τ_0_0 where τ_0_0 : NEKit.SocketProtocol>",
            "sugared_genericSig": "<Self where Self : NEKit.SocketProtocol>",
            "protocolReq": true,
            "declAttributes": [
              "RawDocComment"
            ],
            "reqNewWitnessTableEntry": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Var",
            "name": "isDisconnected",
            "printedName": "isDisconnected",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit14SocketProtocolPAAE14isDisconnectedSbvp",
            "mangledName": "$s5NEKit14SocketProtocolPAAE14isDisconnectedSbvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "isFromExtension": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Bool",
                    "printedName": "Swift.Bool",
                    "usr": "s:Sb"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit14SocketProtocolPAAE14isDisconnectedSbvg",
                "mangledName": "$s5NEKit14SocketProtocolPAAE14isDisconnectedSbvg",
                "moduleName": "NEKit",
                "genericSig": "<τ_0_0 where τ_0_0 : NEKit.SocketProtocol>",
                "sugared_genericSig": "<Self where Self : NEKit.SocketProtocol>",
                "isFromExtension": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "typeName",
            "printedName": "typeName",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit14SocketProtocolPAAE8typeNameSSvp",
            "mangledName": "$s5NEKit14SocketProtocolPAAE8typeNameSSvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "isFromExtension": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit14SocketProtocolPAAE8typeNameSSvg",
                "mangledName": "$s5NEKit14SocketProtocolPAAE8typeNameSSvg",
                "moduleName": "NEKit",
                "genericSig": "<τ_0_0 where τ_0_0 : NEKit.SocketProtocol>",
                "sugared_genericSig": "<Self where Self : NEKit.SocketProtocol>",
                "isFromExtension": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "readStatusDescription",
            "printedName": "readStatusDescription",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit14SocketProtocolPAAE21readStatusDescriptionSSvp",
            "mangledName": "$s5NEKit14SocketProtocolPAAE21readStatusDescriptionSSvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "isFromExtension": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit14SocketProtocolPAAE21readStatusDescriptionSSvg",
                "mangledName": "$s5NEKit14SocketProtocolPAAE21readStatusDescriptionSSvg",
                "moduleName": "NEKit",
                "genericSig": "<τ_0_0 where τ_0_0 : NEKit.SocketProtocol>",
                "sugared_genericSig": "<Self where Self : NEKit.SocketProtocol>",
                "isFromExtension": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "writeStatusDescription",
            "printedName": "writeStatusDescription",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit14SocketProtocolPAAE22writeStatusDescriptionSSvp",
            "mangledName": "$s5NEKit14SocketProtocolPAAE22writeStatusDescriptionSSvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "isFromExtension": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit14SocketProtocolPAAE22writeStatusDescriptionSSvg",
                "mangledName": "$s5NEKit14SocketProtocolPAAE22writeStatusDescriptionSSvg",
                "moduleName": "NEKit",
                "genericSig": "<τ_0_0 where τ_0_0 : NEKit.SocketProtocol>",
                "sugared_genericSig": "<Self where Self : NEKit.SocketProtocol>",
                "isFromExtension": true,
                "accessorKind": "get"
              }
            ]
          }
        ],
        "declKind": "Protocol",
        "usr": "s:5NEKit14SocketProtocolP",
        "mangledName": "$s5NEKit14SocketProtocolP",
        "moduleName": "NEKit",
        "genericSig": "<τ_0_0 : AnyObject>",
        "sugared_genericSig": "<Self : AnyObject>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "SocketDelegate",
        "printedName": "SocketDelegate",
        "children": [
          {
            "kind": "Function",
            "name": "didConnectWith",
            "printedName": "didConnectWith(adapterSocket:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "AdapterSocket",
                "printedName": "NEKit.AdapterSocket",
                "usr": "c:@M@NEKit@objc(cs)AdapterSocket"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit14SocketDelegateP14didConnectWith07adapterB0yAA07AdapterB0C_tF",
            "mangledName": "$s5NEKit14SocketDelegateP14didConnectWith07adapterB0yAA07AdapterB0C_tF",
            "moduleName": "NEKit",
            "genericSig": "<τ_0_0 where τ_0_0 : NEKit.SocketDelegate>",
            "sugared_genericSig": "<Self where Self : NEKit.SocketDelegate>",
            "protocolReq": true,
            "declAttributes": [
              "RawDocComment"
            ],
            "reqNewWitnessTableEntry": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "didDisconnectWith",
            "printedName": "didDisconnectWith(socket:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "SocketProtocol",
                "printedName": "NEKit.SocketProtocol",
                "usr": "s:5NEKit14SocketProtocolP"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit14SocketDelegateP17didDisconnectWith6socketyAA0B8Protocol_p_tF",
            "mangledName": "$s5NEKit14SocketDelegateP17didDisconnectWith6socketyAA0B8Protocol_p_tF",
            "moduleName": "NEKit",
            "genericSig": "<τ_0_0 where τ_0_0 : NEKit.SocketDelegate>",
            "sugared_genericSig": "<Self where Self : NEKit.SocketDelegate>",
            "protocolReq": true,
            "declAttributes": [
              "RawDocComment"
            ],
            "reqNewWitnessTableEntry": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "didRead",
            "printedName": "didRead(data:from:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              },
              {
                "kind": "TypeNominal",
                "name": "SocketProtocol",
                "printedName": "NEKit.SocketProtocol",
                "usr": "s:5NEKit14SocketProtocolP"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit14SocketDelegateP7didRead4data4fromy10Foundation4DataV_AA0B8Protocol_ptF",
            "mangledName": "$s5NEKit14SocketDelegateP7didRead4data4fromy10Foundation4DataV_AA0B8Protocol_ptF",
            "moduleName": "NEKit",
            "genericSig": "<τ_0_0 where τ_0_0 : NEKit.SocketDelegate>",
            "sugared_genericSig": "<Self where Self : NEKit.SocketDelegate>",
            "protocolReq": true,
            "declAttributes": [
              "RawDocComment"
            ],
            "reqNewWitnessTableEntry": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "didWrite",
            "printedName": "didWrite(data:by:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Foundation.Data?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Data",
                    "printedName": "Foundation.Data",
                    "usr": "s:10Foundation4DataV"
                  }
                ],
                "usr": "s:Sq"
              },
              {
                "kind": "TypeNominal",
                "name": "SocketProtocol",
                "printedName": "NEKit.SocketProtocol",
                "usr": "s:5NEKit14SocketProtocolP"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit14SocketDelegateP8didWrite4data2byy10Foundation4DataVSg_AA0B8Protocol_ptF",
            "mangledName": "$s5NEKit14SocketDelegateP8didWrite4data2byy10Foundation4DataVSg_AA0B8Protocol_ptF",
            "moduleName": "NEKit",
            "genericSig": "<τ_0_0 where τ_0_0 : NEKit.SocketDelegate>",
            "sugared_genericSig": "<Self where Self : NEKit.SocketDelegate>",
            "protocolReq": true,
            "declAttributes": [
              "RawDocComment"
            ],
            "reqNewWitnessTableEntry": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "didBecomeReadyToForwardWith",
            "printedName": "didBecomeReadyToForwardWith(socket:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "SocketProtocol",
                "printedName": "NEKit.SocketProtocol",
                "usr": "s:5NEKit14SocketProtocolP"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit14SocketDelegateP27didBecomeReadyToForwardWith6socketyAA0B8Protocol_p_tF",
            "mangledName": "$s5NEKit14SocketDelegateP27didBecomeReadyToForwardWith6socketyAA0B8Protocol_p_tF",
            "moduleName": "NEKit",
            "genericSig": "<τ_0_0 where τ_0_0 : NEKit.SocketDelegate>",
            "sugared_genericSig": "<Self where Self : NEKit.SocketDelegate>",
            "protocolReq": true,
            "declAttributes": [
              "RawDocComment"
            ],
            "reqNewWitnessTableEntry": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "didReceive",
            "printedName": "didReceive(session:from:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "ConnectSession",
                "printedName": "NEKit.ConnectSession",
                "usr": "s:5NEKit14ConnectSessionC"
              },
              {
                "kind": "TypeNominal",
                "name": "ProxySocket",
                "printedName": "NEKit.ProxySocket",
                "usr": "c:@M@NEKit@objc(cs)ProxySocket"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit14SocketDelegateP10didReceive7session4fromyAA14ConnectSessionC_AA05ProxyB0CtF",
            "mangledName": "$s5NEKit14SocketDelegateP10didReceive7session4fromyAA14ConnectSessionC_AA05ProxyB0CtF",
            "moduleName": "NEKit",
            "genericSig": "<τ_0_0 where τ_0_0 : NEKit.SocketDelegate>",
            "sugared_genericSig": "<Self where Self : NEKit.SocketDelegate>",
            "protocolReq": true,
            "declAttributes": [
              "RawDocComment"
            ],
            "reqNewWitnessTableEntry": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "updateAdapterWith",
            "printedName": "updateAdapterWith(newAdapter:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "AdapterSocket",
                "printedName": "NEKit.AdapterSocket",
                "usr": "c:@M@NEKit@objc(cs)AdapterSocket"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit14SocketDelegateP17updateAdapterWith03newE0yAA0eB0C_tF",
            "mangledName": "$s5NEKit14SocketDelegateP17updateAdapterWith03newE0yAA0eB0C_tF",
            "moduleName": "NEKit",
            "genericSig": "<τ_0_0 where τ_0_0 : NEKit.SocketDelegate>",
            "sugared_genericSig": "<Self where Self : NEKit.SocketDelegate>",
            "protocolReq": true,
            "declAttributes": [
              "RawDocComment"
            ],
            "reqNewWitnessTableEntry": true,
            "funcSelfKind": "NonMutating"
          }
        ],
        "declKind": "Protocol",
        "usr": "s:5NEKit14SocketDelegateP",
        "mangledName": "$s5NEKit14SocketDelegateP",
        "moduleName": "NEKit",
        "genericSig": "<τ_0_0 : AnyObject>",
        "sugared_genericSig": "<Self : AnyObject>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "TypeDecl",
        "name": "IPAddress",
        "printedName": "IPAddress",
        "children": [
          {
            "kind": "TypeDecl",
            "name": "Family",
            "printedName": "Family",
            "children": [
              {
                "kind": "Var",
                "name": "IPv4",
                "printedName": "IPv4",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(NEKit.IPAddress.Family.Type) -> NEKit.IPAddress.Family",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Family",
                        "printedName": "NEKit.IPAddress.Family",
                        "usr": "s:5NEKit9IPAddressC6FamilyO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Metatype",
                        "printedName": "NEKit.IPAddress.Family.Type",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "Family",
                            "printedName": "NEKit.IPAddress.Family",
                            "usr": "s:5NEKit9IPAddressC6FamilyO"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "declKind": "EnumElement",
                "usr": "s:5NEKit9IPAddressC6FamilyO4IPv4yA2EmF",
                "mangledName": "$s5NEKit9IPAddressC6FamilyO4IPv4yA2EmF",
                "moduleName": "NEKit"
              },
              {
                "kind": "Var",
                "name": "IPv6",
                "printedName": "IPv6",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(NEKit.IPAddress.Family.Type) -> NEKit.IPAddress.Family",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Family",
                        "printedName": "NEKit.IPAddress.Family",
                        "usr": "s:5NEKit9IPAddressC6FamilyO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Metatype",
                        "printedName": "NEKit.IPAddress.Family.Type",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "Family",
                            "printedName": "NEKit.IPAddress.Family",
                            "usr": "s:5NEKit9IPAddressC6FamilyO"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "declKind": "EnumElement",
                "usr": "s:5NEKit9IPAddressC6FamilyO4IPv6yA2EmF",
                "mangledName": "$s5NEKit9IPAddressC6FamilyO4IPv6yA2EmF",
                "moduleName": "NEKit"
              },
              {
                "kind": "Function",
                "name": "==",
                "printedName": "==(_:_:)",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Bool",
                    "printedName": "Swift.Bool",
                    "usr": "s:Sb"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Family",
                    "printedName": "NEKit.IPAddress.Family",
                    "usr": "s:5NEKit9IPAddressC6FamilyO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Family",
                    "printedName": "NEKit.IPAddress.Family",
                    "usr": "s:5NEKit9IPAddressC6FamilyO"
                  }
                ],
                "declKind": "Func",
                "usr": "s:5NEKit9IPAddressC6FamilyO2eeoiySbAE_AEtFZ",
                "mangledName": "$s5NEKit9IPAddressC6FamilyO2eeoiySbAE_AEtFZ",
                "moduleName": "NEKit",
                "static": true,
                "implicit": true,
                "funcSelfKind": "NonMutating"
              },
              {
                "kind": "Var",
                "name": "hashValue",
                "printedName": "hashValue",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ],
                "declKind": "Var",
                "usr": "s:5NEKit9IPAddressC6FamilyO9hashValueSivp",
                "mangledName": "$s5NEKit9IPAddressC6FamilyO9hashValueSivp",
                "moduleName": "NEKit",
                "implicit": true,
                "accessors": [
                  {
                    "kind": "Accessor",
                    "name": "Get",
                    "printedName": "Get()",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Int",
                        "printedName": "Swift.Int",
                        "usr": "s:Si"
                      }
                    ],
                    "declKind": "Accessor",
                    "usr": "s:5NEKit9IPAddressC6FamilyO9hashValueSivg",
                    "mangledName": "$s5NEKit9IPAddressC6FamilyO9hashValueSivg",
                    "moduleName": "NEKit",
                    "implicit": true,
                    "accessorKind": "get"
                  }
                ]
              },
              {
                "kind": "Function",
                "name": "hash",
                "printedName": "hash(into:)",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Hasher",
                    "printedName": "Swift.Hasher",
                    "paramValueOwnership": "InOut",
                    "usr": "s:s6HasherV"
                  }
                ],
                "declKind": "Func",
                "usr": "s:5NEKit9IPAddressC6FamilyO4hash4intoys6HasherVz_tF",
                "mangledName": "$s5NEKit9IPAddressC6FamilyO4hash4intoys6HasherVz_tF",
                "moduleName": "NEKit",
                "implicit": true,
                "funcSelfKind": "NonMutating"
              }
            ],
            "declKind": "Enum",
            "usr": "s:5NEKit9IPAddressC6FamilyO",
            "mangledName": "$s5NEKit9IPAddressC6FamilyO",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "conformances": [
              {
                "kind": "Conformance",
                "name": "Equatable",
                "printedName": "Equatable",
                "usr": "s:SQ",
                "mangledName": "$sSQ"
              },
              {
                "kind": "Conformance",
                "name": "Hashable",
                "printedName": "Hashable",
                "usr": "s:SH",
                "mangledName": "$sSH"
              }
            ]
          },
          {
            "kind": "TypeDecl",
            "name": "Address",
            "printedName": "Address",
            "children": [
              {
                "kind": "Var",
                "name": "IPv4",
                "printedName": "IPv4",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(NEKit.IPAddress.Address.Type) -> (Darwin.in_addr) -> NEKit.IPAddress.Address",
                    "children": [
                      {
                        "kind": "TypeFunc",
                        "name": "Function",
                        "printedName": "(Darwin.in_addr) -> NEKit.IPAddress.Address",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "Address",
                            "printedName": "NEKit.IPAddress.Address",
                            "usr": "s:5NEKit9IPAddressC7AddressO"
                          },
                          {
                            "kind": "TypeNominal",
                            "name": "in_addr",
                            "printedName": "Darwin.in_addr",
                            "usr": "c:@S@in_addr"
                          }
                        ]
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Metatype",
                        "printedName": "NEKit.IPAddress.Address.Type",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "Address",
                            "printedName": "NEKit.IPAddress.Address",
                            "usr": "s:5NEKit9IPAddressC7AddressO"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "declKind": "EnumElement",
                "usr": "s:5NEKit9IPAddressC7AddressO4IPv4yAESo7in_addrVcAEmF",
                "mangledName": "$s5NEKit9IPAddressC7AddressO4IPv4yAESo7in_addrVcAEmF",
                "moduleName": "NEKit"
              },
              {
                "kind": "Var",
                "name": "IPv6",
                "printedName": "IPv6",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(NEKit.IPAddress.Address.Type) -> (Darwin.in6_addr) -> NEKit.IPAddress.Address",
                    "children": [
                      {
                        "kind": "TypeFunc",
                        "name": "Function",
                        "printedName": "(Darwin.in6_addr) -> NEKit.IPAddress.Address",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "Address",
                            "printedName": "NEKit.IPAddress.Address",
                            "usr": "s:5NEKit9IPAddressC7AddressO"
                          },
                          {
                            "kind": "TypeNominal",
                            "name": "in6_addr",
                            "printedName": "Darwin.in6_addr",
                            "usr": "c:@S@in6_addr"
                          }
                        ]
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Metatype",
                        "printedName": "NEKit.IPAddress.Address.Type",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "Address",
                            "printedName": "NEKit.IPAddress.Address",
                            "usr": "s:5NEKit9IPAddressC7AddressO"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "declKind": "EnumElement",
                "usr": "s:5NEKit9IPAddressC7AddressO4IPv6yAESo8in6_addrVcAEmF",
                "mangledName": "$s5NEKit9IPAddressC7AddressO4IPv6yAESo8in6_addrVcAEmF",
                "moduleName": "NEKit"
              },
              {
                "kind": "Var",
                "name": "asUInt128",
                "printedName": "asUInt128",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt128",
                    "printedName": "NEKit.UInt128",
                    "usr": "s:5NEKit7UInt128V"
                  }
                ],
                "declKind": "Var",
                "usr": "s:5NEKit9IPAddressC7AddressO9asUInt128AA0E0Vvp",
                "mangledName": "$s5NEKit9IPAddressC7AddressO9asUInt128AA0E0Vvp",
                "moduleName": "NEKit",
                "declAttributes": [
                  "AccessControl"
                ],
                "accessors": [
                  {
                    "kind": "Accessor",
                    "name": "Get",
                    "printedName": "Get()",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "UInt128",
                        "printedName": "NEKit.UInt128",
                        "usr": "s:5NEKit7UInt128V"
                      }
                    ],
                    "declKind": "Accessor",
                    "usr": "s:5NEKit9IPAddressC7AddressO9asUInt128AA0E0Vvg",
                    "mangledName": "$s5NEKit9IPAddressC7AddressO9asUInt128AA0E0Vvg",
                    "moduleName": "NEKit",
                    "accessorKind": "get"
                  }
                ]
              }
            ],
            "declKind": "Enum",
            "usr": "s:5NEKit9IPAddressC7AddressO",
            "mangledName": "$s5NEKit9IPAddressC7AddressO",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "conformances": [
              {
                "kind": "Conformance",
                "name": "Equatable",
                "printedName": "Equatable",
                "usr": "s:SQ",
                "mangledName": "$sSQ"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "family",
            "printedName": "family",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Family",
                "printedName": "NEKit.IPAddress.Family",
                "usr": "s:5NEKit9IPAddressC6FamilyO"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit9IPAddressC6familyAC6FamilyOvp",
            "mangledName": "$s5NEKit9IPAddressC6familyAC6FamilyOvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "Final",
              "HasStorage",
              "AccessControl"
            ],
            "isLet": true,
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Family",
                    "printedName": "NEKit.IPAddress.Family",
                    "usr": "s:5NEKit9IPAddressC6FamilyO"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit9IPAddressC6familyAC6FamilyOvg",
                "mangledName": "$s5NEKit9IPAddressC6familyAC6FamilyOvg",
                "moduleName": "NEKit",
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "address",
            "printedName": "address",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Address",
                "printedName": "NEKit.IPAddress.Address",
                "usr": "s:5NEKit9IPAddressC7AddressO"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit9IPAddressC7addressAC7AddressOvp",
            "mangledName": "$s5NEKit9IPAddressC7addressAC7AddressOvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "Final",
              "HasStorage",
              "AccessControl"
            ],
            "isLet": true,
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Address",
                    "printedName": "NEKit.IPAddress.Address",
                    "usr": "s:5NEKit9IPAddressC7AddressO"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit9IPAddressC7addressAC7AddressOvg",
                "mangledName": "$s5NEKit9IPAddressC7addressAC7AddressOvg",
                "moduleName": "NEKit",
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "presentation",
            "printedName": "presentation",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit9IPAddressC12presentationSSvp",
            "mangledName": "$s5NEKit9IPAddressC12presentationSSvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "Lazy",
              "AccessControl"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit9IPAddressC12presentationSSvg",
                "mangledName": "$s5NEKit9IPAddressC12presentationSSvg",
                "moduleName": "NEKit",
                "implicit": true,
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit9IPAddressC12presentationSSvs",
                "mangledName": "$s5NEKit9IPAddressC12presentationSSvs",
                "moduleName": "NEKit",
                "implicit": true,
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit9IPAddressC12presentationSSvM",
                "mangledName": "$s5NEKit9IPAddressC12presentationSSvM",
                "moduleName": "NEKit",
                "implicit": true,
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(fromInAddr:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "IPAddress",
                "printedName": "NEKit.IPAddress",
                "usr": "s:5NEKit9IPAddressC"
              },
              {
                "kind": "TypeNominal",
                "name": "in_addr",
                "printedName": "Darwin.in_addr",
                "usr": "c:@S@in_addr"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit9IPAddressC10fromInAddrACSo7in_addrV_tcfc",
            "mangledName": "$s5NEKit9IPAddressC10fromInAddrACSo7in_addrV_tcfc",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "init_kind": "Designated"
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(fromIn6Addr:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "IPAddress",
                "printedName": "NEKit.IPAddress",
                "usr": "s:5NEKit9IPAddressC"
              },
              {
                "kind": "TypeNominal",
                "name": "in6_addr",
                "printedName": "Darwin.in6_addr",
                "usr": "c:@S@in6_addr"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit9IPAddressC11fromIn6AddrACSo8in6_addrV_tcfc",
            "mangledName": "$s5NEKit9IPAddressC11fromIn6AddrACSo8in6_addrV_tcfc",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "init_kind": "Designated"
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(fromString:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "NEKit.IPAddress?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "IPAddress",
                    "printedName": "NEKit.IPAddress",
                    "usr": "s:5NEKit9IPAddressC"
                  }
                ],
                "usr": "s:Sq"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit9IPAddressC10fromStringACSgSS_tcfc",
            "mangledName": "$s5NEKit9IPAddressC10fromStringACSgSS_tcfc",
            "moduleName": "NEKit",
            "declAttributes": [
              "Convenience",
              "AccessControl"
            ],
            "init_kind": "Convenience"
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(ipv4InNetworkOrder:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "IPAddress",
                "printedName": "NEKit.IPAddress",
                "usr": "s:5NEKit9IPAddressC"
              },
              {
                "kind": "TypeNominal",
                "name": "UInt32",
                "printedName": "Swift.UInt32",
                "usr": "s:s6UInt32V"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit9IPAddressC18ipv4InNetworkOrderACs6UInt32V_tcfc",
            "mangledName": "$s5NEKit9IPAddressC18ipv4InNetworkOrderACs6UInt32V_tcfc",
            "moduleName": "NEKit",
            "declAttributes": [
              "Convenience",
              "AccessControl"
            ],
            "init_kind": "Convenience"
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(ipv6InNetworkOrder:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "IPAddress",
                "printedName": "NEKit.IPAddress",
                "usr": "s:5NEKit9IPAddressC"
              },
              {
                "kind": "TypeNominal",
                "name": "UInt128",
                "printedName": "NEKit.UInt128",
                "usr": "s:5NEKit7UInt128V"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit9IPAddressC18ipv6InNetworkOrderAcA7UInt128V_tcfc",
            "mangledName": "$s5NEKit9IPAddressC18ipv6InNetworkOrderAcA7UInt128V_tcfc",
            "moduleName": "NEKit",
            "declAttributes": [
              "Convenience",
              "AccessControl"
            ],
            "init_kind": "Convenience"
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(fromBytesInNetworkOrder:family:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "IPAddress",
                "printedName": "NEKit.IPAddress",
                "usr": "s:5NEKit9IPAddressC"
              },
              {
                "kind": "TypeNominal",
                "name": "UnsafeRawPointer",
                "printedName": "Swift.UnsafeRawPointer",
                "usr": "s:SV"
              },
              {
                "kind": "TypeNominal",
                "name": "Family",
                "printedName": "NEKit.IPAddress.Family",
                "hasDefaultArg": true,
                "usr": "s:5NEKit9IPAddressC6FamilyO"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit9IPAddressC23fromBytesInNetworkOrder6familyACSV_AC6FamilyOtcfc",
            "mangledName": "$s5NEKit9IPAddressC23fromBytesInNetworkOrder6familyACSV_AC6FamilyOtcfc",
            "moduleName": "NEKit",
            "declAttributes": [
              "Convenience",
              "AccessControl"
            ],
            "init_kind": "Convenience"
          },
          {
            "kind": "Var",
            "name": "description",
            "printedName": "description",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit9IPAddressC11descriptionSSvp",
            "mangledName": "$s5NEKit9IPAddressC11descriptionSSvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit9IPAddressC11descriptionSSvg",
                "mangledName": "$s5NEKit9IPAddressC11descriptionSSvg",
                "moduleName": "NEKit",
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "dataInNetworkOrder",
            "printedName": "dataInNetworkOrder",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit9IPAddressC18dataInNetworkOrder10Foundation4DataVvp",
            "mangledName": "$s5NEKit9IPAddressC18dataInNetworkOrder10Foundation4DataVvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Data",
                    "printedName": "Foundation.Data",
                    "usr": "s:10Foundation4DataV"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit9IPAddressC18dataInNetworkOrder10Foundation4DataVvg",
                "mangledName": "$s5NEKit9IPAddressC18dataInNetworkOrder10Foundation4DataVvg",
                "moduleName": "NEKit",
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "UInt32InNetworkOrder",
            "printedName": "UInt32InNetworkOrder",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Swift.UInt32?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt32",
                    "printedName": "Swift.UInt32",
                    "usr": "s:s6UInt32V"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit9IPAddressC20UInt32InNetworkOrders0C0VSgvp",
            "mangledName": "$s5NEKit9IPAddressC20UInt32InNetworkOrders0C0VSgvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "Swift.UInt32?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "UInt32",
                        "printedName": "Swift.UInt32",
                        "usr": "s:s6UInt32V"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit9IPAddressC20UInt32InNetworkOrders0C0VSgvg",
                "mangledName": "$s5NEKit9IPAddressC20UInt32InNetworkOrders0C0VSgvg",
                "moduleName": "NEKit",
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "UInt128InNetworkOrder",
            "printedName": "UInt128InNetworkOrder",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "NEKit.UInt128?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt128",
                    "printedName": "NEKit.UInt128",
                    "usr": "s:5NEKit7UInt128V"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit9IPAddressC21UInt128InNetworkOrderAA0C0VSgvp",
            "mangledName": "$s5NEKit9IPAddressC21UInt128InNetworkOrderAA0C0VSgvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "NEKit.UInt128?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "UInt128",
                        "printedName": "NEKit.UInt128",
                        "usr": "s:5NEKit7UInt128V"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit9IPAddressC21UInt128InNetworkOrderAA0C0VSgvg",
                "mangledName": "$s5NEKit9IPAddressC21UInt128InNetworkOrderAA0C0VSgvg",
                "moduleName": "NEKit",
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Function",
            "name": "withBytesInNetworkOrder",
            "printedName": "withBytesInNetworkOrder(_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              },
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(Swift.UnsafeRawBufferPointer) throws -> τ_0_0",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "UnsafeRawBufferPointer",
                    "printedName": "Swift.UnsafeRawBufferPointer",
                    "usr": "s:SW"
                  }
                ],
                "typeAttributes": [
                  "noescape"
                ]
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit9IPAddressC23withBytesInNetworkOrderyxxSWKXEKlF",
            "mangledName": "$s5NEKit9IPAddressC23withBytesInNetworkOrderyxxSWKXEKlF",
            "moduleName": "NEKit",
            "genericSig": "<τ_0_0>",
            "sugared_genericSig": "<U>",
            "declAttributes": [
              "Rethrows",
              "AccessControl"
            ],
            "throwing": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "advanced",
            "printedName": "advanced(by:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "NEKit.IPAddress?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "IPAddress",
                    "printedName": "NEKit.IPAddress",
                    "usr": "s:5NEKit9IPAddressC"
                  }
                ],
                "usr": "s:Sq"
              },
              {
                "kind": "TypeNominal",
                "name": "IPInterval",
                "printedName": "NEKit.IPInterval",
                "usr": "s:5NEKit10IPIntervalO"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit9IPAddressC8advanced2byACSgAA10IPIntervalO_tF",
            "mangledName": "$s5NEKit9IPAddressC8advanced2byACSgAA10IPIntervalO_tF",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "advanced",
            "printedName": "advanced(by:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "NEKit.IPAddress?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "IPAddress",
                    "printedName": "NEKit.IPAddress",
                    "usr": "s:5NEKit9IPAddressC"
                  }
                ],
                "usr": "s:Sq"
              },
              {
                "kind": "TypeNominal",
                "name": "UInt",
                "printedName": "Swift.UInt",
                "usr": "s:Su"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit9IPAddressC8advanced2byACSgSu_tF",
            "mangledName": "$s5NEKit9IPAddressC8advanced2byACSgSu_tF",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "hash",
            "printedName": "hash(into:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Hasher",
                "printedName": "Swift.Hasher",
                "paramValueOwnership": "InOut",
                "usr": "s:s6HasherV"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit9IPAddressC4hash4intoys6HasherVz_tF",
            "mangledName": "$s5NEKit9IPAddressC4hash4intoys6HasherVz_tF",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Var",
            "name": "hashValue",
            "printedName": "hashValue",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit9IPAddressC9hashValueSivp",
            "mangledName": "$s5NEKit9IPAddressC9hashValueSivp",
            "moduleName": "NEKit",
            "implicit": true,
            "isFromExtension": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit9IPAddressC9hashValueSivg",
                "mangledName": "$s5NEKit9IPAddressC9hashValueSivg",
                "moduleName": "NEKit",
                "implicit": true,
                "isFromExtension": true,
                "accessorKind": "get"
              }
            ]
          }
        ],
        "declKind": "Class",
        "usr": "s:5NEKit9IPAddressC",
        "mangledName": "$s5NEKit9IPAddressC",
        "moduleName": "NEKit",
        "declAttributes": [
          "AccessControl"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "Comparable",
            "printedName": "Comparable",
            "usr": "s:SL",
            "mangledName": "$sSL"
          },
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          }
        ]
      },
      {
        "kind": "Function",
        "name": "==",
        "printedName": "==(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Bool",
            "printedName": "Swift.Bool",
            "usr": "s:Sb"
          },
          {
            "kind": "TypeNominal",
            "name": "IPAddress",
            "printedName": "NEKit.IPAddress",
            "usr": "s:5NEKit9IPAddressC"
          },
          {
            "kind": "TypeNominal",
            "name": "IPAddress",
            "printedName": "NEKit.IPAddress",
            "usr": "s:5NEKit9IPAddressC"
          }
        ],
        "declKind": "Func",
        "usr": "s:5NEKit2eeoiySbAA9IPAddressC_ADtF",
        "mangledName": "$s5NEKit2eeoiySbAA9IPAddressC_ADtF",
        "moduleName": "NEKit",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "<",
        "printedName": "<(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Bool",
            "printedName": "Swift.Bool",
            "usr": "s:Sb"
          },
          {
            "kind": "TypeNominal",
            "name": "IPAddress",
            "printedName": "NEKit.IPAddress",
            "usr": "s:5NEKit9IPAddressC"
          },
          {
            "kind": "TypeNominal",
            "name": "IPAddress",
            "printedName": "NEKit.IPAddress",
            "usr": "s:5NEKit9IPAddressC"
          }
        ],
        "declKind": "Func",
        "usr": "s:5NEKit1loiySbAA9IPAddressC_ADtF",
        "mangledName": "$s5NEKit1loiySbAA9IPAddressC_ADtF",
        "moduleName": "NEKit",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Function",
        "name": "==",
        "printedName": "==(_:_:)",
        "children": [
          {
            "kind": "TypeNominal",
            "name": "Bool",
            "printedName": "Swift.Bool",
            "usr": "s:Sb"
          },
          {
            "kind": "TypeNominal",
            "name": "Address",
            "printedName": "NEKit.IPAddress.Address",
            "usr": "s:5NEKit9IPAddressC7AddressO"
          },
          {
            "kind": "TypeNominal",
            "name": "Address",
            "printedName": "NEKit.IPAddress.Address",
            "usr": "s:5NEKit9IPAddressC7AddressO"
          }
        ],
        "declKind": "Func",
        "usr": "s:5NEKit2eeoiySbAA9IPAddressC7AddressO_AFtF",
        "mangledName": "$s5NEKit2eeoiySbAA9IPAddressC7AddressO_AFtF",
        "moduleName": "NEKit",
        "declAttributes": [
          "AccessControl"
        ],
        "funcSelfKind": "NonMutating"
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "TypeDecl",
        "name": "Checksum",
        "printedName": "Checksum",
        "children": [
          {
            "kind": "Function",
            "name": "computeChecksum",
            "printedName": "computeChecksum(_:from:to:withPseudoHeaderChecksum:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "UInt16",
                "printedName": "Swift.UInt16",
                "usr": "s:s6UInt16V"
              },
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              },
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "hasDefaultArg": true,
                "usr": "s:Si"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Swift.Int?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ],
                "hasDefaultArg": true,
                "usr": "s:Sq"
              },
              {
                "kind": "TypeNominal",
                "name": "UInt32",
                "printedName": "Swift.UInt32",
                "hasDefaultArg": true,
                "usr": "s:s6UInt32V"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit8ChecksumC07computeB0_4from2to016withPseudoHeaderB0s6UInt16V10Foundation4DataV_S2iSgs6UInt32VtFZ",
            "mangledName": "$s5NEKit8ChecksumC07computeB0_4from2to016withPseudoHeaderB0s6UInt16V10Foundation4DataV_S2iSgs6UInt32VtFZ",
            "moduleName": "NEKit",
            "static": true,
            "declAttributes": [
              "Final",
              "AccessControl"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "validateChecksum",
            "printedName": "validateChecksum(_:from:to:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              },
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              },
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "hasDefaultArg": true,
                "usr": "s:Si"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Swift.Int?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ],
                "hasDefaultArg": true,
                "usr": "s:Sq"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit8ChecksumC08validateB0_4from2toSb10Foundation4DataV_S2iSgtFZ",
            "mangledName": "$s5NEKit8ChecksumC08validateB0_4from2toSb10Foundation4DataV_S2iSgtFZ",
            "moduleName": "NEKit",
            "static": true,
            "declAttributes": [
              "Final",
              "AccessControl"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "computeChecksumUnfold",
            "printedName": "computeChecksumUnfold(_:from:to:withPseudoHeaderChecksum:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "UInt32",
                "printedName": "Swift.UInt32",
                "usr": "s:s6UInt32V"
              },
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              },
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "hasDefaultArg": true,
                "usr": "s:Si"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Swift.Int?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ],
                "hasDefaultArg": true,
                "usr": "s:Sq"
              },
              {
                "kind": "TypeNominal",
                "name": "UInt32",
                "printedName": "Swift.UInt32",
                "hasDefaultArg": true,
                "usr": "s:s6UInt32V"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit8ChecksumC07computeB6Unfold_4from2to016withPseudoHeaderB0s6UInt32V10Foundation4DataV_S2iSgAItFZ",
            "mangledName": "$s5NEKit8ChecksumC07computeB6Unfold_4from2to016withPseudoHeaderB0s6UInt32V10Foundation4DataV_S2iSgAItFZ",
            "moduleName": "NEKit",
            "static": true,
            "declAttributes": [
              "Final",
              "AccessControl"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "toChecksum",
            "printedName": "toChecksum(_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "UInt16",
                "printedName": "Swift.UInt16",
                "usr": "s:s6UInt16V"
              },
              {
                "kind": "TypeNominal",
                "name": "UInt32",
                "printedName": "Swift.UInt32",
                "usr": "s:s6UInt32V"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit8ChecksumC02toB0ys6UInt16Vs6UInt32VFZ",
            "mangledName": "$s5NEKit8ChecksumC02toB0ys6UInt16Vs6UInt32VFZ",
            "moduleName": "NEKit",
            "static": true,
            "declAttributes": [
              "Final",
              "AccessControl"
            ],
            "funcSelfKind": "NonMutating"
          }
        ],
        "declKind": "Class",
        "usr": "s:5NEKit8ChecksumC",
        "mangledName": "$s5NEKit8ChecksumC",
        "moduleName": "NEKit",
        "isOpen": true,
        "declAttributes": [
          "AccessControl"
        ],
        "hasMissingDesignatedInitializers": true
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "TypeDecl",
        "name": "AdapterSocket",
        "printedName": "AdapterSocket",
        "children": [
          {
            "kind": "Var",
            "name": "session",
            "printedName": "session",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "ImplicitlyUnwrappedOptional",
                "printedName": "NEKit.ConnectSession?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "ConnectSession",
                    "printedName": "NEKit.ConnectSession",
                    "usr": "s:5NEKit14ConnectSessionC"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit13AdapterSocketC7sessionAA14ConnectSessionCSgvp",
            "mangledName": "$s5NEKit13AdapterSocketC7sessionAA14ConnectSessionCSgvp",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "HasInitialValue",
              "HasStorage",
              "AccessControl"
            ],
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "ImplicitlyUnwrappedOptional",
                    "printedName": "NEKit.ConnectSession?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "ConnectSession",
                        "printedName": "NEKit.ConnectSession",
                        "usr": "s:5NEKit14ConnectSessionC"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit13AdapterSocketC7sessionAA14ConnectSessionCSgvg",
                "mangledName": "$s5NEKit13AdapterSocketC7sessionAA14ConnectSessionCSgvg",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "ImplicitlyUnwrappedOptional",
                    "printedName": "NEKit.ConnectSession?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "ConnectSession",
                        "printedName": "NEKit.ConnectSession",
                        "usr": "s:5NEKit14ConnectSessionC"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit13AdapterSocketC7sessionAA14ConnectSessionCSgvs",
                "mangledName": "$s5NEKit13AdapterSocketC7sessionAA14ConnectSessionCSgvs",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit13AdapterSocketC7sessionAA14ConnectSessionCSgvM",
                "mangledName": "$s5NEKit13AdapterSocketC7sessionAA14ConnectSessionCSgvM",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "observer",
            "printedName": "observer",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "NEKit.Observer<NEKit.AdapterSocketEvent>?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Observer",
                    "printedName": "NEKit.Observer<NEKit.AdapterSocketEvent>",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "AdapterSocketEvent",
                        "printedName": "NEKit.AdapterSocketEvent",
                        "usr": "s:5NEKit18AdapterSocketEventO"
                      }
                    ],
                    "usr": "s:5NEKit8ObserverC"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit13AdapterSocketC8observerAA8ObserverCyAA0bC5EventOGSgvp",
            "mangledName": "$s5NEKit13AdapterSocketC8observerAA8ObserverCyAA0bC5EventOGSgvp",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "HasInitialValue",
              "HasStorage",
              "AccessControl"
            ],
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "NEKit.Observer<NEKit.AdapterSocketEvent>?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Observer",
                        "printedName": "NEKit.Observer<NEKit.AdapterSocketEvent>",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "AdapterSocketEvent",
                            "printedName": "NEKit.AdapterSocketEvent",
                            "usr": "s:5NEKit18AdapterSocketEventO"
                          }
                        ],
                        "usr": "s:5NEKit8ObserverC"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit13AdapterSocketC8observerAA8ObserverCyAA0bC5EventOGSgvg",
                "mangledName": "$s5NEKit13AdapterSocketC8observerAA8ObserverCyAA0bC5EventOGSgvg",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "NEKit.Observer<NEKit.AdapterSocketEvent>?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Observer",
                        "printedName": "NEKit.Observer<NEKit.AdapterSocketEvent>",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "AdapterSocketEvent",
                            "printedName": "NEKit.AdapterSocketEvent",
                            "usr": "s:5NEKit18AdapterSocketEventO"
                          }
                        ],
                        "usr": "s:5NEKit8ObserverC"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit13AdapterSocketC8observerAA8ObserverCyAA0bC5EventOGSgvs",
                "mangledName": "$s5NEKit13AdapterSocketC8observerAA8ObserverCyAA0bC5EventOGSgvs",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit13AdapterSocketC8observerAA8ObserverCyAA0bC5EventOGSgvM",
                "mangledName": "$s5NEKit13AdapterSocketC8observerAA8ObserverCyAA0bC5EventOGSgvM",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "description",
            "printedName": "description",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Var",
            "usr": "c:@M@NEKit@objc(cs)AdapterSocket(py)description",
            "mangledName": "$s5NEKit13AdapterSocketC11descriptionSSvp",
            "moduleName": "NEKit",
            "overriding": true,
            "isOpen": true,
            "objc_name": "description",
            "declAttributes": [
              "Dynamic",
              "ObjC",
              "Override",
              "AccessControl"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "c:@M@NEKit@objc(cs)AdapterSocket(im)description",
                "mangledName": "$s5NEKit13AdapterSocketC11descriptionSSvg",
                "moduleName": "NEKit",
                "overriding": true,
                "isOpen": true,
                "objc_name": "description",
                "declAttributes": [
                  "Dynamic",
                  "ObjC"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "isCancelled",
            "printedName": "isCancelled",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit13AdapterSocketC11isCancelledSbvp",
            "mangledName": "$s5NEKit13AdapterSocketC11isCancelledSbvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Bool",
                    "printedName": "Swift.Bool",
                    "usr": "s:Sb"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit13AdapterSocketC11isCancelledSbvg",
                "mangledName": "$s5NEKit13AdapterSocketC11isCancelledSbvg",
                "moduleName": "NEKit",
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Function",
            "name": "openSocketWith",
            "printedName": "openSocketWith(session:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "ConnectSession",
                "printedName": "NEKit.ConnectSession",
                "usr": "s:5NEKit14ConnectSessionC"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit13AdapterSocketC04openC4With7sessionyAA14ConnectSessionC_tF",
            "mangledName": "$s5NEKit13AdapterSocketC04openC4With7sessionyAA14ConnectSessionC_tF",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Var",
            "name": "socket",
            "printedName": "socket",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "ImplicitlyUnwrappedOptional",
                "printedName": "NEKit.RawTCPSocketProtocol?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "RawTCPSocketProtocol",
                    "printedName": "NEKit.RawTCPSocketProtocol",
                    "usr": "s:5NEKit20RawTCPSocketProtocolP"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit13AdapterSocketC6socketAA20RawTCPSocketProtocol_pSgvp",
            "mangledName": "$s5NEKit13AdapterSocketC6socketAA20RawTCPSocketProtocol_pSgvp",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "HasInitialValue",
              "HasStorage",
              "AccessControl",
              "RawDocComment"
            ],
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "ImplicitlyUnwrappedOptional",
                    "printedName": "NEKit.RawTCPSocketProtocol?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "RawTCPSocketProtocol",
                        "printedName": "NEKit.RawTCPSocketProtocol",
                        "usr": "s:5NEKit20RawTCPSocketProtocolP"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit13AdapterSocketC6socketAA20RawTCPSocketProtocol_pSgvg",
                "mangledName": "$s5NEKit13AdapterSocketC6socketAA20RawTCPSocketProtocol_pSgvg",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "ImplicitlyUnwrappedOptional",
                    "printedName": "NEKit.RawTCPSocketProtocol?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "RawTCPSocketProtocol",
                        "printedName": "NEKit.RawTCPSocketProtocol",
                        "usr": "s:5NEKit20RawTCPSocketProtocolP"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit13AdapterSocketC6socketAA20RawTCPSocketProtocol_pSgvs",
                "mangledName": "$s5NEKit13AdapterSocketC6socketAA20RawTCPSocketProtocol_pSgvs",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit13AdapterSocketC6socketAA20RawTCPSocketProtocol_pSgvM",
                "mangledName": "$s5NEKit13AdapterSocketC6socketAA20RawTCPSocketProtocol_pSgvM",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "delegate",
            "printedName": "delegate",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "WeakStorage",
                "printedName": "NEKit.SocketDelegate?"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit13AdapterSocketC8delegateAA0C8Delegate_pSgvp",
            "mangledName": "$s5NEKit13AdapterSocketC8delegateAA0C8Delegate_pSgvp",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "HasInitialValue",
              "HasStorage",
              "AccessControl",
              "ReferenceOwnership",
              "RawDocComment"
            ],
            "ownership": 1,
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "NEKit.SocketDelegate?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "SocketDelegate",
                        "printedName": "NEKit.SocketDelegate",
                        "usr": "s:5NEKit14SocketDelegateP"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit13AdapterSocketC8delegateAA0C8Delegate_pSgvg",
                "mangledName": "$s5NEKit13AdapterSocketC8delegateAA0C8Delegate_pSgvg",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "NEKit.SocketDelegate?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "SocketDelegate",
                        "printedName": "NEKit.SocketDelegate",
                        "usr": "s:5NEKit14SocketDelegateP"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit13AdapterSocketC8delegateAA0C8Delegate_pSgvs",
                "mangledName": "$s5NEKit13AdapterSocketC8delegateAA0C8Delegate_pSgvs",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit13AdapterSocketC8delegateAA0C8Delegate_pSgvM",
                "mangledName": "$s5NEKit13AdapterSocketC8delegateAA0C8Delegate_pSgvM",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "status",
            "printedName": "status",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "SocketStatus",
                "printedName": "NEKit.SocketStatus",
                "usr": "s:5NEKit12SocketStatusO"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit13AdapterSocketC6statusAA0C6StatusOvp",
            "mangledName": "$s5NEKit13AdapterSocketC6statusAA0C6StatusOvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SocketStatus",
                    "printedName": "NEKit.SocketStatus",
                    "usr": "s:5NEKit12SocketStatusO"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit13AdapterSocketC6statusAA0C6StatusOvg",
                "mangledName": "$s5NEKit13AdapterSocketC6statusAA0C6StatusOvg",
                "moduleName": "NEKit",
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "statusDescription",
            "printedName": "statusDescription",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit13AdapterSocketC17statusDescriptionSSvp",
            "mangledName": "$s5NEKit13AdapterSocketC17statusDescriptionSSvp",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "AccessControl"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit13AdapterSocketC17statusDescriptionSSvg",
                "mangledName": "$s5NEKit13AdapterSocketC17statusDescriptionSSvg",
                "moduleName": "NEKit",
                "isOpen": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(observe:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "AdapterSocket",
                "printedName": "NEKit.AdapterSocket",
                "usr": "c:@M@NEKit@objc(cs)AdapterSocket"
              },
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "hasDefaultArg": true,
                "usr": "s:Sb"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit13AdapterSocketC7observeACSb_tcfc",
            "mangledName": "$s5NEKit13AdapterSocketC7observeACSb_tcfc",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "init_kind": "Designated"
          },
          {
            "kind": "Function",
            "name": "readData",
            "printedName": "readData()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit13AdapterSocketC8readDatayyF",
            "mangledName": "$s5NEKit13AdapterSocketC8readDatayyF",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "write",
            "printedName": "write(data:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit13AdapterSocketC5write4datay10Foundation4DataV_tF",
            "mangledName": "$s5NEKit13AdapterSocketC5write4datay10Foundation4DataV_tF",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "disconnect",
            "printedName": "disconnect(becauseOf:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Swift.Error?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Error",
                    "printedName": "Swift.Error",
                    "usr": "s:s5ErrorP"
                  }
                ],
                "hasDefaultArg": true,
                "usr": "s:Sq"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit13AdapterSocketC10disconnect9becauseOfys5Error_pSg_tF",
            "mangledName": "$s5NEKit13AdapterSocketC10disconnect9becauseOfys5Error_pSg_tF",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "forceDisconnect",
            "printedName": "forceDisconnect(becauseOf:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Swift.Error?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Error",
                    "printedName": "Swift.Error",
                    "usr": "s:s5ErrorP"
                  }
                ],
                "hasDefaultArg": true,
                "usr": "s:Sq"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit13AdapterSocketC15forceDisconnect9becauseOfys5Error_pSg_tF",
            "mangledName": "$s5NEKit13AdapterSocketC15forceDisconnect9becauseOfys5Error_pSg_tF",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "didDisconnectWith",
            "printedName": "didDisconnectWith(socket:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "RawTCPSocketProtocol",
                "printedName": "NEKit.RawTCPSocketProtocol",
                "usr": "s:5NEKit20RawTCPSocketProtocolP"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit13AdapterSocketC17didDisconnectWith6socketyAA20RawTCPSocketProtocol_p_tF",
            "mangledName": "$s5NEKit13AdapterSocketC17didDisconnectWith6socketyAA20RawTCPSocketProtocol_p_tF",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "didRead",
            "printedName": "didRead(data:from:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              },
              {
                "kind": "TypeNominal",
                "name": "RawTCPSocketProtocol",
                "printedName": "NEKit.RawTCPSocketProtocol",
                "usr": "s:5NEKit20RawTCPSocketProtocolP"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit13AdapterSocketC7didRead4data4fromy10Foundation4DataV_AA20RawTCPSocketProtocol_ptF",
            "mangledName": "$s5NEKit13AdapterSocketC7didRead4data4fromy10Foundation4DataV_AA20RawTCPSocketProtocol_ptF",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "didWrite",
            "printedName": "didWrite(data:by:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Foundation.Data?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Data",
                    "printedName": "Foundation.Data",
                    "usr": "s:10Foundation4DataV"
                  }
                ],
                "usr": "s:Sq"
              },
              {
                "kind": "TypeNominal",
                "name": "RawTCPSocketProtocol",
                "printedName": "NEKit.RawTCPSocketProtocol",
                "usr": "s:5NEKit20RawTCPSocketProtocolP"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit13AdapterSocketC8didWrite4data2byy10Foundation4DataVSg_AA20RawTCPSocketProtocol_ptF",
            "mangledName": "$s5NEKit13AdapterSocketC8didWrite4data2byy10Foundation4DataVSg_AA20RawTCPSocketProtocol_ptF",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "didConnectWith",
            "printedName": "didConnectWith(socket:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "RawTCPSocketProtocol",
                "printedName": "NEKit.RawTCPSocketProtocol",
                "usr": "s:5NEKit20RawTCPSocketProtocolP"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit13AdapterSocketC14didConnectWith6socketyAA20RawTCPSocketProtocol_p_tF",
            "mangledName": "$s5NEKit13AdapterSocketC14didConnectWith6socketyAA20RawTCPSocketProtocol_p_tF",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "AdapterSocket",
                "printedName": "NEKit.AdapterSocket",
                "usr": "c:@M@NEKit@objc(cs)AdapterSocket"
              }
            ],
            "declKind": "Constructor",
            "usr": "c:@M@NEKit@objc(cs)AdapterSocket(im)init",
            "mangledName": "$s5NEKit13AdapterSocketCACycfc",
            "moduleName": "NEKit",
            "overriding": true,
            "implicit": true,
            "objc_name": "init",
            "declAttributes": [
              "Dynamic",
              "ObjC",
              "Override"
            ],
            "init_kind": "Designated"
          }
        ],
        "declKind": "Class",
        "usr": "c:@M@NEKit@objc(cs)AdapterSocket",
        "mangledName": "$s5NEKit13AdapterSocketC",
        "moduleName": "NEKit",
        "isOpen": true,
        "declAttributes": [
          "AccessControl",
          "ObjC"
        ],
        "superclassUsr": "c:objc(cs)NSObject",
        "superclassNames": [
          "ObjectiveC.NSObject"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "SocketProtocol",
            "printedName": "SocketProtocol",
            "usr": "s:5NEKit14SocketProtocolP",
            "mangledName": "$s5NEKit14SocketProtocolP"
          },
          {
            "kind": "Conformance",
            "name": "RawTCPSocketDelegate",
            "printedName": "RawTCPSocketDelegate",
            "usr": "s:5NEKit20RawTCPSocketDelegateP",
            "mangledName": "$s5NEKit20RawTCPSocketDelegateP"
          },
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "CVarArg",
            "printedName": "CVarArg",
            "usr": "s:s7CVarArgP",
            "mangledName": "$ss7CVarArgP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObservingPublishing",
            "printedName": "_KeyValueCodingAndObservingPublishing",
            "usr": "s:10Foundation37_KeyValueCodingAndObservingPublishingP",
            "mangledName": "$s10Foundation37_KeyValueCodingAndObservingPublishingP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObserving",
            "printedName": "_KeyValueCodingAndObserving",
            "usr": "s:10Foundation27_KeyValueCodingAndObservingP",
            "mangledName": "$s10Foundation27_KeyValueCodingAndObservingP"
          },
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "CustomDebugStringConvertible",
            "printedName": "CustomDebugStringConvertible",
            "usr": "s:s28CustomDebugStringConvertibleP",
            "mangledName": "$ss28CustomDebugStringConvertibleP"
          }
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "TypeDecl",
        "name": "RawTCPSocketProtocol",
        "printedName": "RawTCPSocketProtocol",
        "children": [
          {
            "kind": "Var",
            "name": "delegate",
            "printedName": "delegate",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "NEKit.RawTCPSocketDelegate?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "RawTCPSocketDelegate",
                    "printedName": "NEKit.RawTCPSocketDelegate",
                    "usr": "s:5NEKit20RawTCPSocketDelegateP"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit20RawTCPSocketProtocolP8delegateAA0bC8Delegate_pSgvp",
            "mangledName": "$s5NEKit20RawTCPSocketProtocolP8delegateAA0bC8Delegate_pSgvp",
            "moduleName": "NEKit",
            "protocolReq": true,
            "declAttributes": [
              "RawDocComment"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "NEKit.RawTCPSocketDelegate?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "RawTCPSocketDelegate",
                        "printedName": "NEKit.RawTCPSocketDelegate",
                        "usr": "s:5NEKit20RawTCPSocketDelegateP"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit20RawTCPSocketProtocolP8delegateAA0bC8Delegate_pSgvg",
                "mangledName": "$s5NEKit20RawTCPSocketProtocolP8delegateAA0bC8Delegate_pSgvg",
                "moduleName": "NEKit",
                "genericSig": "<τ_0_0 where τ_0_0 : NEKit.RawTCPSocketProtocol>",
                "sugared_genericSig": "<Self where Self : NEKit.RawTCPSocketProtocol>",
                "protocolReq": true,
                "reqNewWitnessTableEntry": true,
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "NEKit.RawTCPSocketDelegate?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "RawTCPSocketDelegate",
                        "printedName": "NEKit.RawTCPSocketDelegate",
                        "usr": "s:5NEKit20RawTCPSocketDelegateP"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit20RawTCPSocketProtocolP8delegateAA0bC8Delegate_pSgvs",
                "mangledName": "$s5NEKit20RawTCPSocketProtocolP8delegateAA0bC8Delegate_pSgvs",
                "moduleName": "NEKit",
                "genericSig": "<τ_0_0 where τ_0_0 : NEKit.RawTCPSocketProtocol>",
                "sugared_genericSig": "<Self where Self : NEKit.RawTCPSocketProtocol>",
                "protocolReq": true,
                "reqNewWitnessTableEntry": true,
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit20RawTCPSocketProtocolP8delegateAA0bC8Delegate_pSgvM",
                "mangledName": "$s5NEKit20RawTCPSocketProtocolP8delegateAA0bC8Delegate_pSgvM",
                "moduleName": "NEKit",
                "genericSig": "<τ_0_0 where τ_0_0 : NEKit.RawTCPSocketProtocol>",
                "sugared_genericSig": "<Self where Self : NEKit.RawTCPSocketProtocol>",
                "protocolReq": true,
                "implicit": true,
                "reqNewWitnessTableEntry": true,
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "isConnected",
            "printedName": "isConnected",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit20RawTCPSocketProtocolP11isConnectedSbvp",
            "mangledName": "$s5NEKit20RawTCPSocketProtocolP11isConnectedSbvp",
            "moduleName": "NEKit",
            "protocolReq": true,
            "declAttributes": [
              "RawDocComment"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Bool",
                    "printedName": "Swift.Bool",
                    "usr": "s:Sb"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit20RawTCPSocketProtocolP11isConnectedSbvg",
                "mangledName": "$s5NEKit20RawTCPSocketProtocolP11isConnectedSbvg",
                "moduleName": "NEKit",
                "genericSig": "<τ_0_0 where τ_0_0 : NEKit.RawTCPSocketProtocol>",
                "sugared_genericSig": "<Self where Self : NEKit.RawTCPSocketProtocol>",
                "protocolReq": true,
                "reqNewWitnessTableEntry": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "sourceIPAddress",
            "printedName": "sourceIPAddress",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "NEKit.IPAddress?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "IPAddress",
                    "printedName": "NEKit.IPAddress",
                    "usr": "s:5NEKit9IPAddressC"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit20RawTCPSocketProtocolP15sourceIPAddressAA0F0CSgvp",
            "mangledName": "$s5NEKit20RawTCPSocketProtocolP15sourceIPAddressAA0F0CSgvp",
            "moduleName": "NEKit",
            "protocolReq": true,
            "declAttributes": [
              "RawDocComment"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "NEKit.IPAddress?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "IPAddress",
                        "printedName": "NEKit.IPAddress",
                        "usr": "s:5NEKit9IPAddressC"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit20RawTCPSocketProtocolP15sourceIPAddressAA0F0CSgvg",
                "mangledName": "$s5NEKit20RawTCPSocketProtocolP15sourceIPAddressAA0F0CSgvg",
                "moduleName": "NEKit",
                "genericSig": "<τ_0_0 where τ_0_0 : NEKit.RawTCPSocketProtocol>",
                "sugared_genericSig": "<Self where Self : NEKit.RawTCPSocketProtocol>",
                "protocolReq": true,
                "reqNewWitnessTableEntry": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "sourcePort",
            "printedName": "sourcePort",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "NEKit.Port?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Port",
                    "printedName": "NEKit.Port",
                    "usr": "s:5NEKit4PortV"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit20RawTCPSocketProtocolP10sourcePortAA0F0VSgvp",
            "mangledName": "$s5NEKit20RawTCPSocketProtocolP10sourcePortAA0F0VSgvp",
            "moduleName": "NEKit",
            "protocolReq": true,
            "declAttributes": [
              "RawDocComment"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "NEKit.Port?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Port",
                        "printedName": "NEKit.Port",
                        "usr": "s:5NEKit4PortV"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit20RawTCPSocketProtocolP10sourcePortAA0F0VSgvg",
                "mangledName": "$s5NEKit20RawTCPSocketProtocolP10sourcePortAA0F0VSgvg",
                "moduleName": "NEKit",
                "genericSig": "<τ_0_0 where τ_0_0 : NEKit.RawTCPSocketProtocol>",
                "sugared_genericSig": "<Self where Self : NEKit.RawTCPSocketProtocol>",
                "protocolReq": true,
                "reqNewWitnessTableEntry": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "destinationIPAddress",
            "printedName": "destinationIPAddress",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "NEKit.IPAddress?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "IPAddress",
                    "printedName": "NEKit.IPAddress",
                    "usr": "s:5NEKit9IPAddressC"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit20RawTCPSocketProtocolP20destinationIPAddressAA0F0CSgvp",
            "mangledName": "$s5NEKit20RawTCPSocketProtocolP20destinationIPAddressAA0F0CSgvp",
            "moduleName": "NEKit",
            "protocolReq": true,
            "declAttributes": [
              "RawDocComment"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "NEKit.IPAddress?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "IPAddress",
                        "printedName": "NEKit.IPAddress",
                        "usr": "s:5NEKit9IPAddressC"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit20RawTCPSocketProtocolP20destinationIPAddressAA0F0CSgvg",
                "mangledName": "$s5NEKit20RawTCPSocketProtocolP20destinationIPAddressAA0F0CSgvg",
                "moduleName": "NEKit",
                "genericSig": "<τ_0_0 where τ_0_0 : NEKit.RawTCPSocketProtocol>",
                "sugared_genericSig": "<Self where Self : NEKit.RawTCPSocketProtocol>",
                "protocolReq": true,
                "reqNewWitnessTableEntry": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "destinationPort",
            "printedName": "destinationPort",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "NEKit.Port?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Port",
                    "printedName": "NEKit.Port",
                    "usr": "s:5NEKit4PortV"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit20RawTCPSocketProtocolP15destinationPortAA0F0VSgvp",
            "mangledName": "$s5NEKit20RawTCPSocketProtocolP15destinationPortAA0F0VSgvp",
            "moduleName": "NEKit",
            "protocolReq": true,
            "declAttributes": [
              "RawDocComment"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "NEKit.Port?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Port",
                        "printedName": "NEKit.Port",
                        "usr": "s:5NEKit4PortV"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit20RawTCPSocketProtocolP15destinationPortAA0F0VSgvg",
                "mangledName": "$s5NEKit20RawTCPSocketProtocolP15destinationPortAA0F0VSgvg",
                "moduleName": "NEKit",
                "genericSig": "<τ_0_0 where τ_0_0 : NEKit.RawTCPSocketProtocol>",
                "sugared_genericSig": "<Self where Self : NEKit.RawTCPSocketProtocol>",
                "protocolReq": true,
                "reqNewWitnessTableEntry": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Function",
            "name": "connectTo",
            "printedName": "connectTo(host:port:enableTLS:tlsSettings:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              },
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              },
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "[Swift.AnyHashable : Any]?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Dictionary",
                    "printedName": "[Swift.AnyHashable : Any]",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "AnyHashable",
                        "printedName": "Swift.AnyHashable",
                        "usr": "s:s11AnyHashableV"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "ProtocolComposition",
                        "printedName": "Any"
                      }
                    ],
                    "usr": "s:SD"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit20RawTCPSocketProtocolP9connectTo4host4port9enableTLS11tlsSettingsySS_SiSbSDys11AnyHashableVypGSgtKF",
            "mangledName": "$s5NEKit20RawTCPSocketProtocolP9connectTo4host4port9enableTLS11tlsSettingsySS_SiSbSDys11AnyHashableVypGSgtKF",
            "moduleName": "NEKit",
            "genericSig": "<τ_0_0 where τ_0_0 : NEKit.RawTCPSocketProtocol>",
            "sugared_genericSig": "<Self where Self : NEKit.RawTCPSocketProtocol>",
            "protocolReq": true,
            "declAttributes": [
              "RawDocComment"
            ],
            "throwing": true,
            "reqNewWitnessTableEntry": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "disconnect",
            "printedName": "disconnect()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit20RawTCPSocketProtocolP10disconnectyyF",
            "mangledName": "$s5NEKit20RawTCPSocketProtocolP10disconnectyyF",
            "moduleName": "NEKit",
            "genericSig": "<τ_0_0 where τ_0_0 : NEKit.RawTCPSocketProtocol>",
            "sugared_genericSig": "<Self where Self : NEKit.RawTCPSocketProtocol>",
            "protocolReq": true,
            "declAttributes": [
              "RawDocComment"
            ],
            "reqNewWitnessTableEntry": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "forceDisconnect",
            "printedName": "forceDisconnect()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit20RawTCPSocketProtocolP15forceDisconnectyyF",
            "mangledName": "$s5NEKit20RawTCPSocketProtocolP15forceDisconnectyyF",
            "moduleName": "NEKit",
            "genericSig": "<τ_0_0 where τ_0_0 : NEKit.RawTCPSocketProtocol>",
            "sugared_genericSig": "<Self where Self : NEKit.RawTCPSocketProtocol>",
            "protocolReq": true,
            "declAttributes": [
              "RawDocComment"
            ],
            "reqNewWitnessTableEntry": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "write",
            "printedName": "write(data:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit20RawTCPSocketProtocolP5write4datay10Foundation4DataV_tF",
            "mangledName": "$s5NEKit20RawTCPSocketProtocolP5write4datay10Foundation4DataV_tF",
            "moduleName": "NEKit",
            "genericSig": "<τ_0_0 where τ_0_0 : NEKit.RawTCPSocketProtocol>",
            "sugared_genericSig": "<Self where Self : NEKit.RawTCPSocketProtocol>",
            "protocolReq": true,
            "declAttributes": [
              "RawDocComment"
            ],
            "reqNewWitnessTableEntry": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "readData",
            "printedName": "readData()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit20RawTCPSocketProtocolP8readDatayyF",
            "mangledName": "$s5NEKit20RawTCPSocketProtocolP8readDatayyF",
            "moduleName": "NEKit",
            "genericSig": "<τ_0_0 where τ_0_0 : NEKit.RawTCPSocketProtocol>",
            "sugared_genericSig": "<Self where Self : NEKit.RawTCPSocketProtocol>",
            "protocolReq": true,
            "declAttributes": [
              "RawDocComment"
            ],
            "reqNewWitnessTableEntry": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "readDataTo",
            "printedName": "readDataTo(length:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit20RawTCPSocketProtocolP10readDataTo6lengthySi_tF",
            "mangledName": "$s5NEKit20RawTCPSocketProtocolP10readDataTo6lengthySi_tF",
            "moduleName": "NEKit",
            "genericSig": "<τ_0_0 where τ_0_0 : NEKit.RawTCPSocketProtocol>",
            "sugared_genericSig": "<Self where Self : NEKit.RawTCPSocketProtocol>",
            "protocolReq": true,
            "declAttributes": [
              "RawDocComment"
            ],
            "reqNewWitnessTableEntry": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "readDataTo",
            "printedName": "readDataTo(data:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit20RawTCPSocketProtocolP10readDataTo4datay10Foundation0F0V_tF",
            "mangledName": "$s5NEKit20RawTCPSocketProtocolP10readDataTo4datay10Foundation0F0V_tF",
            "moduleName": "NEKit",
            "genericSig": "<τ_0_0 where τ_0_0 : NEKit.RawTCPSocketProtocol>",
            "sugared_genericSig": "<Self where Self : NEKit.RawTCPSocketProtocol>",
            "protocolReq": true,
            "declAttributes": [
              "RawDocComment"
            ],
            "reqNewWitnessTableEntry": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "readDataTo",
            "printedName": "readDataTo(data:maxLength:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              },
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit20RawTCPSocketProtocolP10readDataTo4data9maxLengthy10Foundation0F0V_SitF",
            "mangledName": "$s5NEKit20RawTCPSocketProtocolP10readDataTo4data9maxLengthy10Foundation0F0V_SitF",
            "moduleName": "NEKit",
            "genericSig": "<τ_0_0 where τ_0_0 : NEKit.RawTCPSocketProtocol>",
            "sugared_genericSig": "<Self where Self : NEKit.RawTCPSocketProtocol>",
            "protocolReq": true,
            "declAttributes": [
              "RawDocComment"
            ],
            "reqNewWitnessTableEntry": true,
            "funcSelfKind": "NonMutating"
          }
        ],
        "declKind": "Protocol",
        "usr": "s:5NEKit20RawTCPSocketProtocolP",
        "mangledName": "$s5NEKit20RawTCPSocketProtocolP",
        "moduleName": "NEKit",
        "genericSig": "<τ_0_0 : AnyObject>",
        "sugared_genericSig": "<Self : AnyObject>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "RawTCPSocketDelegate",
        "printedName": "RawTCPSocketDelegate",
        "children": [
          {
            "kind": "Function",
            "name": "didDisconnectWith",
            "printedName": "didDisconnectWith(socket:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "RawTCPSocketProtocol",
                "printedName": "NEKit.RawTCPSocketProtocol",
                "usr": "s:5NEKit20RawTCPSocketProtocolP"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit20RawTCPSocketDelegateP17didDisconnectWith6socketyAA0bC8Protocol_p_tF",
            "mangledName": "$s5NEKit20RawTCPSocketDelegateP17didDisconnectWith6socketyAA0bC8Protocol_p_tF",
            "moduleName": "NEKit",
            "genericSig": "<τ_0_0 where τ_0_0 : NEKit.RawTCPSocketDelegate>",
            "sugared_genericSig": "<Self where Self : NEKit.RawTCPSocketDelegate>",
            "protocolReq": true,
            "declAttributes": [
              "RawDocComment"
            ],
            "reqNewWitnessTableEntry": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "didRead",
            "printedName": "didRead(data:from:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              },
              {
                "kind": "TypeNominal",
                "name": "RawTCPSocketProtocol",
                "printedName": "NEKit.RawTCPSocketProtocol",
                "usr": "s:5NEKit20RawTCPSocketProtocolP"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit20RawTCPSocketDelegateP7didRead4data4fromy10Foundation4DataV_AA0bC8Protocol_ptF",
            "mangledName": "$s5NEKit20RawTCPSocketDelegateP7didRead4data4fromy10Foundation4DataV_AA0bC8Protocol_ptF",
            "moduleName": "NEKit",
            "genericSig": "<τ_0_0 where τ_0_0 : NEKit.RawTCPSocketDelegate>",
            "sugared_genericSig": "<Self where Self : NEKit.RawTCPSocketDelegate>",
            "protocolReq": true,
            "declAttributes": [
              "RawDocComment"
            ],
            "reqNewWitnessTableEntry": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "didWrite",
            "printedName": "didWrite(data:by:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Foundation.Data?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Data",
                    "printedName": "Foundation.Data",
                    "usr": "s:10Foundation4DataV"
                  }
                ],
                "usr": "s:Sq"
              },
              {
                "kind": "TypeNominal",
                "name": "RawTCPSocketProtocol",
                "printedName": "NEKit.RawTCPSocketProtocol",
                "usr": "s:5NEKit20RawTCPSocketProtocolP"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit20RawTCPSocketDelegateP8didWrite4data2byy10Foundation4DataVSg_AA0bC8Protocol_ptF",
            "mangledName": "$s5NEKit20RawTCPSocketDelegateP8didWrite4data2byy10Foundation4DataVSg_AA0bC8Protocol_ptF",
            "moduleName": "NEKit",
            "genericSig": "<τ_0_0 where τ_0_0 : NEKit.RawTCPSocketDelegate>",
            "sugared_genericSig": "<Self where Self : NEKit.RawTCPSocketDelegate>",
            "protocolReq": true,
            "declAttributes": [
              "RawDocComment"
            ],
            "reqNewWitnessTableEntry": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "didConnectWith",
            "printedName": "didConnectWith(socket:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "RawTCPSocketProtocol",
                "printedName": "NEKit.RawTCPSocketProtocol",
                "usr": "s:5NEKit20RawTCPSocketProtocolP"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit20RawTCPSocketDelegateP14didConnectWith6socketyAA0bC8Protocol_p_tF",
            "mangledName": "$s5NEKit20RawTCPSocketDelegateP14didConnectWith6socketyAA0bC8Protocol_p_tF",
            "moduleName": "NEKit",
            "genericSig": "<τ_0_0 where τ_0_0 : NEKit.RawTCPSocketDelegate>",
            "sugared_genericSig": "<Self where Self : NEKit.RawTCPSocketDelegate>",
            "protocolReq": true,
            "declAttributes": [
              "RawDocComment"
            ],
            "reqNewWitnessTableEntry": true,
            "funcSelfKind": "NonMutating"
          }
        ],
        "declKind": "Protocol",
        "usr": "s:5NEKit20RawTCPSocketDelegateP",
        "mangledName": "$s5NEKit20RawTCPSocketDelegateP",
        "moduleName": "NEKit",
        "genericSig": "<τ_0_0 : AnyObject>",
        "sugared_genericSig": "<Self : AnyObject>",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "TypeDecl",
        "name": "SecureHTTPAdapterFactory",
        "printedName": "SecureHTTPAdapterFactory",
        "children": [
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(serverHost:serverPort:auth:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "SecureHTTPAdapterFactory",
                "printedName": "NEKit.SecureHTTPAdapterFactory",
                "usr": "s:5NEKit24SecureHTTPAdapterFactoryC"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              },
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "NEKit.HTTPAuthentication?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "HTTPAuthentication",
                    "printedName": "NEKit.HTTPAuthentication",
                    "usr": "s:5NEKit18HTTPAuthenticationV"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit24SecureHTTPAdapterFactoryC10serverHost0E4Port4authACSS_SiAA18HTTPAuthenticationVSgtcfc",
            "mangledName": "$s5NEKit24SecureHTTPAdapterFactoryC10serverHost0E4Port4authACSS_SiAA18HTTPAuthenticationVSgtcfc",
            "moduleName": "NEKit",
            "overriding": true,
            "declAttributes": [
              "AccessControl",
              "Required"
            ],
            "init_kind": "Designated"
          },
          {
            "kind": "Function",
            "name": "getAdapterFor",
            "printedName": "getAdapterFor(session:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "AdapterSocket",
                "printedName": "NEKit.AdapterSocket",
                "usr": "c:@M@NEKit@objc(cs)AdapterSocket"
              },
              {
                "kind": "TypeNominal",
                "name": "ConnectSession",
                "printedName": "NEKit.ConnectSession",
                "usr": "s:5NEKit14ConnectSessionC"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit24SecureHTTPAdapterFactoryC13getAdapterFor7sessionAA0F6SocketCAA14ConnectSessionC_tF",
            "mangledName": "$s5NEKit24SecureHTTPAdapterFactoryC13getAdapterFor7sessionAA0F6SocketCAA14ConnectSessionC_tF",
            "moduleName": "NEKit",
            "overriding": true,
            "isOpen": true,
            "declAttributes": [
              "AccessControl",
              "Override",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          }
        ],
        "declKind": "Class",
        "usr": "s:5NEKit24SecureHTTPAdapterFactoryC",
        "mangledName": "$s5NEKit24SecureHTTPAdapterFactoryC",
        "moduleName": "NEKit",
        "isOpen": true,
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "superclassUsr": "s:5NEKit18HTTPAdapterFactoryC",
        "inheritsConvenienceInitializers": true,
        "superclassNames": [
          "NEKit.HTTPAdapterFactory",
          "NEKit.HTTPAuthenticationAdapterFactory",
          "NEKit.ServerAdapterFactory",
          "NEKit.AdapterFactory"
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "TypeDecl",
        "name": "RejectAdapterFactory",
        "printedName": "RejectAdapterFactory",
        "children": [
          {
            "kind": "Var",
            "name": "delay",
            "printedName": "delay",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit20RejectAdapterFactoryC5delaySivp",
            "mangledName": "$s5NEKit20RejectAdapterFactoryC5delaySivp",
            "moduleName": "NEKit",
            "declAttributes": [
              "Final",
              "HasStorage",
              "AccessControl"
            ],
            "isLet": true,
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit20RejectAdapterFactoryC5delaySivg",
                "mangledName": "$s5NEKit20RejectAdapterFactoryC5delaySivg",
                "moduleName": "NEKit",
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(delay:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "RejectAdapterFactory",
                "printedName": "NEKit.RejectAdapterFactory",
                "usr": "s:5NEKit20RejectAdapterFactoryC"
              },
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "hasDefaultArg": true,
                "usr": "s:Si"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit20RejectAdapterFactoryC5delayACSi_tcfc",
            "mangledName": "$s5NEKit20RejectAdapterFactoryC5delayACSi_tcfc",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "init_kind": "Designated"
          },
          {
            "kind": "Function",
            "name": "getAdapterFor",
            "printedName": "getAdapterFor(session:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "AdapterSocket",
                "printedName": "NEKit.AdapterSocket",
                "usr": "c:@M@NEKit@objc(cs)AdapterSocket"
              },
              {
                "kind": "TypeNominal",
                "name": "ConnectSession",
                "printedName": "NEKit.ConnectSession",
                "usr": "s:5NEKit14ConnectSessionC"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit20RejectAdapterFactoryC03getC3For7sessionAA0C6SocketCAA14ConnectSessionC_tF",
            "mangledName": "$s5NEKit20RejectAdapterFactoryC03getC3For7sessionAA0C6SocketCAA14ConnectSessionC_tF",
            "moduleName": "NEKit",
            "overriding": true,
            "isOpen": true,
            "declAttributes": [
              "AccessControl",
              "Override"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "RejectAdapterFactory",
                "printedName": "NEKit.RejectAdapterFactory",
                "usr": "s:5NEKit20RejectAdapterFactoryC"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit20RejectAdapterFactoryCACycfc",
            "mangledName": "$s5NEKit20RejectAdapterFactoryCACycfc",
            "moduleName": "NEKit",
            "overriding": true,
            "implicit": true,
            "declAttributes": [
              "Override"
            ],
            "init_kind": "Designated"
          }
        ],
        "declKind": "Class",
        "usr": "s:5NEKit20RejectAdapterFactoryC",
        "mangledName": "$s5NEKit20RejectAdapterFactoryC",
        "moduleName": "NEKit",
        "isOpen": true,
        "declAttributes": [
          "AccessControl"
        ],
        "superclassUsr": "s:5NEKit14AdapterFactoryC",
        "superclassNames": [
          "NEKit.AdapterFactory"
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "TypeDecl",
        "name": "SpeedAdapter",
        "printedName": "SpeedAdapter",
        "children": [
          {
            "kind": "Var",
            "name": "adapters",
            "printedName": "adapters",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "ImplicitlyUnwrappedOptional",
                "printedName": "[(NEKit.AdapterSocket, Swift.Int)]?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Array",
                    "printedName": "[(NEKit.AdapterSocket, Swift.Int)]",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Tuple",
                        "printedName": "(NEKit.AdapterSocket, Swift.Int)",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "AdapterSocket",
                            "printedName": "NEKit.AdapterSocket",
                            "usr": "c:@M@NEKit@objc(cs)AdapterSocket"
                          },
                          {
                            "kind": "TypeNominal",
                            "name": "Int",
                            "printedName": "Swift.Int",
                            "usr": "s:Si"
                          }
                        ]
                      }
                    ],
                    "usr": "s:Sa"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit12SpeedAdapterC8adaptersSayAA0C6SocketC_SitGSgvp",
            "mangledName": "$s5NEKit12SpeedAdapterC8adaptersSayAA0C6SocketC_SitGSgvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "HasInitialValue",
              "HasStorage",
              "AccessControl"
            ],
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "ImplicitlyUnwrappedOptional",
                    "printedName": "[(NEKit.AdapterSocket, Swift.Int)]?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Array",
                        "printedName": "[(NEKit.AdapterSocket, Swift.Int)]",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "Tuple",
                            "printedName": "(NEKit.AdapterSocket, Swift.Int)",
                            "children": [
                              {
                                "kind": "TypeNominal",
                                "name": "AdapterSocket",
                                "printedName": "NEKit.AdapterSocket",
                                "usr": "c:@M@NEKit@objc(cs)AdapterSocket"
                              },
                              {
                                "kind": "TypeNominal",
                                "name": "Int",
                                "printedName": "Swift.Int",
                                "usr": "s:Si"
                              }
                            ]
                          }
                        ],
                        "usr": "s:Sa"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit12SpeedAdapterC8adaptersSayAA0C6SocketC_SitGSgvg",
                "mangledName": "$s5NEKit12SpeedAdapterC8adaptersSayAA0C6SocketC_SitGSgvg",
                "moduleName": "NEKit",
                "implicit": true,
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "ImplicitlyUnwrappedOptional",
                    "printedName": "[(NEKit.AdapterSocket, Swift.Int)]?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Array",
                        "printedName": "[(NEKit.AdapterSocket, Swift.Int)]",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "Tuple",
                            "printedName": "(NEKit.AdapterSocket, Swift.Int)",
                            "children": [
                              {
                                "kind": "TypeNominal",
                                "name": "AdapterSocket",
                                "printedName": "NEKit.AdapterSocket",
                                "usr": "c:@M@NEKit@objc(cs)AdapterSocket"
                              },
                              {
                                "kind": "TypeNominal",
                                "name": "Int",
                                "printedName": "Swift.Int",
                                "usr": "s:Si"
                              }
                            ]
                          }
                        ],
                        "usr": "s:Sa"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit12SpeedAdapterC8adaptersSayAA0C6SocketC_SitGSgvs",
                "mangledName": "$s5NEKit12SpeedAdapterC8adaptersSayAA0C6SocketC_SitGSgvs",
                "moduleName": "NEKit",
                "implicit": true,
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit12SpeedAdapterC8adaptersSayAA0C6SocketC_SitGSgvM",
                "mangledName": "$s5NEKit12SpeedAdapterC8adaptersSayAA0C6SocketC_SitGSgvM",
                "moduleName": "NEKit",
                "implicit": true,
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Function",
            "name": "openSocketWith",
            "printedName": "openSocketWith(session:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "ConnectSession",
                "printedName": "NEKit.ConnectSession",
                "usr": "s:5NEKit14ConnectSessionC"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit12SpeedAdapterC14openSocketWith7sessionyAA14ConnectSessionC_tF",
            "mangledName": "$s5NEKit12SpeedAdapterC14openSocketWith7sessionyAA14ConnectSessionC_tF",
            "moduleName": "NEKit",
            "overriding": true,
            "declAttributes": [
              "AccessControl",
              "Override"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "disconnect",
            "printedName": "disconnect(becauseOf:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Swift.Error?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Error",
                    "printedName": "Swift.Error",
                    "usr": "s:s5ErrorP"
                  }
                ],
                "hasDefaultArg": true,
                "usr": "s:Sq"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit12SpeedAdapterC10disconnect9becauseOfys5Error_pSg_tF",
            "mangledName": "$s5NEKit12SpeedAdapterC10disconnect9becauseOfys5Error_pSg_tF",
            "moduleName": "NEKit",
            "overriding": true,
            "declAttributes": [
              "AccessControl",
              "Override"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "forceDisconnect",
            "printedName": "forceDisconnect(becauseOf:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Swift.Error?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Error",
                    "printedName": "Swift.Error",
                    "usr": "s:s5ErrorP"
                  }
                ],
                "hasDefaultArg": true,
                "usr": "s:Sq"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit12SpeedAdapterC15forceDisconnect9becauseOfys5Error_pSg_tF",
            "mangledName": "$s5NEKit12SpeedAdapterC15forceDisconnect9becauseOfys5Error_pSg_tF",
            "moduleName": "NEKit",
            "overriding": true,
            "declAttributes": [
              "AccessControl",
              "Override"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "didBecomeReadyToForwardWith",
            "printedName": "didBecomeReadyToForwardWith(socket:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "SocketProtocol",
                "printedName": "NEKit.SocketProtocol",
                "usr": "s:5NEKit14SocketProtocolP"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit12SpeedAdapterC27didBecomeReadyToForwardWith6socketyAA14SocketProtocol_p_tF",
            "mangledName": "$s5NEKit12SpeedAdapterC27didBecomeReadyToForwardWith6socketyAA14SocketProtocol_p_tF",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "didDisconnectWith",
            "printedName": "didDisconnectWith(socket:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "SocketProtocol",
                "printedName": "NEKit.SocketProtocol",
                "usr": "s:5NEKit14SocketProtocolP"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit12SpeedAdapterC17didDisconnectWith6socketyAA14SocketProtocol_p_tF",
            "mangledName": "$s5NEKit12SpeedAdapterC17didDisconnectWith6socketyAA14SocketProtocol_p_tF",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "didConnectWith",
            "printedName": "didConnectWith(adapterSocket:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "AdapterSocket",
                "printedName": "NEKit.AdapterSocket",
                "usr": "c:@M@NEKit@objc(cs)AdapterSocket"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit12SpeedAdapterC14didConnectWith13adapterSocketyAA0cH0C_tF",
            "mangledName": "$s5NEKit12SpeedAdapterC14didConnectWith13adapterSocketyAA0cH0C_tF",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "didWrite",
            "printedName": "didWrite(data:by:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Foundation.Data?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Data",
                    "printedName": "Foundation.Data",
                    "usr": "s:10Foundation4DataV"
                  }
                ],
                "usr": "s:Sq"
              },
              {
                "kind": "TypeNominal",
                "name": "SocketProtocol",
                "printedName": "NEKit.SocketProtocol",
                "usr": "s:5NEKit14SocketProtocolP"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit12SpeedAdapterC8didWrite4data2byy10Foundation4DataVSg_AA14SocketProtocol_ptF",
            "mangledName": "$s5NEKit12SpeedAdapterC8didWrite4data2byy10Foundation4DataVSg_AA14SocketProtocol_ptF",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "didRead",
            "printedName": "didRead(data:from:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              },
              {
                "kind": "TypeNominal",
                "name": "SocketProtocol",
                "printedName": "NEKit.SocketProtocol",
                "usr": "s:5NEKit14SocketProtocolP"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit12SpeedAdapterC7didRead4data4fromy10Foundation4DataV_AA14SocketProtocol_ptF",
            "mangledName": "$s5NEKit12SpeedAdapterC7didRead4data4fromy10Foundation4DataV_AA14SocketProtocol_ptF",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "updateAdapterWith",
            "printedName": "updateAdapterWith(newAdapter:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "AdapterSocket",
                "printedName": "NEKit.AdapterSocket",
                "usr": "c:@M@NEKit@objc(cs)AdapterSocket"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit12SpeedAdapterC06updateC4With03newC0yAA0C6SocketC_tF",
            "mangledName": "$s5NEKit12SpeedAdapterC06updateC4With03newC0yAA0C6SocketC_tF",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "didReceive",
            "printedName": "didReceive(session:from:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "ConnectSession",
                "printedName": "NEKit.ConnectSession",
                "usr": "s:5NEKit14ConnectSessionC"
              },
              {
                "kind": "TypeNominal",
                "name": "ProxySocket",
                "printedName": "NEKit.ProxySocket",
                "usr": "c:@M@NEKit@objc(cs)ProxySocket"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit12SpeedAdapterC10didReceive7session4fromyAA14ConnectSessionC_AA11ProxySocketCtF",
            "mangledName": "$s5NEKit12SpeedAdapterC10didReceive7session4fromyAA14ConnectSessionC_AA11ProxySocketCtF",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(observe:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "SpeedAdapter",
                "printedName": "NEKit.SpeedAdapter",
                "usr": "c:@M@NEKit@objc(cs)SpeedAdapter"
              },
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "hasDefaultArg": true,
                "usr": "s:Sb"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit12SpeedAdapterC7observeACSb_tcfc",
            "mangledName": "$s5NEKit12SpeedAdapterC7observeACSb_tcfc",
            "moduleName": "NEKit",
            "overriding": true,
            "implicit": true,
            "declAttributes": [
              "Override"
            ],
            "init_kind": "Designated"
          }
        ],
        "declKind": "Class",
        "usr": "c:@M@NEKit@objc(cs)SpeedAdapter",
        "mangledName": "$s5NEKit12SpeedAdapterC",
        "moduleName": "NEKit",
        "declAttributes": [
          "AccessControl",
          "RawDocComment",
          "ObjC"
        ],
        "superclassUsr": "c:@M@NEKit@objc(cs)AdapterSocket",
        "inheritsConvenienceInitializers": true,
        "superclassNames": [
          "NEKit.AdapterSocket",
          "ObjectiveC.NSObject"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "SocketDelegate",
            "printedName": "SocketDelegate",
            "usr": "s:5NEKit14SocketDelegateP",
            "mangledName": "$s5NEKit14SocketDelegateP"
          },
          {
            "kind": "Conformance",
            "name": "SocketProtocol",
            "printedName": "SocketProtocol",
            "usr": "s:5NEKit14SocketProtocolP",
            "mangledName": "$s5NEKit14SocketProtocolP"
          },
          {
            "kind": "Conformance",
            "name": "RawTCPSocketDelegate",
            "printedName": "RawTCPSocketDelegate",
            "usr": "s:5NEKit20RawTCPSocketDelegateP",
            "mangledName": "$s5NEKit20RawTCPSocketDelegateP"
          },
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "CVarArg",
            "printedName": "CVarArg",
            "usr": "s:s7CVarArgP",
            "mangledName": "$ss7CVarArgP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObservingPublishing",
            "printedName": "_KeyValueCodingAndObservingPublishing",
            "usr": "s:10Foundation37_KeyValueCodingAndObservingPublishingP",
            "mangledName": "$s10Foundation37_KeyValueCodingAndObservingPublishingP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObserving",
            "printedName": "_KeyValueCodingAndObserving",
            "usr": "s:10Foundation27_KeyValueCodingAndObservingP",
            "mangledName": "$s10Foundation27_KeyValueCodingAndObservingP"
          },
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "CustomDebugStringConvertible",
            "printedName": "CustomDebugStringConvertible",
            "usr": "s:s28CustomDebugStringConvertibleP",
            "mangledName": "$ss28CustomDebugStringConvertibleP"
          }
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "TypeDecl",
        "name": "HTTPAuthenticationAdapterFactory",
        "printedName": "HTTPAuthenticationAdapterFactory",
        "children": [
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(serverHost:serverPort:auth:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "HTTPAuthenticationAdapterFactory",
                "printedName": "NEKit.HTTPAuthenticationAdapterFactory",
                "usr": "s:5NEKit32HTTPAuthenticationAdapterFactoryC"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              },
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "NEKit.HTTPAuthentication?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "HTTPAuthentication",
                    "printedName": "NEKit.HTTPAuthentication",
                    "usr": "s:5NEKit18HTTPAuthenticationV"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit32HTTPAuthenticationAdapterFactoryC10serverHost0E4Port4authACSS_SiAA0B0VSgtcfc",
            "mangledName": "$s5NEKit32HTTPAuthenticationAdapterFactoryC10serverHost0E4Port4authACSS_SiAA0B0VSgtcfc",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl",
              "Required"
            ],
            "init_kind": "Designated"
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(serverHost:serverPort:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "HTTPAuthenticationAdapterFactory",
                "printedName": "NEKit.HTTPAuthenticationAdapterFactory",
                "usr": "s:5NEKit32HTTPAuthenticationAdapterFactoryC"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              },
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit32HTTPAuthenticationAdapterFactoryC10serverHost0E4PortACSS_Sitcfc",
            "mangledName": "$s5NEKit32HTTPAuthenticationAdapterFactoryC10serverHost0E4PortACSS_Sitcfc",
            "moduleName": "NEKit",
            "overriding": true,
            "implicit": true,
            "declAttributes": [
              "Override"
            ],
            "init_kind": "Designated"
          }
        ],
        "declKind": "Class",
        "usr": "s:5NEKit32HTTPAuthenticationAdapterFactoryC",
        "mangledName": "$s5NEKit32HTTPAuthenticationAdapterFactoryC",
        "moduleName": "NEKit",
        "isOpen": true,
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "superclassUsr": "s:5NEKit20ServerAdapterFactoryC",
        "superclassNames": [
          "NEKit.ServerAdapterFactory",
          "NEKit.AdapterFactory"
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "TypeDecl",
        "name": "AdapterFactoryManager",
        "printedName": "AdapterFactoryManager",
        "children": [
          {
            "kind": "Subscript",
            "name": "subscript",
            "printedName": "subscript(_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "NEKit.AdapterFactory?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "AdapterFactory",
                    "printedName": "NEKit.AdapterFactory",
                    "usr": "s:5NEKit14AdapterFactoryC"
                  }
                ],
                "usr": "s:Sq"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Subscript",
            "usr": "s:5NEKit21AdapterFactoryManagerCyAA0bC0CSgSScip",
            "mangledName": "$s5NEKit21AdapterFactoryManagerCyAA0bC0CSgSScip",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "NEKit.AdapterFactory?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "AdapterFactory",
                        "printedName": "NEKit.AdapterFactory",
                        "usr": "s:5NEKit14AdapterFactoryC"
                      }
                    ],
                    "usr": "s:Sq"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit21AdapterFactoryManagerCyAA0bC0CSgSScig",
                "mangledName": "$s5NEKit21AdapterFactoryManagerCyAA0bC0CSgSScig",
                "moduleName": "NEKit",
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "NEKit.AdapterFactory?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "AdapterFactory",
                        "printedName": "NEKit.AdapterFactory",
                        "usr": "s:5NEKit14AdapterFactoryC"
                      }
                    ],
                    "usr": "s:Sq"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit21AdapterFactoryManagerCyAA0bC0CSgSScis",
                "mangledName": "$s5NEKit21AdapterFactoryManagerCyAA0bC0CSgSScis",
                "moduleName": "NEKit",
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit21AdapterFactoryManagerCyAA0bC0CSgSSciM",
                "mangledName": "$s5NEKit21AdapterFactoryManagerCyAA0bC0CSgSSciM",
                "moduleName": "NEKit",
                "implicit": true,
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(factoryDict:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "AdapterFactoryManager",
                "printedName": "NEKit.AdapterFactoryManager",
                "usr": "s:5NEKit21AdapterFactoryManagerC"
              },
              {
                "kind": "TypeNominal",
                "name": "Dictionary",
                "printedName": "[Swift.String : NEKit.AdapterFactory]",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "AdapterFactory",
                    "printedName": "NEKit.AdapterFactory",
                    "usr": "s:5NEKit14AdapterFactoryC"
                  }
                ],
                "usr": "s:SD"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit21AdapterFactoryManagerC11factoryDictACSDySSAA0bC0CG_tcfc",
            "mangledName": "$s5NEKit21AdapterFactoryManagerC11factoryDictACSDySSAA0bC0CG_tcfc",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "init_kind": "Designated"
          }
        ],
        "declKind": "Class",
        "usr": "s:5NEKit21AdapterFactoryManagerC",
        "mangledName": "$s5NEKit21AdapterFactoryManagerC",
        "moduleName": "NEKit",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "Import",
        "name": "NetworkExtension",
        "printedName": "NetworkExtension",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "TypeDecl",
        "name": "SocketBaseType",
        "printedName": "SocketBaseType",
        "children": [
          {
            "kind": "Var",
            "name": "nw",
            "printedName": "nw",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.SocketBaseType.Type) -> NEKit.SocketBaseType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SocketBaseType",
                    "printedName": "NEKit.SocketBaseType",
                    "usr": "s:5NEKit14SocketBaseTypeO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.SocketBaseType.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "SocketBaseType",
                        "printedName": "NEKit.SocketBaseType",
                        "usr": "s:5NEKit14SocketBaseTypeO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit14SocketBaseTypeO2nwyA2CmF",
            "mangledName": "$s5NEKit14SocketBaseTypeO2nwyA2CmF",
            "moduleName": "NEKit"
          },
          {
            "kind": "Var",
            "name": "gcd",
            "printedName": "gcd",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.SocketBaseType.Type) -> NEKit.SocketBaseType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SocketBaseType",
                    "printedName": "NEKit.SocketBaseType",
                    "usr": "s:5NEKit14SocketBaseTypeO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.SocketBaseType.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "SocketBaseType",
                        "printedName": "NEKit.SocketBaseType",
                        "usr": "s:5NEKit14SocketBaseTypeO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit14SocketBaseTypeO3gcdyA2CmF",
            "mangledName": "$s5NEKit14SocketBaseTypeO3gcdyA2CmF",
            "moduleName": "NEKit"
          },
          {
            "kind": "Function",
            "name": "==",
            "printedName": "==(_:_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              },
              {
                "kind": "TypeNominal",
                "name": "SocketBaseType",
                "printedName": "NEKit.SocketBaseType",
                "usr": "s:5NEKit14SocketBaseTypeO"
              },
              {
                "kind": "TypeNominal",
                "name": "SocketBaseType",
                "printedName": "NEKit.SocketBaseType",
                "usr": "s:5NEKit14SocketBaseTypeO"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit14SocketBaseTypeO2eeoiySbAC_ACtFZ",
            "mangledName": "$s5NEKit14SocketBaseTypeO2eeoiySbAC_ACtFZ",
            "moduleName": "NEKit",
            "static": true,
            "implicit": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Var",
            "name": "hashValue",
            "printedName": "hashValue",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit14SocketBaseTypeO9hashValueSivp",
            "mangledName": "$s5NEKit14SocketBaseTypeO9hashValueSivp",
            "moduleName": "NEKit",
            "implicit": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit14SocketBaseTypeO9hashValueSivg",
                "mangledName": "$s5NEKit14SocketBaseTypeO9hashValueSivg",
                "moduleName": "NEKit",
                "implicit": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Function",
            "name": "hash",
            "printedName": "hash(into:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Hasher",
                "printedName": "Swift.Hasher",
                "paramValueOwnership": "InOut",
                "usr": "s:s6HasherV"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit14SocketBaseTypeO4hash4intoys6HasherVz_tF",
            "mangledName": "$s5NEKit14SocketBaseTypeO4hash4intoys6HasherVz_tF",
            "moduleName": "NEKit",
            "implicit": true,
            "funcSelfKind": "NonMutating"
          }
        ],
        "declKind": "Enum",
        "usr": "s:5NEKit14SocketBaseTypeO",
        "mangledName": "$s5NEKit14SocketBaseTypeO",
        "moduleName": "NEKit",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          }
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "RawSocketFactory",
        "printedName": "RawSocketFactory",
        "children": [
          {
            "kind": "Var",
            "name": "TunnelProvider",
            "printedName": "TunnelProvider",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "WeakStorage",
                "printedName": "NetworkExtension.NETunnelProvider?"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit16RawSocketFactoryC14TunnelProviderSo08NETunnelF0CSgvpZ",
            "mangledName": "$s5NEKit16RawSocketFactoryC14TunnelProviderSo08NETunnelF0CSgvpZ",
            "moduleName": "NEKit",
            "static": true,
            "declAttributes": [
              "HasInitialValue",
              "Final",
              "HasStorage",
              "ReferenceOwnership",
              "AccessControl",
              "RawDocComment"
            ],
            "ownership": 1,
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "NetworkExtension.NETunnelProvider?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "NETunnelProvider",
                        "printedName": "NetworkExtension.NETunnelProvider",
                        "usr": "c:objc(cs)NETunnelProvider"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit16RawSocketFactoryC14TunnelProviderSo08NETunnelF0CSgvgZ",
                "mangledName": "$s5NEKit16RawSocketFactoryC14TunnelProviderSo08NETunnelF0CSgvgZ",
                "moduleName": "NEKit",
                "static": true,
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "NetworkExtension.NETunnelProvider?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "NETunnelProvider",
                        "printedName": "NetworkExtension.NETunnelProvider",
                        "usr": "c:objc(cs)NETunnelProvider"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit16RawSocketFactoryC14TunnelProviderSo08NETunnelF0CSgvsZ",
                "mangledName": "$s5NEKit16RawSocketFactoryC14TunnelProviderSo08NETunnelF0CSgvsZ",
                "moduleName": "NEKit",
                "static": true,
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit16RawSocketFactoryC14TunnelProviderSo08NETunnelF0CSgvMZ",
                "mangledName": "$s5NEKit16RawSocketFactoryC14TunnelProviderSo08NETunnelF0CSgvMZ",
                "moduleName": "NEKit",
                "static": true,
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Function",
            "name": "getRawSocket",
            "printedName": "getRawSocket(_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "RawTCPSocketProtocol",
                "printedName": "NEKit.RawTCPSocketProtocol",
                "usr": "s:5NEKit20RawTCPSocketProtocolP"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "NEKit.SocketBaseType?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SocketBaseType",
                    "printedName": "NEKit.SocketBaseType",
                    "usr": "s:5NEKit14SocketBaseTypeO"
                  }
                ],
                "hasDefaultArg": true,
                "usr": "s:Sq"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit16RawSocketFactoryC03getbC0yAA0B17TCPSocketProtocol_pAA0C8BaseTypeOSgFZ",
            "mangledName": "$s5NEKit16RawSocketFactoryC03getbC0yAA0B17TCPSocketProtocol_pAA0C8BaseTypeOSgFZ",
            "moduleName": "NEKit",
            "static": true,
            "declAttributes": [
              "Final",
              "AccessControl",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          }
        ],
        "declKind": "Class",
        "usr": "s:5NEKit16RawSocketFactoryC",
        "mangledName": "$s5NEKit16RawSocketFactoryC",
        "moduleName": "NEKit",
        "isOpen": true,
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "hasMissingDesignatedInitializers": true
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "NEKit",
        "declAttributes": [
          "RawDocComment"
        ]
      },
      {
        "kind": "Import",
        "name": "UserNotifications",
        "printedName": "UserNotifications",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "Import",
        "name": "CocoaLumberjackSwift",
        "printedName": "CocoaLumberjackSwift",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "TypeDecl",
        "name": "ObserverFactory",
        "printedName": "ObserverFactory",
        "children": [
          {
            "kind": "Var",
            "name": "currentFactory",
            "printedName": "currentFactory",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "NEKit.ObserverFactory?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "ObserverFactory",
                    "printedName": "NEKit.ObserverFactory",
                    "usr": "s:5NEKit15ObserverFactoryC"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit15ObserverFactoryC07currentC0ACSgvpZ",
            "mangledName": "$s5NEKit15ObserverFactoryC07currentC0ACSgvpZ",
            "moduleName": "NEKit",
            "static": true,
            "declAttributes": [
              "HasInitialValue",
              "Final",
              "HasStorage",
              "AccessControl"
            ],
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "NEKit.ObserverFactory?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "ObserverFactory",
                        "printedName": "NEKit.ObserverFactory",
                        "usr": "s:5NEKit15ObserverFactoryC"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit15ObserverFactoryC07currentC0ACSgvgZ",
                "mangledName": "$s5NEKit15ObserverFactoryC07currentC0ACSgvgZ",
                "moduleName": "NEKit",
                "static": true,
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "NEKit.ObserverFactory?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "ObserverFactory",
                        "printedName": "NEKit.ObserverFactory",
                        "usr": "s:5NEKit15ObserverFactoryC"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit15ObserverFactoryC07currentC0ACSgvsZ",
                "mangledName": "$s5NEKit15ObserverFactoryC07currentC0ACSgvsZ",
                "moduleName": "NEKit",
                "static": true,
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit15ObserverFactoryC07currentC0ACSgvMZ",
                "mangledName": "$s5NEKit15ObserverFactoryC07currentC0ACSgvMZ",
                "moduleName": "NEKit",
                "static": true,
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "ObserverFactory",
                "printedName": "NEKit.ObserverFactory",
                "usr": "s:5NEKit15ObserverFactoryC"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit15ObserverFactoryCACycfc",
            "mangledName": "$s5NEKit15ObserverFactoryCACycfc",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "init_kind": "Designated"
          },
          {
            "kind": "Function",
            "name": "getObserverForTunnel",
            "printedName": "getObserverForTunnel(_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "NEKit.Observer<NEKit.TunnelEvent>?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Observer",
                    "printedName": "NEKit.Observer<NEKit.TunnelEvent>",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "TunnelEvent",
                        "printedName": "NEKit.TunnelEvent",
                        "usr": "s:5NEKit11TunnelEventO"
                      }
                    ],
                    "usr": "s:5NEKit8ObserverC"
                  }
                ],
                "usr": "s:Sq"
              },
              {
                "kind": "TypeNominal",
                "name": "Tunnel",
                "printedName": "NEKit.Tunnel",
                "usr": "c:@M@NEKit@objc(cs)Tunnel"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit15ObserverFactoryC03getB9ForTunnelyAA0B0CyAA0F5EventOGSgAA0F0CF",
            "mangledName": "$s5NEKit15ObserverFactoryC03getB9ForTunnelyAA0B0CyAA0F5EventOGSgAA0F0CF",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "AccessControl"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "getObserverForAdapterSocket",
            "printedName": "getObserverForAdapterSocket(_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "NEKit.Observer<NEKit.AdapterSocketEvent>?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Observer",
                    "printedName": "NEKit.Observer<NEKit.AdapterSocketEvent>",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "AdapterSocketEvent",
                        "printedName": "NEKit.AdapterSocketEvent",
                        "usr": "s:5NEKit18AdapterSocketEventO"
                      }
                    ],
                    "usr": "s:5NEKit8ObserverC"
                  }
                ],
                "usr": "s:Sq"
              },
              {
                "kind": "TypeNominal",
                "name": "AdapterSocket",
                "printedName": "NEKit.AdapterSocket",
                "usr": "c:@M@NEKit@objc(cs)AdapterSocket"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit15ObserverFactoryC03getB16ForAdapterSocketyAA0B0CyAA0fG5EventOGSgAA0fG0CF",
            "mangledName": "$s5NEKit15ObserverFactoryC03getB16ForAdapterSocketyAA0B0CyAA0fG5EventOGSgAA0fG0CF",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "AccessControl"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "getObserverForProxySocket",
            "printedName": "getObserverForProxySocket(_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "NEKit.Observer<NEKit.ProxySocketEvent>?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Observer",
                    "printedName": "NEKit.Observer<NEKit.ProxySocketEvent>",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "ProxySocketEvent",
                        "printedName": "NEKit.ProxySocketEvent",
                        "usr": "s:5NEKit16ProxySocketEventO"
                      }
                    ],
                    "usr": "s:5NEKit8ObserverC"
                  }
                ],
                "usr": "s:Sq"
              },
              {
                "kind": "TypeNominal",
                "name": "ProxySocket",
                "printedName": "NEKit.ProxySocket",
                "usr": "c:@M@NEKit@objc(cs)ProxySocket"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit15ObserverFactoryC03getB14ForProxySocketyAA0B0CyAA0fG5EventOGSgAA0fG0CF",
            "mangledName": "$s5NEKit15ObserverFactoryC03getB14ForProxySocketyAA0B0CyAA0fG5EventOGSgAA0fG0CF",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "AccessControl"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "getObserverForProxyServer",
            "printedName": "getObserverForProxyServer(_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "NEKit.Observer<NEKit.ProxyServerEvent>?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Observer",
                    "printedName": "NEKit.Observer<NEKit.ProxyServerEvent>",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "ProxyServerEvent",
                        "printedName": "NEKit.ProxyServerEvent",
                        "usr": "s:5NEKit16ProxyServerEventO"
                      }
                    ],
                    "usr": "s:5NEKit8ObserverC"
                  }
                ],
                "usr": "s:Sq"
              },
              {
                "kind": "TypeNominal",
                "name": "ProxyServer",
                "printedName": "NEKit.ProxyServer",
                "usr": "c:@M@NEKit@objc(cs)ProxyServer"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit15ObserverFactoryC03getB14ForProxyServeryAA0B0CyAA0fG5EventOGSgAA0fG0CF",
            "mangledName": "$s5NEKit15ObserverFactoryC03getB14ForProxyServeryAA0B0CyAA0fG5EventOGSgAA0fG0CF",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "AccessControl"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "getObserverForRuleManager",
            "printedName": "getObserverForRuleManager(_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "NEKit.Observer<NEKit.RuleMatchEvent>?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Observer",
                    "printedName": "NEKit.Observer<NEKit.RuleMatchEvent>",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "RuleMatchEvent",
                        "printedName": "NEKit.RuleMatchEvent",
                        "usr": "s:5NEKit14RuleMatchEventO"
                      }
                    ],
                    "usr": "s:5NEKit8ObserverC"
                  }
                ],
                "usr": "s:Sq"
              },
              {
                "kind": "TypeNominal",
                "name": "RuleManager",
                "printedName": "NEKit.RuleManager",
                "usr": "s:5NEKit11RuleManagerC"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit15ObserverFactoryC03getB14ForRuleManageryAA0B0CyAA0F10MatchEventOGSgAA0fG0CF",
            "mangledName": "$s5NEKit15ObserverFactoryC03getB14ForRuleManageryAA0B0CyAA0F10MatchEventOGSgAA0fG0CF",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "AccessControl"
            ],
            "funcSelfKind": "NonMutating"
          }
        ],
        "declKind": "Class",
        "usr": "s:5NEKit15ObserverFactoryC",
        "mangledName": "$s5NEKit15ObserverFactoryC",
        "moduleName": "NEKit",
        "isOpen": true,
        "declAttributes": [
          "AccessControl"
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "TypeDecl",
        "name": "Observer",
        "printedName": "Observer",
        "children": [
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Observer",
                "printedName": "NEKit.Observer<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:5NEKit8ObserverC"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit8ObserverCACyxGycfc",
            "mangledName": "$s5NEKit8ObserverCACyxGycfc",
            "moduleName": "NEKit",
            "genericSig": "<τ_0_0 where τ_0_0 : NEKit.EventType>",
            "sugared_genericSig": "<T where T : NEKit.EventType>",
            "declAttributes": [
              "AccessControl"
            ],
            "init_kind": "Designated"
          },
          {
            "kind": "Function",
            "name": "signal",
            "printedName": "signal(_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit8ObserverC6signalyyxF",
            "mangledName": "$s5NEKit8ObserverC6signalyyxF",
            "moduleName": "NEKit",
            "genericSig": "<τ_0_0 where τ_0_0 : NEKit.EventType>",
            "sugared_genericSig": "<T where T : NEKit.EventType>",
            "isOpen": true,
            "declAttributes": [
              "AccessControl"
            ],
            "funcSelfKind": "NonMutating"
          }
        ],
        "declKind": "Class",
        "usr": "s:5NEKit8ObserverC",
        "mangledName": "$s5NEKit8ObserverC",
        "moduleName": "NEKit",
        "genericSig": "<τ_0_0 where τ_0_0 : NEKit.EventType>",
        "sugared_genericSig": "<T where T : NEKit.EventType>",
        "isOpen": true,
        "declAttributes": [
          "AccessControl"
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "TypeDecl",
        "name": "SecureHTTPAdapter",
        "printedName": "SecureHTTPAdapter",
        "children": [
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(serverHost:serverPort:auth:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "SecureHTTPAdapter",
                "printedName": "NEKit.SecureHTTPAdapter",
                "usr": "c:@M@NEKit@objc(cs)SecureHTTPAdapter"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              },
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "NEKit.HTTPAuthentication?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "HTTPAuthentication",
                    "printedName": "NEKit.HTTPAuthentication",
                    "usr": "s:5NEKit18HTTPAuthenticationV"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit17SecureHTTPAdapterC10serverHost0D4Port4authACSS_SiAA18HTTPAuthenticationVSgtcfc",
            "mangledName": "$s5NEKit17SecureHTTPAdapterC10serverHost0D4Port4authACSS_SiAA18HTTPAuthenticationVSgtcfc",
            "moduleName": "NEKit",
            "overriding": true,
            "declAttributes": [
              "AccessControl",
              "Override"
            ],
            "init_kind": "Designated"
          }
        ],
        "declKind": "Class",
        "usr": "c:@M@NEKit@objc(cs)SecureHTTPAdapter",
        "mangledName": "$s5NEKit17SecureHTTPAdapterC",
        "moduleName": "NEKit",
        "declAttributes": [
          "AccessControl",
          "RawDocComment",
          "ObjC"
        ],
        "superclassUsr": "c:@M@NEKit@objc(cs)HTTPAdapter",
        "inheritsConvenienceInitializers": true,
        "superclassNames": [
          "NEKit.HTTPAdapter",
          "NEKit.AdapterSocket",
          "ObjectiveC.NSObject"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "SocketProtocol",
            "printedName": "SocketProtocol",
            "usr": "s:5NEKit14SocketProtocolP",
            "mangledName": "$s5NEKit14SocketProtocolP"
          },
          {
            "kind": "Conformance",
            "name": "RawTCPSocketDelegate",
            "printedName": "RawTCPSocketDelegate",
            "usr": "s:5NEKit20RawTCPSocketDelegateP",
            "mangledName": "$s5NEKit20RawTCPSocketDelegateP"
          },
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "CVarArg",
            "printedName": "CVarArg",
            "usr": "s:s7CVarArgP",
            "mangledName": "$ss7CVarArgP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObservingPublishing",
            "printedName": "_KeyValueCodingAndObservingPublishing",
            "usr": "s:10Foundation37_KeyValueCodingAndObservingPublishingP",
            "mangledName": "$s10Foundation37_KeyValueCodingAndObservingPublishingP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObserving",
            "printedName": "_KeyValueCodingAndObserving",
            "usr": "s:10Foundation27_KeyValueCodingAndObservingP",
            "mangledName": "$s10Foundation27_KeyValueCodingAndObservingP"
          },
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "CustomDebugStringConvertible",
            "printedName": "CustomDebugStringConvertible",
            "usr": "s:s28CustomDebugStringConvertibleP",
            "mangledName": "$ss28CustomDebugStringConvertibleP"
          }
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "Import",
        "name": "CocoaAsyncSocket",
        "printedName": "CocoaAsyncSocket",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "TypeDecl",
        "name": "GCDProxyServer",
        "printedName": "GCDProxyServer",
        "children": [
          {
            "kind": "Function",
            "name": "start",
            "printedName": "start()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit14GCDProxyServerC5startyyKF",
            "mangledName": "$s5NEKit14GCDProxyServerC5startyyKF",
            "moduleName": "NEKit",
            "overriding": true,
            "isOpen": true,
            "declAttributes": [
              "AccessControl",
              "Override",
              "RawDocComment"
            ],
            "throwing": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "stop",
            "printedName": "stop()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit14GCDProxyServerC4stopyyF",
            "mangledName": "$s5NEKit14GCDProxyServerC4stopyyF",
            "moduleName": "NEKit",
            "overriding": true,
            "isOpen": true,
            "declAttributes": [
              "AccessControl",
              "Override",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "handleNewGCDSocket",
            "printedName": "handleNewGCDSocket(_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "GCDTCPSocket",
                "printedName": "NEKit.GCDTCPSocket",
                "usr": "c:@M@NEKit@objc(cs)GCDTCPSocket"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit14GCDProxyServerC18handleNewGCDSocketyyAA12GCDTCPSocketCF",
            "mangledName": "$s5NEKit14GCDProxyServerC18handleNewGCDSocketyyAA12GCDTCPSocketCF",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "socket",
            "printedName": "socket(_:didAcceptNewSocket:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "GCDAsyncSocket",
                "printedName": "CocoaAsyncSocket.GCDAsyncSocket",
                "usr": "c:objc(cs)GCDAsyncSocket"
              },
              {
                "kind": "TypeNominal",
                "name": "GCDAsyncSocket",
                "printedName": "CocoaAsyncSocket.GCDAsyncSocket",
                "usr": "c:objc(cs)GCDAsyncSocket"
              }
            ],
            "declKind": "Func",
            "usr": "c:@M@NEKit@objc(cs)GCDProxyServer(im)socket:didAcceptNewSocket:",
            "mangledName": "$s5NEKit14GCDProxyServerC6socket_18didAcceptNewSocketySo08GCDAsyncH0C_AGtF",
            "moduleName": "NEKit",
            "isOpen": true,
            "objc_name": "socket:didAcceptNewSocket:",
            "declAttributes": [
              "ObjC",
              "AccessControl",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "newSocketQueueForConnection",
            "printedName": "newSocketQueueForConnection(fromAddress:on:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Dispatch.DispatchQueue?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DispatchQueue",
                    "printedName": "Dispatch.DispatchQueue",
                    "usr": "c:objc(cs)OS_dispatch_queue"
                  }
                ],
                "usr": "s:Sq"
              },
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              },
              {
                "kind": "TypeNominal",
                "name": "GCDAsyncSocket",
                "printedName": "CocoaAsyncSocket.GCDAsyncSocket",
                "usr": "c:objc(cs)GCDAsyncSocket"
              }
            ],
            "declKind": "Func",
            "usr": "c:@M@NEKit@objc(cs)GCDProxyServer(im)newSocketQueueForConnectionFromAddress:onSocket:",
            "mangledName": "$s5NEKit14GCDProxyServerC27newSocketQueueForConnection11fromAddress2onSo17OS_dispatch_queueCSg10Foundation4DataV_So08GCDAsyncE0CtF",
            "moduleName": "NEKit",
            "objc_name": "newSocketQueueForConnectionFromAddress:onSocket:",
            "declAttributes": [
              "ObjC",
              "AccessControl"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(address:port:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GCDProxyServer",
                "printedName": "NEKit.GCDProxyServer",
                "usr": "c:@M@NEKit@objc(cs)GCDProxyServer"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "NEKit.IPAddress?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "IPAddress",
                    "printedName": "NEKit.IPAddress",
                    "usr": "s:5NEKit9IPAddressC"
                  }
                ],
                "usr": "s:Sq"
              },
              {
                "kind": "TypeNominal",
                "name": "Port",
                "printedName": "NEKit.Port",
                "usr": "s:5NEKit4PortV"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit14GCDProxyServerC7address4portAcA9IPAddressCSg_AA4PortVtcfc",
            "mangledName": "$s5NEKit14GCDProxyServerC7address4portAcA9IPAddressCSg_AA4PortVtcfc",
            "moduleName": "NEKit",
            "overriding": true,
            "implicit": true,
            "declAttributes": [
              "Override"
            ],
            "init_kind": "Designated"
          }
        ],
        "declKind": "Class",
        "usr": "c:@M@NEKit@objc(cs)GCDProxyServer",
        "mangledName": "$s5NEKit14GCDProxyServerC",
        "moduleName": "NEKit",
        "isOpen": true,
        "declAttributes": [
          "AccessControl",
          "RawDocComment",
          "ObjC"
        ],
        "superclassUsr": "c:@M@NEKit@objc(cs)ProxyServer",
        "inheritsConvenienceInitializers": true,
        "superclassNames": [
          "NEKit.ProxyServer",
          "ObjectiveC.NSObject"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "CVarArg",
            "printedName": "CVarArg",
            "usr": "s:s7CVarArgP",
            "mangledName": "$ss7CVarArgP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObservingPublishing",
            "printedName": "_KeyValueCodingAndObservingPublishing",
            "usr": "s:10Foundation37_KeyValueCodingAndObservingPublishingP",
            "mangledName": "$s10Foundation37_KeyValueCodingAndObservingPublishingP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObserving",
            "printedName": "_KeyValueCodingAndObserving",
            "usr": "s:10Foundation27_KeyValueCodingAndObservingP",
            "mangledName": "$s10Foundation27_KeyValueCodingAndObservingP"
          },
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "CustomDebugStringConvertible",
            "printedName": "CustomDebugStringConvertible",
            "usr": "s:s28CustomDebugStringConvertibleP",
            "mangledName": "$ss28CustomDebugStringConvertibleP"
          }
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "TypeDecl",
        "name": "TunnelEvent",
        "printedName": "TunnelEvent",
        "children": [
          {
            "kind": "Var",
            "name": "description",
            "printedName": "description",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit11TunnelEventO11descriptionSSvp",
            "mangledName": "$s5NEKit11TunnelEventO11descriptionSSvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit11TunnelEventO11descriptionSSvg",
                "mangledName": "$s5NEKit11TunnelEventO11descriptionSSvg",
                "moduleName": "NEKit",
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "opened",
            "printedName": "opened",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.TunnelEvent.Type) -> (NEKit.Tunnel) -> NEKit.TunnelEvent",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(NEKit.Tunnel) -> NEKit.TunnelEvent",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "TunnelEvent",
                        "printedName": "NEKit.TunnelEvent",
                        "usr": "s:5NEKit11TunnelEventO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Tunnel",
                        "printedName": "NEKit.Tunnel",
                        "usr": "c:@M@NEKit@objc(cs)Tunnel"
                      }
                    ]
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.TunnelEvent.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "TunnelEvent",
                        "printedName": "NEKit.TunnelEvent",
                        "usr": "s:5NEKit11TunnelEventO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit11TunnelEventO6openedyAcA0B0CcACmF",
            "mangledName": "$s5NEKit11TunnelEventO6openedyAcA0B0CcACmF",
            "moduleName": "NEKit"
          },
          {
            "kind": "Var",
            "name": "closeCalled",
            "printedName": "closeCalled",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.TunnelEvent.Type) -> (NEKit.Tunnel) -> NEKit.TunnelEvent",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(NEKit.Tunnel) -> NEKit.TunnelEvent",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "TunnelEvent",
                        "printedName": "NEKit.TunnelEvent",
                        "usr": "s:5NEKit11TunnelEventO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Tunnel",
                        "printedName": "NEKit.Tunnel",
                        "usr": "c:@M@NEKit@objc(cs)Tunnel"
                      }
                    ]
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.TunnelEvent.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "TunnelEvent",
                        "printedName": "NEKit.TunnelEvent",
                        "usr": "s:5NEKit11TunnelEventO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit11TunnelEventO11closeCalledyAcA0B0CcACmF",
            "mangledName": "$s5NEKit11TunnelEventO11closeCalledyAcA0B0CcACmF",
            "moduleName": "NEKit"
          },
          {
            "kind": "Var",
            "name": "forceCloseCalled",
            "printedName": "forceCloseCalled",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.TunnelEvent.Type) -> (NEKit.Tunnel) -> NEKit.TunnelEvent",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(NEKit.Tunnel) -> NEKit.TunnelEvent",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "TunnelEvent",
                        "printedName": "NEKit.TunnelEvent",
                        "usr": "s:5NEKit11TunnelEventO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Tunnel",
                        "printedName": "NEKit.Tunnel",
                        "usr": "c:@M@NEKit@objc(cs)Tunnel"
                      }
                    ]
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.TunnelEvent.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "TunnelEvent",
                        "printedName": "NEKit.TunnelEvent",
                        "usr": "s:5NEKit11TunnelEventO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit11TunnelEventO16forceCloseCalledyAcA0B0CcACmF",
            "mangledName": "$s5NEKit11TunnelEventO16forceCloseCalledyAcA0B0CcACmF",
            "moduleName": "NEKit"
          },
          {
            "kind": "Var",
            "name": "receivedRequest",
            "printedName": "receivedRequest",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.TunnelEvent.Type) -> (NEKit.ConnectSession, NEKit.ProxySocket, NEKit.Tunnel) -> NEKit.TunnelEvent",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(NEKit.ConnectSession, NEKit.ProxySocket, NEKit.Tunnel) -> NEKit.TunnelEvent",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "TunnelEvent",
                        "printedName": "NEKit.TunnelEvent",
                        "usr": "s:5NEKit11TunnelEventO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Tuple",
                        "printedName": "(NEKit.ConnectSession, from: NEKit.ProxySocket, on: NEKit.Tunnel)",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "ConnectSession",
                            "printedName": "NEKit.ConnectSession",
                            "usr": "s:5NEKit14ConnectSessionC"
                          },
                          {
                            "kind": "TypeNominal",
                            "name": "ProxySocket",
                            "printedName": "NEKit.ProxySocket",
                            "usr": "c:@M@NEKit@objc(cs)ProxySocket"
                          },
                          {
                            "kind": "TypeNominal",
                            "name": "Tunnel",
                            "printedName": "NEKit.Tunnel",
                            "usr": "c:@M@NEKit@objc(cs)Tunnel"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.TunnelEvent.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "TunnelEvent",
                        "printedName": "NEKit.TunnelEvent",
                        "usr": "s:5NEKit11TunnelEventO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit11TunnelEventO15receivedRequestyAcA14ConnectSessionC_AA11ProxySocketCAA0B0CtcACmF",
            "mangledName": "$s5NEKit11TunnelEventO15receivedRequestyAcA14ConnectSessionC_AA11ProxySocketCAA0B0CtcACmF",
            "moduleName": "NEKit"
          },
          {
            "kind": "Var",
            "name": "receivedReadySignal",
            "printedName": "receivedReadySignal",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.TunnelEvent.Type) -> (NEKit.SocketProtocol, Swift.Int, NEKit.Tunnel) -> NEKit.TunnelEvent",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(NEKit.SocketProtocol, Swift.Int, NEKit.Tunnel) -> NEKit.TunnelEvent",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "TunnelEvent",
                        "printedName": "NEKit.TunnelEvent",
                        "usr": "s:5NEKit11TunnelEventO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Tuple",
                        "printedName": "(NEKit.SocketProtocol, currentReady: Swift.Int, on: NEKit.Tunnel)",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "SocketProtocol",
                            "printedName": "NEKit.SocketProtocol",
                            "usr": "s:5NEKit14SocketProtocolP"
                          },
                          {
                            "kind": "TypeNominal",
                            "name": "Int",
                            "printedName": "Swift.Int",
                            "usr": "s:Si"
                          },
                          {
                            "kind": "TypeNominal",
                            "name": "Tunnel",
                            "printedName": "NEKit.Tunnel",
                            "usr": "c:@M@NEKit@objc(cs)Tunnel"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.TunnelEvent.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "TunnelEvent",
                        "printedName": "NEKit.TunnelEvent",
                        "usr": "s:5NEKit11TunnelEventO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit11TunnelEventO19receivedReadySignalyAcA14SocketProtocol_p_SiAA0B0CtcACmF",
            "mangledName": "$s5NEKit11TunnelEventO19receivedReadySignalyAcA14SocketProtocol_p_SiAA0B0CtcACmF",
            "moduleName": "NEKit"
          },
          {
            "kind": "Var",
            "name": "proxySocketReadData",
            "printedName": "proxySocketReadData",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.TunnelEvent.Type) -> (Foundation.Data, NEKit.ProxySocket, NEKit.Tunnel) -> NEKit.TunnelEvent",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(Foundation.Data, NEKit.ProxySocket, NEKit.Tunnel) -> NEKit.TunnelEvent",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "TunnelEvent",
                        "printedName": "NEKit.TunnelEvent",
                        "usr": "s:5NEKit11TunnelEventO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Tuple",
                        "printedName": "(Foundation.Data, from: NEKit.ProxySocket, on: NEKit.Tunnel)",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "Data",
                            "printedName": "Foundation.Data",
                            "usr": "s:10Foundation4DataV"
                          },
                          {
                            "kind": "TypeNominal",
                            "name": "ProxySocket",
                            "printedName": "NEKit.ProxySocket",
                            "usr": "c:@M@NEKit@objc(cs)ProxySocket"
                          },
                          {
                            "kind": "TypeNominal",
                            "name": "Tunnel",
                            "printedName": "NEKit.Tunnel",
                            "usr": "c:@M@NEKit@objc(cs)Tunnel"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.TunnelEvent.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "TunnelEvent",
                        "printedName": "NEKit.TunnelEvent",
                        "usr": "s:5NEKit11TunnelEventO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit11TunnelEventO19proxySocketReadDatayAC10Foundation0G0V_AA05ProxyE0CAA0B0CtcACmF",
            "mangledName": "$s5NEKit11TunnelEventO19proxySocketReadDatayAC10Foundation0G0V_AA05ProxyE0CAA0B0CtcACmF",
            "moduleName": "NEKit"
          },
          {
            "kind": "Var",
            "name": "proxySocketWroteData",
            "printedName": "proxySocketWroteData",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.TunnelEvent.Type) -> (Foundation.Data?, NEKit.ProxySocket, NEKit.Tunnel) -> NEKit.TunnelEvent",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(Foundation.Data?, NEKit.ProxySocket, NEKit.Tunnel) -> NEKit.TunnelEvent",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "TunnelEvent",
                        "printedName": "NEKit.TunnelEvent",
                        "usr": "s:5NEKit11TunnelEventO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Tuple",
                        "printedName": "(Foundation.Data?, by: NEKit.ProxySocket, on: NEKit.Tunnel)",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "Optional",
                            "printedName": "Foundation.Data?",
                            "children": [
                              {
                                "kind": "TypeNominal",
                                "name": "Data",
                                "printedName": "Foundation.Data",
                                "usr": "s:10Foundation4DataV"
                              }
                            ],
                            "usr": "s:Sq"
                          },
                          {
                            "kind": "TypeNominal",
                            "name": "ProxySocket",
                            "printedName": "NEKit.ProxySocket",
                            "usr": "c:@M@NEKit@objc(cs)ProxySocket"
                          },
                          {
                            "kind": "TypeNominal",
                            "name": "Tunnel",
                            "printedName": "NEKit.Tunnel",
                            "usr": "c:@M@NEKit@objc(cs)Tunnel"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.TunnelEvent.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "TunnelEvent",
                        "printedName": "NEKit.TunnelEvent",
                        "usr": "s:5NEKit11TunnelEventO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit11TunnelEventO20proxySocketWroteDatayAC10Foundation0G0VSg_AA05ProxyE0CAA0B0CtcACmF",
            "mangledName": "$s5NEKit11TunnelEventO20proxySocketWroteDatayAC10Foundation0G0VSg_AA05ProxyE0CAA0B0CtcACmF",
            "moduleName": "NEKit"
          },
          {
            "kind": "Var",
            "name": "adapterSocketReadData",
            "printedName": "adapterSocketReadData",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.TunnelEvent.Type) -> (Foundation.Data, NEKit.AdapterSocket, NEKit.Tunnel) -> NEKit.TunnelEvent",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(Foundation.Data, NEKit.AdapterSocket, NEKit.Tunnel) -> NEKit.TunnelEvent",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "TunnelEvent",
                        "printedName": "NEKit.TunnelEvent",
                        "usr": "s:5NEKit11TunnelEventO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Tuple",
                        "printedName": "(Foundation.Data, from: NEKit.AdapterSocket, on: NEKit.Tunnel)",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "Data",
                            "printedName": "Foundation.Data",
                            "usr": "s:10Foundation4DataV"
                          },
                          {
                            "kind": "TypeNominal",
                            "name": "AdapterSocket",
                            "printedName": "NEKit.AdapterSocket",
                            "usr": "c:@M@NEKit@objc(cs)AdapterSocket"
                          },
                          {
                            "kind": "TypeNominal",
                            "name": "Tunnel",
                            "printedName": "NEKit.Tunnel",
                            "usr": "c:@M@NEKit@objc(cs)Tunnel"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.TunnelEvent.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "TunnelEvent",
                        "printedName": "NEKit.TunnelEvent",
                        "usr": "s:5NEKit11TunnelEventO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit11TunnelEventO21adapterSocketReadDatayAC10Foundation0G0V_AA07AdapterE0CAA0B0CtcACmF",
            "mangledName": "$s5NEKit11TunnelEventO21adapterSocketReadDatayAC10Foundation0G0V_AA07AdapterE0CAA0B0CtcACmF",
            "moduleName": "NEKit"
          },
          {
            "kind": "Var",
            "name": "adapterSocketWroteData",
            "printedName": "adapterSocketWroteData",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.TunnelEvent.Type) -> (Foundation.Data?, NEKit.AdapterSocket, NEKit.Tunnel) -> NEKit.TunnelEvent",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(Foundation.Data?, NEKit.AdapterSocket, NEKit.Tunnel) -> NEKit.TunnelEvent",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "TunnelEvent",
                        "printedName": "NEKit.TunnelEvent",
                        "usr": "s:5NEKit11TunnelEventO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Tuple",
                        "printedName": "(Foundation.Data?, by: NEKit.AdapterSocket, on: NEKit.Tunnel)",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "Optional",
                            "printedName": "Foundation.Data?",
                            "children": [
                              {
                                "kind": "TypeNominal",
                                "name": "Data",
                                "printedName": "Foundation.Data",
                                "usr": "s:10Foundation4DataV"
                              }
                            ],
                            "usr": "s:Sq"
                          },
                          {
                            "kind": "TypeNominal",
                            "name": "AdapterSocket",
                            "printedName": "NEKit.AdapterSocket",
                            "usr": "c:@M@NEKit@objc(cs)AdapterSocket"
                          },
                          {
                            "kind": "TypeNominal",
                            "name": "Tunnel",
                            "printedName": "NEKit.Tunnel",
                            "usr": "c:@M@NEKit@objc(cs)Tunnel"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.TunnelEvent.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "TunnelEvent",
                        "printedName": "NEKit.TunnelEvent",
                        "usr": "s:5NEKit11TunnelEventO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit11TunnelEventO22adapterSocketWroteDatayAC10Foundation0G0VSg_AA07AdapterE0CAA0B0CtcACmF",
            "mangledName": "$s5NEKit11TunnelEventO22adapterSocketWroteDatayAC10Foundation0G0VSg_AA07AdapterE0CAA0B0CtcACmF",
            "moduleName": "NEKit"
          },
          {
            "kind": "Var",
            "name": "connectedToRemote",
            "printedName": "connectedToRemote",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.TunnelEvent.Type) -> (NEKit.AdapterSocket, NEKit.Tunnel) -> NEKit.TunnelEvent",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(NEKit.AdapterSocket, NEKit.Tunnel) -> NEKit.TunnelEvent",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "TunnelEvent",
                        "printedName": "NEKit.TunnelEvent",
                        "usr": "s:5NEKit11TunnelEventO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Tuple",
                        "printedName": "(NEKit.AdapterSocket, on: NEKit.Tunnel)",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "AdapterSocket",
                            "printedName": "NEKit.AdapterSocket",
                            "usr": "c:@M@NEKit@objc(cs)AdapterSocket"
                          },
                          {
                            "kind": "TypeNominal",
                            "name": "Tunnel",
                            "printedName": "NEKit.Tunnel",
                            "usr": "c:@M@NEKit@objc(cs)Tunnel"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.TunnelEvent.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "TunnelEvent",
                        "printedName": "NEKit.TunnelEvent",
                        "usr": "s:5NEKit11TunnelEventO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit11TunnelEventO17connectedToRemoteyAcA13AdapterSocketC_AA0B0CtcACmF",
            "mangledName": "$s5NEKit11TunnelEventO17connectedToRemoteyAcA13AdapterSocketC_AA0B0CtcACmF",
            "moduleName": "NEKit"
          },
          {
            "kind": "Var",
            "name": "updatingAdapterSocket",
            "printedName": "updatingAdapterSocket",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.TunnelEvent.Type) -> (NEKit.AdapterSocket, NEKit.AdapterSocket, NEKit.Tunnel) -> NEKit.TunnelEvent",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(NEKit.AdapterSocket, NEKit.AdapterSocket, NEKit.Tunnel) -> NEKit.TunnelEvent",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "TunnelEvent",
                        "printedName": "NEKit.TunnelEvent",
                        "usr": "s:5NEKit11TunnelEventO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Tuple",
                        "printedName": "(from: NEKit.AdapterSocket, to: NEKit.AdapterSocket, on: NEKit.Tunnel)",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "AdapterSocket",
                            "printedName": "NEKit.AdapterSocket",
                            "usr": "c:@M@NEKit@objc(cs)AdapterSocket"
                          },
                          {
                            "kind": "TypeNominal",
                            "name": "AdapterSocket",
                            "printedName": "NEKit.AdapterSocket",
                            "usr": "c:@M@NEKit@objc(cs)AdapterSocket"
                          },
                          {
                            "kind": "TypeNominal",
                            "name": "Tunnel",
                            "printedName": "NEKit.Tunnel",
                            "usr": "c:@M@NEKit@objc(cs)Tunnel"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.TunnelEvent.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "TunnelEvent",
                        "printedName": "NEKit.TunnelEvent",
                        "usr": "s:5NEKit11TunnelEventO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit11TunnelEventO21updatingAdapterSocketyAcA0eF0C_AfA0B0CtcACmF",
            "mangledName": "$s5NEKit11TunnelEventO21updatingAdapterSocketyAcA0eF0C_AfA0B0CtcACmF",
            "moduleName": "NEKit"
          },
          {
            "kind": "Var",
            "name": "closed",
            "printedName": "closed",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.TunnelEvent.Type) -> (NEKit.Tunnel) -> NEKit.TunnelEvent",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(NEKit.Tunnel) -> NEKit.TunnelEvent",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "TunnelEvent",
                        "printedName": "NEKit.TunnelEvent",
                        "usr": "s:5NEKit11TunnelEventO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Tunnel",
                        "printedName": "NEKit.Tunnel",
                        "usr": "c:@M@NEKit@objc(cs)Tunnel"
                      }
                    ]
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.TunnelEvent.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "TunnelEvent",
                        "printedName": "NEKit.TunnelEvent",
                        "usr": "s:5NEKit11TunnelEventO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit11TunnelEventO6closedyAcA0B0CcACmF",
            "mangledName": "$s5NEKit11TunnelEventO6closedyAcA0B0CcACmF",
            "moduleName": "NEKit"
          }
        ],
        "declKind": "Enum",
        "usr": "s:5NEKit11TunnelEventO",
        "mangledName": "$s5NEKit11TunnelEventO",
        "moduleName": "NEKit",
        "declAttributes": [
          "AccessControl"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "EventType",
            "printedName": "EventType",
            "usr": "s:5NEKit9EventTypeP",
            "mangledName": "$s5NEKit9EventTypeP"
          },
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          }
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "TypeDecl",
        "name": "Rule",
        "printedName": "Rule",
        "children": [
          {
            "kind": "Var",
            "name": "description",
            "printedName": "description",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit4RuleC11descriptionSSvp",
            "mangledName": "$s5NEKit4RuleC11descriptionSSvp",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "AccessControl"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit4RuleC11descriptionSSvg",
                "mangledName": "$s5NEKit4RuleC11descriptionSSvg",
                "moduleName": "NEKit",
                "isOpen": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Rule",
                "printedName": "NEKit.Rule",
                "usr": "s:5NEKit4RuleC"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit4RuleCACycfc",
            "mangledName": "$s5NEKit4RuleCACycfc",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "init_kind": "Designated"
          },
          {
            "kind": "Function",
            "name": "matchDNS",
            "printedName": "matchDNS(_:type:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "DNSSessionMatchResult",
                "printedName": "NEKit.DNSSessionMatchResult",
                "usr": "s:5NEKit21DNSSessionMatchResultO"
              },
              {
                "kind": "TypeNominal",
                "name": "DNSSession",
                "printedName": "NEKit.DNSSession",
                "usr": "s:5NEKit10DNSSessionC"
              },
              {
                "kind": "TypeNominal",
                "name": "DNSSessionMatchType",
                "printedName": "NEKit.DNSSessionMatchType",
                "usr": "s:5NEKit19DNSSessionMatchTypeO"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit4RuleC8matchDNS_4typeAA21DNSSessionMatchResultOAA0F0C_AA0fG4TypeOtF",
            "mangledName": "$s5NEKit4RuleC8matchDNS_4typeAA21DNSSessionMatchResultOAA0F0C_AA0fG4TypeOtF",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "match",
            "printedName": "match(_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "NEKit.AdapterFactory?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "AdapterFactory",
                    "printedName": "NEKit.AdapterFactory",
                    "usr": "s:5NEKit14AdapterFactoryC"
                  }
                ],
                "usr": "s:Sq"
              },
              {
                "kind": "TypeNominal",
                "name": "ConnectSession",
                "printedName": "NEKit.ConnectSession",
                "usr": "s:5NEKit14ConnectSessionC"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit4RuleC5matchyAA14AdapterFactoryCSgAA14ConnectSessionCF",
            "mangledName": "$s5NEKit4RuleC5matchyAA14AdapterFactoryCSgAA14ConnectSessionCF",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          }
        ],
        "declKind": "Class",
        "usr": "s:5NEKit4RuleC",
        "mangledName": "$s5NEKit4RuleC",
        "moduleName": "NEKit",
        "isOpen": true,
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          }
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "TypeDecl",
        "name": "SpeedAdapterFactory",
        "printedName": "SpeedAdapterFactory",
        "children": [
          {
            "kind": "Var",
            "name": "adapterFactories",
            "printedName": "adapterFactories",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "ImplicitlyUnwrappedOptional",
                "printedName": "[(NEKit.AdapterFactory, Swift.Int)]?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Array",
                    "printedName": "[(NEKit.AdapterFactory, Swift.Int)]",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Tuple",
                        "printedName": "(NEKit.AdapterFactory, Swift.Int)",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "AdapterFactory",
                            "printedName": "NEKit.AdapterFactory",
                            "usr": "s:5NEKit14AdapterFactoryC"
                          },
                          {
                            "kind": "TypeNominal",
                            "name": "Int",
                            "printedName": "Swift.Int",
                            "usr": "s:Si"
                          }
                        ]
                      }
                    ],
                    "usr": "s:Sa"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit19SpeedAdapterFactoryC16adapterFactoriesSayAA0cD0C_SitGSgvp",
            "mangledName": "$s5NEKit19SpeedAdapterFactoryC16adapterFactoriesSayAA0cD0C_SitGSgvp",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "HasInitialValue",
              "HasStorage",
              "AccessControl"
            ],
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "ImplicitlyUnwrappedOptional",
                    "printedName": "[(NEKit.AdapterFactory, Swift.Int)]?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Array",
                        "printedName": "[(NEKit.AdapterFactory, Swift.Int)]",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "Tuple",
                            "printedName": "(NEKit.AdapterFactory, Swift.Int)",
                            "children": [
                              {
                                "kind": "TypeNominal",
                                "name": "AdapterFactory",
                                "printedName": "NEKit.AdapterFactory",
                                "usr": "s:5NEKit14AdapterFactoryC"
                              },
                              {
                                "kind": "TypeNominal",
                                "name": "Int",
                                "printedName": "Swift.Int",
                                "usr": "s:Si"
                              }
                            ]
                          }
                        ],
                        "usr": "s:Sa"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit19SpeedAdapterFactoryC16adapterFactoriesSayAA0cD0C_SitGSgvg",
                "mangledName": "$s5NEKit19SpeedAdapterFactoryC16adapterFactoriesSayAA0cD0C_SitGSgvg",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "ImplicitlyUnwrappedOptional",
                    "printedName": "[(NEKit.AdapterFactory, Swift.Int)]?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Array",
                        "printedName": "[(NEKit.AdapterFactory, Swift.Int)]",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "Tuple",
                            "printedName": "(NEKit.AdapterFactory, Swift.Int)",
                            "children": [
                              {
                                "kind": "TypeNominal",
                                "name": "AdapterFactory",
                                "printedName": "NEKit.AdapterFactory",
                                "usr": "s:5NEKit14AdapterFactoryC"
                              },
                              {
                                "kind": "TypeNominal",
                                "name": "Int",
                                "printedName": "Swift.Int",
                                "usr": "s:Si"
                              }
                            ]
                          }
                        ],
                        "usr": "s:Sa"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit19SpeedAdapterFactoryC16adapterFactoriesSayAA0cD0C_SitGSgvs",
                "mangledName": "$s5NEKit19SpeedAdapterFactoryC16adapterFactoriesSayAA0cD0C_SitGSgvs",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit19SpeedAdapterFactoryC16adapterFactoriesSayAA0cD0C_SitGSgvM",
                "mangledName": "$s5NEKit19SpeedAdapterFactoryC16adapterFactoriesSayAA0cD0C_SitGSgvM",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "SpeedAdapterFactory",
                "printedName": "NEKit.SpeedAdapterFactory",
                "usr": "s:5NEKit19SpeedAdapterFactoryC"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit19SpeedAdapterFactoryCACycfc",
            "mangledName": "$s5NEKit19SpeedAdapterFactoryCACycfc",
            "moduleName": "NEKit",
            "overriding": true,
            "declAttributes": [
              "Override",
              "AccessControl"
            ],
            "init_kind": "Designated"
          },
          {
            "kind": "Function",
            "name": "getAdapterFor",
            "printedName": "getAdapterFor(session:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "AdapterSocket",
                "printedName": "NEKit.AdapterSocket",
                "usr": "c:@M@NEKit@objc(cs)AdapterSocket"
              },
              {
                "kind": "TypeNominal",
                "name": "ConnectSession",
                "printedName": "NEKit.ConnectSession",
                "usr": "s:5NEKit14ConnectSessionC"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit19SpeedAdapterFactoryC03getC3For7sessionAA0C6SocketCAA14ConnectSessionC_tF",
            "mangledName": "$s5NEKit19SpeedAdapterFactoryC03getC3For7sessionAA0C6SocketCAA14ConnectSessionC_tF",
            "moduleName": "NEKit",
            "overriding": true,
            "isOpen": true,
            "declAttributes": [
              "AccessControl",
              "Override",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          }
        ],
        "declKind": "Class",
        "usr": "s:5NEKit19SpeedAdapterFactoryC",
        "mangledName": "$s5NEKit19SpeedAdapterFactoryC",
        "moduleName": "NEKit",
        "isOpen": true,
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "superclassUsr": "s:5NEKit14AdapterFactoryC",
        "inheritsConvenienceInitializers": true,
        "superclassNames": [
          "NEKit.AdapterFactory"
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "TypeDecl",
        "name": "HTTPProxySocket",
        "printedName": "HTTPProxySocket",
        "children": [
          {
            "kind": "Var",
            "name": "destinationHost",
            "printedName": "destinationHost",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "ImplicitlyUnwrappedOptional",
                "printedName": "Swift.String?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit15HTTPProxySocketC15destinationHostSSSgvp",
            "mangledName": "$s5NEKit15HTTPProxySocketC15destinationHostSSSgvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "HasInitialValue",
              "HasStorage",
              "AccessControl",
              "RawDocComment"
            ],
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "ImplicitlyUnwrappedOptional",
                    "printedName": "Swift.String?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "String",
                        "printedName": "Swift.String",
                        "usr": "s:SS"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit15HTTPProxySocketC15destinationHostSSSgvg",
                "mangledName": "$s5NEKit15HTTPProxySocketC15destinationHostSSSgvg",
                "moduleName": "NEKit",
                "implicit": true,
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "ImplicitlyUnwrappedOptional",
                    "printedName": "Swift.String?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "String",
                        "printedName": "Swift.String",
                        "usr": "s:SS"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit15HTTPProxySocketC15destinationHostSSSgvs",
                "mangledName": "$s5NEKit15HTTPProxySocketC15destinationHostSSSgvs",
                "moduleName": "NEKit",
                "implicit": true,
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit15HTTPProxySocketC15destinationHostSSSgvM",
                "mangledName": "$s5NEKit15HTTPProxySocketC15destinationHostSSSgvM",
                "moduleName": "NEKit",
                "implicit": true,
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "destinationPort",
            "printedName": "destinationPort",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "ImplicitlyUnwrappedOptional",
                "printedName": "Swift.Int?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit15HTTPProxySocketC15destinationPortSiSgvp",
            "mangledName": "$s5NEKit15HTTPProxySocketC15destinationPortSiSgvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "HasInitialValue",
              "HasStorage",
              "AccessControl",
              "RawDocComment"
            ],
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "ImplicitlyUnwrappedOptional",
                    "printedName": "Swift.Int?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Int",
                        "printedName": "Swift.Int",
                        "usr": "s:Si"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit15HTTPProxySocketC15destinationPortSiSgvg",
                "mangledName": "$s5NEKit15HTTPProxySocketC15destinationPortSiSgvg",
                "moduleName": "NEKit",
                "implicit": true,
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "ImplicitlyUnwrappedOptional",
                    "printedName": "Swift.Int?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Int",
                        "printedName": "Swift.Int",
                        "usr": "s:Si"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit15HTTPProxySocketC15destinationPortSiSgvs",
                "mangledName": "$s5NEKit15HTTPProxySocketC15destinationPortSiSgvs",
                "moduleName": "NEKit",
                "implicit": true,
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit15HTTPProxySocketC15destinationPortSiSgvM",
                "mangledName": "$s5NEKit15HTTPProxySocketC15destinationPortSiSgvM",
                "moduleName": "NEKit",
                "implicit": true,
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "isConnectCommand",
            "printedName": "isConnectCommand",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit15HTTPProxySocketC16isConnectCommandSbvp",
            "mangledName": "$s5NEKit15HTTPProxySocketC16isConnectCommandSbvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "HasInitialValue",
              "HasStorage",
              "AccessControl"
            ],
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Bool",
                    "printedName": "Swift.Bool",
                    "usr": "s:Sb"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit15HTTPProxySocketC16isConnectCommandSbvg",
                "mangledName": "$s5NEKit15HTTPProxySocketC16isConnectCommandSbvg",
                "moduleName": "NEKit",
                "implicit": true,
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Bool",
                    "printedName": "Swift.Bool",
                    "usr": "s:Sb"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit15HTTPProxySocketC16isConnectCommandSbvs",
                "mangledName": "$s5NEKit15HTTPProxySocketC16isConnectCommandSbvs",
                "moduleName": "NEKit",
                "implicit": true,
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit15HTTPProxySocketC16isConnectCommandSbvM",
                "mangledName": "$s5NEKit15HTTPProxySocketC16isConnectCommandSbvM",
                "moduleName": "NEKit",
                "implicit": true,
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "readStatusDescription",
            "printedName": "readStatusDescription",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit15HTTPProxySocketC21readStatusDescriptionSSvp",
            "mangledName": "$s5NEKit15HTTPProxySocketC21readStatusDescriptionSSvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit15HTTPProxySocketC21readStatusDescriptionSSvg",
                "mangledName": "$s5NEKit15HTTPProxySocketC21readStatusDescriptionSSvg",
                "moduleName": "NEKit",
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "writeStatusDescription",
            "printedName": "writeStatusDescription",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit15HTTPProxySocketC22writeStatusDescriptionSSvp",
            "mangledName": "$s5NEKit15HTTPProxySocketC22writeStatusDescriptionSSvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit15HTTPProxySocketC22writeStatusDescriptionSSvg",
                "mangledName": "$s5NEKit15HTTPProxySocketC22writeStatusDescriptionSSvg",
                "moduleName": "NEKit",
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Function",
            "name": "openSocket",
            "printedName": "openSocket()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit15HTTPProxySocketC04openC0yyF",
            "mangledName": "$s5NEKit15HTTPProxySocketC04openC0yyF",
            "moduleName": "NEKit",
            "overriding": true,
            "declAttributes": [
              "AccessControl",
              "Override",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "readData",
            "printedName": "readData()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit15HTTPProxySocketC8readDatayyF",
            "mangledName": "$s5NEKit15HTTPProxySocketC8readDatayyF",
            "moduleName": "NEKit",
            "overriding": true,
            "declAttributes": [
              "AccessControl",
              "Override"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "didRead",
            "printedName": "didRead(data:from:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              },
              {
                "kind": "TypeNominal",
                "name": "RawTCPSocketProtocol",
                "printedName": "NEKit.RawTCPSocketProtocol",
                "usr": "s:5NEKit20RawTCPSocketProtocolP"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit15HTTPProxySocketC7didRead4data4fromy10Foundation4DataV_AA20RawTCPSocketProtocol_ptF",
            "mangledName": "$s5NEKit15HTTPProxySocketC7didRead4data4fromy10Foundation4DataV_AA20RawTCPSocketProtocol_ptF",
            "moduleName": "NEKit",
            "overriding": true,
            "declAttributes": [
              "AccessControl",
              "Override",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "didWrite",
            "printedName": "didWrite(data:by:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Foundation.Data?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Data",
                    "printedName": "Foundation.Data",
                    "usr": "s:10Foundation4DataV"
                  }
                ],
                "usr": "s:Sq"
              },
              {
                "kind": "TypeNominal",
                "name": "RawTCPSocketProtocol",
                "printedName": "NEKit.RawTCPSocketProtocol",
                "usr": "s:5NEKit20RawTCPSocketProtocolP"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit15HTTPProxySocketC8didWrite4data2byy10Foundation4DataVSg_AA20RawTCPSocketProtocol_ptF",
            "mangledName": "$s5NEKit15HTTPProxySocketC8didWrite4data2byy10Foundation4DataVSg_AA20RawTCPSocketProtocol_ptF",
            "moduleName": "NEKit",
            "overriding": true,
            "declAttributes": [
              "AccessControl",
              "Override",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "respondTo",
            "printedName": "respondTo(adapter:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "AdapterSocket",
                "printedName": "NEKit.AdapterSocket",
                "usr": "c:@M@NEKit@objc(cs)AdapterSocket"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit15HTTPProxySocketC9respondTo7adapteryAA07AdapterC0C_tF",
            "mangledName": "$s5NEKit15HTTPProxySocketC9respondTo7adapteryAA07AdapterC0C_tF",
            "moduleName": "NEKit",
            "overriding": true,
            "declAttributes": [
              "Override",
              "AccessControl",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(socket:observe:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "HTTPProxySocket",
                "printedName": "NEKit.HTTPProxySocket",
                "usr": "c:@M@NEKit@objc(cs)HTTPProxySocket"
              },
              {
                "kind": "TypeNominal",
                "name": "RawTCPSocketProtocol",
                "printedName": "NEKit.RawTCPSocketProtocol",
                "usr": "s:5NEKit20RawTCPSocketProtocolP"
              },
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "hasDefaultArg": true,
                "usr": "s:Sb"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit15HTTPProxySocketC6socket7observeAcA20RawTCPSocketProtocol_p_Sbtcfc",
            "mangledName": "$s5NEKit15HTTPProxySocketC6socket7observeAcA20RawTCPSocketProtocol_p_Sbtcfc",
            "moduleName": "NEKit",
            "overriding": true,
            "implicit": true,
            "declAttributes": [
              "Override"
            ],
            "init_kind": "Designated"
          }
        ],
        "declKind": "Class",
        "usr": "c:@M@NEKit@objc(cs)HTTPProxySocket",
        "mangledName": "$s5NEKit15HTTPProxySocketC",
        "moduleName": "NEKit",
        "declAttributes": [
          "AccessControl",
          "ObjC"
        ],
        "superclassUsr": "c:@M@NEKit@objc(cs)ProxySocket",
        "inheritsConvenienceInitializers": true,
        "superclassNames": [
          "NEKit.ProxySocket",
          "ObjectiveC.NSObject"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "SocketProtocol",
            "printedName": "SocketProtocol",
            "usr": "s:5NEKit14SocketProtocolP",
            "mangledName": "$s5NEKit14SocketProtocolP"
          },
          {
            "kind": "Conformance",
            "name": "RawTCPSocketDelegate",
            "printedName": "RawTCPSocketDelegate",
            "usr": "s:5NEKit20RawTCPSocketDelegateP",
            "mangledName": "$s5NEKit20RawTCPSocketDelegateP"
          },
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "CVarArg",
            "printedName": "CVarArg",
            "usr": "s:s7CVarArgP",
            "mangledName": "$ss7CVarArgP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObservingPublishing",
            "printedName": "_KeyValueCodingAndObservingPublishing",
            "usr": "s:10Foundation37_KeyValueCodingAndObservingPublishingP",
            "mangledName": "$s10Foundation37_KeyValueCodingAndObservingPublishingP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObserving",
            "printedName": "_KeyValueCodingAndObserving",
            "usr": "s:10Foundation27_KeyValueCodingAndObservingP",
            "mangledName": "$s10Foundation27_KeyValueCodingAndObservingP"
          },
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "CustomDebugStringConvertible",
            "printedName": "CustomDebugStringConvertible",
            "usr": "s:s28CustomDebugStringConvertibleP",
            "mangledName": "$ss28CustomDebugStringConvertibleP"
          }
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "TypeDecl",
        "name": "StreamScanner",
        "printedName": "StreamScanner",
        "children": [
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(pattern:maximumLength:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "StreamScanner",
                "printedName": "NEKit.StreamScanner",
                "usr": "s:5NEKit13StreamScannerC"
              },
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              },
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit13StreamScannerC7pattern13maximumLengthAC10Foundation4DataV_Sitcfc",
            "mangledName": "$s5NEKit13StreamScannerC7pattern13maximumLengthAC10Foundation4DataV_Sitcfc",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "init_kind": "Designated"
          },
          {
            "kind": "Function",
            "name": "addAndScan",
            "printedName": "addAndScan(_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "(Foundation.Data?, Foundation.Data)?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Tuple",
                    "printedName": "(Foundation.Data?, Foundation.Data)",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Optional",
                        "printedName": "Foundation.Data?",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "Data",
                            "printedName": "Foundation.Data",
                            "usr": "s:10Foundation4DataV"
                          }
                        ],
                        "usr": "s:Sq"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Data",
                        "printedName": "Foundation.Data",
                        "usr": "s:10Foundation4DataV"
                      }
                    ]
                  }
                ],
                "usr": "s:Sq"
              },
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit13StreamScannerC10addAndScany10Foundation4DataVSg_AGtSgAGF",
            "mangledName": "$s5NEKit13StreamScannerC10addAndScany10Foundation4DataVSg_AGtSgAGF",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          }
        ],
        "declKind": "Class",
        "usr": "s:5NEKit13StreamScannerC",
        "mangledName": "$s5NEKit13StreamScannerC",
        "moduleName": "NEKit",
        "isOpen": true,
        "declAttributes": [
          "AccessControl"
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "NEKit",
        "declAttributes": [
          "RawDocComment"
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "NEKit",
        "declAttributes": [
          "RawDocComment"
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "TypeDecl",
        "name": "RuleManager",
        "printedName": "RuleManager",
        "children": [
          {
            "kind": "Var",
            "name": "currentManager",
            "printedName": "currentManager",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "RuleManager",
                "printedName": "NEKit.RuleManager",
                "usr": "s:5NEKit11RuleManagerC"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit11RuleManagerC07currentC0ACvpZ",
            "mangledName": "$s5NEKit11RuleManagerC07currentC0ACvpZ",
            "moduleName": "NEKit",
            "static": true,
            "declAttributes": [
              "HasInitialValue",
              "Final",
              "HasStorage",
              "AccessControl",
              "RawDocComment"
            ],
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "RuleManager",
                    "printedName": "NEKit.RuleManager",
                    "usr": "s:5NEKit11RuleManagerC"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit11RuleManagerC07currentC0ACvgZ",
                "mangledName": "$s5NEKit11RuleManagerC07currentC0ACvgZ",
                "moduleName": "NEKit",
                "static": true,
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "RuleManager",
                    "printedName": "NEKit.RuleManager",
                    "usr": "s:5NEKit11RuleManagerC"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit11RuleManagerC07currentC0ACvsZ",
                "mangledName": "$s5NEKit11RuleManagerC07currentC0ACvsZ",
                "moduleName": "NEKit",
                "static": true,
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit11RuleManagerC07currentC0ACvMZ",
                "mangledName": "$s5NEKit11RuleManagerC07currentC0ACvMZ",
                "moduleName": "NEKit",
                "static": true,
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "observer",
            "printedName": "observer",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "NEKit.Observer<NEKit.RuleMatchEvent>?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Observer",
                    "printedName": "NEKit.Observer<NEKit.RuleMatchEvent>",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "RuleMatchEvent",
                        "printedName": "NEKit.RuleMatchEvent",
                        "usr": "s:5NEKit14RuleMatchEventO"
                      }
                    ],
                    "usr": "s:5NEKit8ObserverC"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit11RuleManagerC8observerAA8ObserverCyAA0B10MatchEventOGSgvp",
            "mangledName": "$s5NEKit11RuleManagerC8observerAA8ObserverCyAA0B10MatchEventOGSgvp",
            "moduleName": "NEKit",
            "isOpen": true,
            "declAttributes": [
              "HasInitialValue",
              "HasStorage",
              "AccessControl"
            ],
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "NEKit.Observer<NEKit.RuleMatchEvent>?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Observer",
                        "printedName": "NEKit.Observer<NEKit.RuleMatchEvent>",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "RuleMatchEvent",
                            "printedName": "NEKit.RuleMatchEvent",
                            "usr": "s:5NEKit14RuleMatchEventO"
                          }
                        ],
                        "usr": "s:5NEKit8ObserverC"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit11RuleManagerC8observerAA8ObserverCyAA0B10MatchEventOGSgvg",
                "mangledName": "$s5NEKit11RuleManagerC8observerAA8ObserverCyAA0B10MatchEventOGSgvg",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "get"
              },
              {
                "kind": "Accessor",
                "name": "Set",
                "printedName": "Set()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "NEKit.Observer<NEKit.RuleMatchEvent>?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Observer",
                        "printedName": "NEKit.Observer<NEKit.RuleMatchEvent>",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "RuleMatchEvent",
                            "printedName": "NEKit.RuleMatchEvent",
                            "usr": "s:5NEKit14RuleMatchEventO"
                          }
                        ],
                        "usr": "s:5NEKit8ObserverC"
                      }
                    ],
                    "usr": "s:Sq"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit11RuleManagerC8observerAA8ObserverCyAA0B10MatchEventOGSgvs",
                "mangledName": "$s5NEKit11RuleManagerC8observerAA8ObserverCyAA0B10MatchEventOGSgvs",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "set"
              },
              {
                "kind": "Accessor",
                "name": "Modify",
                "printedName": "Modify()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit11RuleManagerC8observerAA8ObserverCyAA0B10MatchEventOGSgvM",
                "mangledName": "$s5NEKit11RuleManagerC8observerAA8ObserverCyAA0B10MatchEventOGSgvM",
                "moduleName": "NEKit",
                "implicit": true,
                "isOpen": true,
                "accessorKind": "_modify"
              }
            ]
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(fromRules:appendDirect:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "RuleManager",
                "printedName": "NEKit.RuleManager",
                "usr": "s:5NEKit11RuleManagerC"
              },
              {
                "kind": "TypeNominal",
                "name": "Array",
                "printedName": "[NEKit.Rule]",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Rule",
                    "printedName": "NEKit.Rule",
                    "usr": "s:5NEKit4RuleC"
                  }
                ],
                "usr": "s:Sa"
              },
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "hasDefaultArg": true,
                "usr": "s:Sb"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit11RuleManagerC9fromRules12appendDirectACSayAA0B0CG_Sbtcfc",
            "mangledName": "$s5NEKit11RuleManagerC9fromRules12appendDirectACSayAA0B0CG_Sbtcfc",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "init_kind": "Designated"
          }
        ],
        "declKind": "Class",
        "usr": "s:5NEKit11RuleManagerC",
        "mangledName": "$s5NEKit11RuleManagerC",
        "moduleName": "NEKit",
        "isOpen": true,
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "NEKit",
        "declAttributes": [
          "RawDocComment"
        ]
      },
      {
        "kind": "Import",
        "name": "NetworkExtension",
        "printedName": "NetworkExtension",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "TypeDecl",
        "name": "AdapterSocketEvent",
        "printedName": "AdapterSocketEvent",
        "children": [
          {
            "kind": "Var",
            "name": "description",
            "printedName": "description",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit18AdapterSocketEventO11descriptionSSvp",
            "mangledName": "$s5NEKit18AdapterSocketEventO11descriptionSSvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit18AdapterSocketEventO11descriptionSSvg",
                "mangledName": "$s5NEKit18AdapterSocketEventO11descriptionSSvg",
                "moduleName": "NEKit",
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "socketOpened",
            "printedName": "socketOpened",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.AdapterSocketEvent.Type) -> (NEKit.AdapterSocket, NEKit.ConnectSession) -> NEKit.AdapterSocketEvent",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(NEKit.AdapterSocket, NEKit.ConnectSession) -> NEKit.AdapterSocketEvent",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "AdapterSocketEvent",
                        "printedName": "NEKit.AdapterSocketEvent",
                        "usr": "s:5NEKit18AdapterSocketEventO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Tuple",
                        "printedName": "(NEKit.AdapterSocket, withSession: NEKit.ConnectSession)",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "AdapterSocket",
                            "printedName": "NEKit.AdapterSocket",
                            "usr": "c:@M@NEKit@objc(cs)AdapterSocket"
                          },
                          {
                            "kind": "TypeNominal",
                            "name": "ConnectSession",
                            "printedName": "NEKit.ConnectSession",
                            "usr": "s:5NEKit14ConnectSessionC"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.AdapterSocketEvent.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "AdapterSocketEvent",
                        "printedName": "NEKit.AdapterSocketEvent",
                        "usr": "s:5NEKit18AdapterSocketEventO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit18AdapterSocketEventO12socketOpenedyAcA0bC0C_AA14ConnectSessionCtcACmF",
            "mangledName": "$s5NEKit18AdapterSocketEventO12socketOpenedyAcA0bC0C_AA14ConnectSessionCtcACmF",
            "moduleName": "NEKit"
          },
          {
            "kind": "Var",
            "name": "disconnectCalled",
            "printedName": "disconnectCalled",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.AdapterSocketEvent.Type) -> (NEKit.AdapterSocket) -> NEKit.AdapterSocketEvent",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(NEKit.AdapterSocket) -> NEKit.AdapterSocketEvent",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "AdapterSocketEvent",
                        "printedName": "NEKit.AdapterSocketEvent",
                        "usr": "s:5NEKit18AdapterSocketEventO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "AdapterSocket",
                        "printedName": "NEKit.AdapterSocket",
                        "usr": "c:@M@NEKit@objc(cs)AdapterSocket"
                      }
                    ]
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.AdapterSocketEvent.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "AdapterSocketEvent",
                        "printedName": "NEKit.AdapterSocketEvent",
                        "usr": "s:5NEKit18AdapterSocketEventO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit18AdapterSocketEventO16disconnectCalledyAcA0bC0CcACmF",
            "mangledName": "$s5NEKit18AdapterSocketEventO16disconnectCalledyAcA0bC0CcACmF",
            "moduleName": "NEKit"
          },
          {
            "kind": "Var",
            "name": "forceDisconnectCalled",
            "printedName": "forceDisconnectCalled",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.AdapterSocketEvent.Type) -> (NEKit.AdapterSocket) -> NEKit.AdapterSocketEvent",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(NEKit.AdapterSocket) -> NEKit.AdapterSocketEvent",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "AdapterSocketEvent",
                        "printedName": "NEKit.AdapterSocketEvent",
                        "usr": "s:5NEKit18AdapterSocketEventO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "AdapterSocket",
                        "printedName": "NEKit.AdapterSocket",
                        "usr": "c:@M@NEKit@objc(cs)AdapterSocket"
                      }
                    ]
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.AdapterSocketEvent.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "AdapterSocketEvent",
                        "printedName": "NEKit.AdapterSocketEvent",
                        "usr": "s:5NEKit18AdapterSocketEventO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit18AdapterSocketEventO21forceDisconnectCalledyAcA0bC0CcACmF",
            "mangledName": "$s5NEKit18AdapterSocketEventO21forceDisconnectCalledyAcA0bC0CcACmF",
            "moduleName": "NEKit"
          },
          {
            "kind": "Var",
            "name": "disconnected",
            "printedName": "disconnected",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.AdapterSocketEvent.Type) -> (NEKit.AdapterSocket) -> NEKit.AdapterSocketEvent",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(NEKit.AdapterSocket) -> NEKit.AdapterSocketEvent",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "AdapterSocketEvent",
                        "printedName": "NEKit.AdapterSocketEvent",
                        "usr": "s:5NEKit18AdapterSocketEventO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "AdapterSocket",
                        "printedName": "NEKit.AdapterSocket",
                        "usr": "c:@M@NEKit@objc(cs)AdapterSocket"
                      }
                    ]
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.AdapterSocketEvent.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "AdapterSocketEvent",
                        "printedName": "NEKit.AdapterSocketEvent",
                        "usr": "s:5NEKit18AdapterSocketEventO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit18AdapterSocketEventO12disconnectedyAcA0bC0CcACmF",
            "mangledName": "$s5NEKit18AdapterSocketEventO12disconnectedyAcA0bC0CcACmF",
            "moduleName": "NEKit"
          },
          {
            "kind": "Var",
            "name": "readData",
            "printedName": "readData",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.AdapterSocketEvent.Type) -> (Foundation.Data, NEKit.AdapterSocket) -> NEKit.AdapterSocketEvent",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(Foundation.Data, NEKit.AdapterSocket) -> NEKit.AdapterSocketEvent",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "AdapterSocketEvent",
                        "printedName": "NEKit.AdapterSocketEvent",
                        "usr": "s:5NEKit18AdapterSocketEventO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Tuple",
                        "printedName": "(Foundation.Data, on: NEKit.AdapterSocket)",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "Data",
                            "printedName": "Foundation.Data",
                            "usr": "s:10Foundation4DataV"
                          },
                          {
                            "kind": "TypeNominal",
                            "name": "AdapterSocket",
                            "printedName": "NEKit.AdapterSocket",
                            "usr": "c:@M@NEKit@objc(cs)AdapterSocket"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.AdapterSocketEvent.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "AdapterSocketEvent",
                        "printedName": "NEKit.AdapterSocketEvent",
                        "usr": "s:5NEKit18AdapterSocketEventO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit18AdapterSocketEventO8readDatayAC10Foundation0F0V_AA0bC0CtcACmF",
            "mangledName": "$s5NEKit18AdapterSocketEventO8readDatayAC10Foundation0F0V_AA0bC0CtcACmF",
            "moduleName": "NEKit"
          },
          {
            "kind": "Var",
            "name": "wroteData",
            "printedName": "wroteData",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.AdapterSocketEvent.Type) -> (Foundation.Data?, NEKit.AdapterSocket) -> NEKit.AdapterSocketEvent",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(Foundation.Data?, NEKit.AdapterSocket) -> NEKit.AdapterSocketEvent",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "AdapterSocketEvent",
                        "printedName": "NEKit.AdapterSocketEvent",
                        "usr": "s:5NEKit18AdapterSocketEventO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Tuple",
                        "printedName": "(Foundation.Data?, on: NEKit.AdapterSocket)",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "Optional",
                            "printedName": "Foundation.Data?",
                            "children": [
                              {
                                "kind": "TypeNominal",
                                "name": "Data",
                                "printedName": "Foundation.Data",
                                "usr": "s:10Foundation4DataV"
                              }
                            ],
                            "usr": "s:Sq"
                          },
                          {
                            "kind": "TypeNominal",
                            "name": "AdapterSocket",
                            "printedName": "NEKit.AdapterSocket",
                            "usr": "c:@M@NEKit@objc(cs)AdapterSocket"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.AdapterSocketEvent.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "AdapterSocketEvent",
                        "printedName": "NEKit.AdapterSocketEvent",
                        "usr": "s:5NEKit18AdapterSocketEventO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit18AdapterSocketEventO9wroteDatayAC10Foundation0F0VSg_AA0bC0CtcACmF",
            "mangledName": "$s5NEKit18AdapterSocketEventO9wroteDatayAC10Foundation0F0VSg_AA0bC0CtcACmF",
            "moduleName": "NEKit"
          },
          {
            "kind": "Var",
            "name": "connected",
            "printedName": "connected",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.AdapterSocketEvent.Type) -> (NEKit.AdapterSocket) -> NEKit.AdapterSocketEvent",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(NEKit.AdapterSocket) -> NEKit.AdapterSocketEvent",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "AdapterSocketEvent",
                        "printedName": "NEKit.AdapterSocketEvent",
                        "usr": "s:5NEKit18AdapterSocketEventO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "AdapterSocket",
                        "printedName": "NEKit.AdapterSocket",
                        "usr": "c:@M@NEKit@objc(cs)AdapterSocket"
                      }
                    ]
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.AdapterSocketEvent.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "AdapterSocketEvent",
                        "printedName": "NEKit.AdapterSocketEvent",
                        "usr": "s:5NEKit18AdapterSocketEventO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit18AdapterSocketEventO9connectedyAcA0bC0CcACmF",
            "mangledName": "$s5NEKit18AdapterSocketEventO9connectedyAcA0bC0CcACmF",
            "moduleName": "NEKit"
          },
          {
            "kind": "Var",
            "name": "readyForForward",
            "printedName": "readyForForward",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.AdapterSocketEvent.Type) -> (NEKit.AdapterSocket) -> NEKit.AdapterSocketEvent",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(NEKit.AdapterSocket) -> NEKit.AdapterSocketEvent",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "AdapterSocketEvent",
                        "printedName": "NEKit.AdapterSocketEvent",
                        "usr": "s:5NEKit18AdapterSocketEventO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "AdapterSocket",
                        "printedName": "NEKit.AdapterSocket",
                        "usr": "c:@M@NEKit@objc(cs)AdapterSocket"
                      }
                    ]
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.AdapterSocketEvent.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "AdapterSocketEvent",
                        "printedName": "NEKit.AdapterSocketEvent",
                        "usr": "s:5NEKit18AdapterSocketEventO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit18AdapterSocketEventO15readyForForwardyAcA0bC0CcACmF",
            "mangledName": "$s5NEKit18AdapterSocketEventO15readyForForwardyAcA0bC0CcACmF",
            "moduleName": "NEKit"
          },
          {
            "kind": "Var",
            "name": "errorOccured",
            "printedName": "errorOccured",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.AdapterSocketEvent.Type) -> (Swift.Error, NEKit.AdapterSocket) -> NEKit.AdapterSocketEvent",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(Swift.Error, NEKit.AdapterSocket) -> NEKit.AdapterSocketEvent",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "AdapterSocketEvent",
                        "printedName": "NEKit.AdapterSocketEvent",
                        "usr": "s:5NEKit18AdapterSocketEventO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Tuple",
                        "printedName": "(Swift.Error, on: NEKit.AdapterSocket)",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "Error",
                            "printedName": "Swift.Error",
                            "usr": "s:s5ErrorP"
                          },
                          {
                            "kind": "TypeNominal",
                            "name": "AdapterSocket",
                            "printedName": "NEKit.AdapterSocket",
                            "usr": "c:@M@NEKit@objc(cs)AdapterSocket"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.AdapterSocketEvent.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "AdapterSocketEvent",
                        "printedName": "NEKit.AdapterSocketEvent",
                        "usr": "s:5NEKit18AdapterSocketEventO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit18AdapterSocketEventO12errorOccuredyACs5Error_p_AA0bC0CtcACmF",
            "mangledName": "$s5NEKit18AdapterSocketEventO12errorOccuredyACs5Error_p_AA0bC0CtcACmF",
            "moduleName": "NEKit"
          }
        ],
        "declKind": "Enum",
        "usr": "s:5NEKit18AdapterSocketEventO",
        "mangledName": "$s5NEKit18AdapterSocketEventO",
        "moduleName": "NEKit",
        "declAttributes": [
          "AccessControl"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "EventType",
            "printedName": "EventType",
            "usr": "s:5NEKit9EventTypeP",
            "mangledName": "$s5NEKit9EventTypeP"
          },
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          }
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "TypeDecl",
        "name": "IPMask",
        "printedName": "IPMask",
        "children": [
          {
            "kind": "Var",
            "name": "IPv4",
            "printedName": "IPv4",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.IPMask.Type) -> (Swift.UInt32) -> NEKit.IPMask",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(Swift.UInt32) -> NEKit.IPMask",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "IPMask",
                        "printedName": "NEKit.IPMask",
                        "usr": "s:5NEKit6IPMaskO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "UInt32",
                        "printedName": "Swift.UInt32",
                        "usr": "s:s6UInt32V"
                      }
                    ]
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.IPMask.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "IPMask",
                        "printedName": "NEKit.IPMask",
                        "usr": "s:5NEKit6IPMaskO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit6IPMaskO4IPv4yACs6UInt32VcACmF",
            "mangledName": "$s5NEKit6IPMaskO4IPv4yACs6UInt32VcACmF",
            "moduleName": "NEKit"
          },
          {
            "kind": "Var",
            "name": "IPv6",
            "printedName": "IPv6",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(NEKit.IPMask.Type) -> (NEKit.UInt128) -> NEKit.IPMask",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(NEKit.UInt128) -> NEKit.IPMask",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "IPMask",
                        "printedName": "NEKit.IPMask",
                        "usr": "s:5NEKit6IPMaskO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "UInt128",
                        "printedName": "NEKit.UInt128",
                        "usr": "s:5NEKit7UInt128V"
                      }
                    ]
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "NEKit.IPMask.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "IPMask",
                        "printedName": "NEKit.IPMask",
                        "usr": "s:5NEKit6IPMaskO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:5NEKit6IPMaskO4IPv6yAcA7UInt128VcACmF",
            "mangledName": "$s5NEKit6IPMaskO4IPv6yAcA7UInt128VcACmF",
            "moduleName": "NEKit"
          }
        ],
        "declKind": "Enum",
        "usr": "s:5NEKit6IPMaskO",
        "mangledName": "$s5NEKit6IPMaskO",
        "moduleName": "NEKit",
        "declAttributes": [
          "AccessControl"
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "Import",
        "name": "CocoaLumberjackSwift",
        "printedName": "CocoaLumberjackSwift",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "TypeDecl",
        "name": "DebugObserverFactory",
        "printedName": "DebugObserverFactory",
        "children": [
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "DebugObserverFactory",
                "printedName": "NEKit.DebugObserverFactory",
                "usr": "s:5NEKit20DebugObserverFactoryC"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit20DebugObserverFactoryCACycfc",
            "mangledName": "$s5NEKit20DebugObserverFactoryCACycfc",
            "moduleName": "NEKit",
            "overriding": true,
            "declAttributes": [
              "Override",
              "AccessControl"
            ],
            "init_kind": "Designated"
          },
          {
            "kind": "Function",
            "name": "getObserverForTunnel",
            "printedName": "getObserverForTunnel(_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "NEKit.Observer<NEKit.TunnelEvent>?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Observer",
                    "printedName": "NEKit.Observer<NEKit.TunnelEvent>",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "TunnelEvent",
                        "printedName": "NEKit.TunnelEvent",
                        "usr": "s:5NEKit11TunnelEventO"
                      }
                    ],
                    "usr": "s:5NEKit8ObserverC"
                  }
                ],
                "usr": "s:Sq"
              },
              {
                "kind": "TypeNominal",
                "name": "Tunnel",
                "printedName": "NEKit.Tunnel",
                "usr": "c:@M@NEKit@objc(cs)Tunnel"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit20DebugObserverFactoryC03getC9ForTunnelyAA0C0CyAA0G5EventOGSgAA0G0CF",
            "mangledName": "$s5NEKit20DebugObserverFactoryC03getC9ForTunnelyAA0C0CyAA0G5EventOGSgAA0G0CF",
            "moduleName": "NEKit",
            "overriding": true,
            "isOpen": true,
            "declAttributes": [
              "AccessControl",
              "Override"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "getObserverForProxyServer",
            "printedName": "getObserverForProxyServer(_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "NEKit.Observer<NEKit.ProxyServerEvent>?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Observer",
                    "printedName": "NEKit.Observer<NEKit.ProxyServerEvent>",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "ProxyServerEvent",
                        "printedName": "NEKit.ProxyServerEvent",
                        "usr": "s:5NEKit16ProxyServerEventO"
                      }
                    ],
                    "usr": "s:5NEKit8ObserverC"
                  }
                ],
                "usr": "s:Sq"
              },
              {
                "kind": "TypeNominal",
                "name": "ProxyServer",
                "printedName": "NEKit.ProxyServer",
                "usr": "c:@M@NEKit@objc(cs)ProxyServer"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit20DebugObserverFactoryC03getC14ForProxyServeryAA0C0CyAA0gH5EventOGSgAA0gH0CF",
            "mangledName": "$s5NEKit20DebugObserverFactoryC03getC14ForProxyServeryAA0C0CyAA0gH5EventOGSgAA0gH0CF",
            "moduleName": "NEKit",
            "overriding": true,
            "isOpen": true,
            "declAttributes": [
              "AccessControl",
              "Override"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "getObserverForProxySocket",
            "printedName": "getObserverForProxySocket(_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "NEKit.Observer<NEKit.ProxySocketEvent>?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Observer",
                    "printedName": "NEKit.Observer<NEKit.ProxySocketEvent>",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "ProxySocketEvent",
                        "printedName": "NEKit.ProxySocketEvent",
                        "usr": "s:5NEKit16ProxySocketEventO"
                      }
                    ],
                    "usr": "s:5NEKit8ObserverC"
                  }
                ],
                "usr": "s:Sq"
              },
              {
                "kind": "TypeNominal",
                "name": "ProxySocket",
                "printedName": "NEKit.ProxySocket",
                "usr": "c:@M@NEKit@objc(cs)ProxySocket"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit20DebugObserverFactoryC03getC14ForProxySocketyAA0C0CyAA0gH5EventOGSgAA0gH0CF",
            "mangledName": "$s5NEKit20DebugObserverFactoryC03getC14ForProxySocketyAA0C0CyAA0gH5EventOGSgAA0gH0CF",
            "moduleName": "NEKit",
            "overriding": true,
            "isOpen": true,
            "declAttributes": [
              "AccessControl",
              "Override"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "getObserverForAdapterSocket",
            "printedName": "getObserverForAdapterSocket(_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "NEKit.Observer<NEKit.AdapterSocketEvent>?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Observer",
                    "printedName": "NEKit.Observer<NEKit.AdapterSocketEvent>",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "AdapterSocketEvent",
                        "printedName": "NEKit.AdapterSocketEvent",
                        "usr": "s:5NEKit18AdapterSocketEventO"
                      }
                    ],
                    "usr": "s:5NEKit8ObserverC"
                  }
                ],
                "usr": "s:Sq"
              },
              {
                "kind": "TypeNominal",
                "name": "AdapterSocket",
                "printedName": "NEKit.AdapterSocket",
                "usr": "c:@M@NEKit@objc(cs)AdapterSocket"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit20DebugObserverFactoryC03getC16ForAdapterSocketyAA0C0CyAA0gH5EventOGSgAA0gH0CF",
            "mangledName": "$s5NEKit20DebugObserverFactoryC03getC16ForAdapterSocketyAA0C0CyAA0gH5EventOGSgAA0gH0CF",
            "moduleName": "NEKit",
            "overriding": true,
            "isOpen": true,
            "declAttributes": [
              "AccessControl",
              "Override"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "getObserverForRuleManager",
            "printedName": "getObserverForRuleManager(_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "NEKit.Observer<NEKit.RuleMatchEvent>?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Observer",
                    "printedName": "NEKit.Observer<NEKit.RuleMatchEvent>",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "RuleMatchEvent",
                        "printedName": "NEKit.RuleMatchEvent",
                        "usr": "s:5NEKit14RuleMatchEventO"
                      }
                    ],
                    "usr": "s:5NEKit8ObserverC"
                  }
                ],
                "usr": "s:Sq"
              },
              {
                "kind": "TypeNominal",
                "name": "RuleManager",
                "printedName": "NEKit.RuleManager",
                "usr": "s:5NEKit11RuleManagerC"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit20DebugObserverFactoryC03getC14ForRuleManageryAA0C0CyAA0G10MatchEventOGSgAA0gH0CF",
            "mangledName": "$s5NEKit20DebugObserverFactoryC03getC14ForRuleManageryAA0C0CyAA0G10MatchEventOGSgAA0gH0CF",
            "moduleName": "NEKit",
            "overriding": true,
            "isOpen": true,
            "declAttributes": [
              "Override",
              "AccessControl"
            ],
            "funcSelfKind": "NonMutating"
          }
        ],
        "declKind": "Class",
        "usr": "s:5NEKit20DebugObserverFactoryC",
        "mangledName": "$s5NEKit20DebugObserverFactoryC",
        "moduleName": "NEKit",
        "isOpen": true,
        "declAttributes": [
          "AccessControl"
        ],
        "superclassUsr": "s:5NEKit15ObserverFactoryC",
        "inheritsConvenienceInitializers": true,
        "superclassNames": [
          "NEKit.ObserverFactory"
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "DebugTunnelObserver",
        "printedName": "DebugTunnelObserver",
        "children": [
          {
            "kind": "Function",
            "name": "signal",
            "printedName": "signal(_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "TunnelEvent",
                "printedName": "NEKit.TunnelEvent",
                "usr": "s:5NEKit11TunnelEventO"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit19DebugTunnelObserverC6signalyyAA0C5EventOF",
            "mangledName": "$s5NEKit19DebugTunnelObserverC6signalyyAA0C5EventOF",
            "moduleName": "NEKit",
            "overriding": true,
            "isOpen": true,
            "declAttributes": [
              "AccessControl",
              "Override"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "DebugTunnelObserver",
                "printedName": "NEKit.DebugTunnelObserver",
                "usr": "s:5NEKit19DebugTunnelObserverC"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit19DebugTunnelObserverCACycfc",
            "mangledName": "$s5NEKit19DebugTunnelObserverCACycfc",
            "moduleName": "NEKit",
            "overriding": true,
            "implicit": true,
            "declAttributes": [
              "Override"
            ],
            "init_kind": "Designated"
          }
        ],
        "declKind": "Class",
        "usr": "s:5NEKit19DebugTunnelObserverC",
        "mangledName": "$s5NEKit19DebugTunnelObserverC",
        "moduleName": "NEKit",
        "isOpen": true,
        "declAttributes": [
          "AccessControl"
        ],
        "superclassUsr": "s:5NEKit8ObserverC",
        "inheritsConvenienceInitializers": true,
        "superclassNames": [
          "NEKit.Observer<NEKit.TunnelEvent>"
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "DebugProxySocketObserver",
        "printedName": "DebugProxySocketObserver",
        "children": [
          {
            "kind": "Function",
            "name": "signal",
            "printedName": "signal(_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "ProxySocketEvent",
                "printedName": "NEKit.ProxySocketEvent",
                "usr": "s:5NEKit16ProxySocketEventO"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit24DebugProxySocketObserverC6signalyyAA0cD5EventOF",
            "mangledName": "$s5NEKit24DebugProxySocketObserverC6signalyyAA0cD5EventOF",
            "moduleName": "NEKit",
            "overriding": true,
            "isOpen": true,
            "declAttributes": [
              "AccessControl",
              "Override"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "DebugProxySocketObserver",
                "printedName": "NEKit.DebugProxySocketObserver",
                "usr": "s:5NEKit24DebugProxySocketObserverC"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit24DebugProxySocketObserverCACycfc",
            "mangledName": "$s5NEKit24DebugProxySocketObserverCACycfc",
            "moduleName": "NEKit",
            "overriding": true,
            "implicit": true,
            "declAttributes": [
              "Override"
            ],
            "init_kind": "Designated"
          }
        ],
        "declKind": "Class",
        "usr": "s:5NEKit24DebugProxySocketObserverC",
        "mangledName": "$s5NEKit24DebugProxySocketObserverC",
        "moduleName": "NEKit",
        "isOpen": true,
        "declAttributes": [
          "AccessControl"
        ],
        "superclassUsr": "s:5NEKit8ObserverC",
        "inheritsConvenienceInitializers": true,
        "superclassNames": [
          "NEKit.Observer<NEKit.ProxySocketEvent>"
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "DebugAdapterSocketObserver",
        "printedName": "DebugAdapterSocketObserver",
        "children": [
          {
            "kind": "Function",
            "name": "signal",
            "printedName": "signal(_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "AdapterSocketEvent",
                "printedName": "NEKit.AdapterSocketEvent",
                "usr": "s:5NEKit18AdapterSocketEventO"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit26DebugAdapterSocketObserverC6signalyyAA0cD5EventOF",
            "mangledName": "$s5NEKit26DebugAdapterSocketObserverC6signalyyAA0cD5EventOF",
            "moduleName": "NEKit",
            "overriding": true,
            "isOpen": true,
            "declAttributes": [
              "AccessControl",
              "Override"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "DebugAdapterSocketObserver",
                "printedName": "NEKit.DebugAdapterSocketObserver",
                "usr": "s:5NEKit26DebugAdapterSocketObserverC"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit26DebugAdapterSocketObserverCACycfc",
            "mangledName": "$s5NEKit26DebugAdapterSocketObserverCACycfc",
            "moduleName": "NEKit",
            "overriding": true,
            "implicit": true,
            "declAttributes": [
              "Override"
            ],
            "init_kind": "Designated"
          }
        ],
        "declKind": "Class",
        "usr": "s:5NEKit26DebugAdapterSocketObserverC",
        "mangledName": "$s5NEKit26DebugAdapterSocketObserverC",
        "moduleName": "NEKit",
        "isOpen": true,
        "declAttributes": [
          "AccessControl"
        ],
        "superclassUsr": "s:5NEKit8ObserverC",
        "inheritsConvenienceInitializers": true,
        "superclassNames": [
          "NEKit.Observer<NEKit.AdapterSocketEvent>"
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "DebugProxyServerObserver",
        "printedName": "DebugProxyServerObserver",
        "children": [
          {
            "kind": "Function",
            "name": "signal",
            "printedName": "signal(_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "ProxyServerEvent",
                "printedName": "NEKit.ProxyServerEvent",
                "usr": "s:5NEKit16ProxyServerEventO"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit24DebugProxyServerObserverC6signalyyAA0cD5EventOF",
            "mangledName": "$s5NEKit24DebugProxyServerObserverC6signalyyAA0cD5EventOF",
            "moduleName": "NEKit",
            "overriding": true,
            "isOpen": true,
            "declAttributes": [
              "AccessControl",
              "Override"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "DebugProxyServerObserver",
                "printedName": "NEKit.DebugProxyServerObserver",
                "usr": "s:5NEKit24DebugProxyServerObserverC"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit24DebugProxyServerObserverCACycfc",
            "mangledName": "$s5NEKit24DebugProxyServerObserverCACycfc",
            "moduleName": "NEKit",
            "overriding": true,
            "implicit": true,
            "declAttributes": [
              "Override"
            ],
            "init_kind": "Designated"
          }
        ],
        "declKind": "Class",
        "usr": "s:5NEKit24DebugProxyServerObserverC",
        "mangledName": "$s5NEKit24DebugProxyServerObserverC",
        "moduleName": "NEKit",
        "isOpen": true,
        "declAttributes": [
          "AccessControl"
        ],
        "superclassUsr": "s:5NEKit8ObserverC",
        "inheritsConvenienceInitializers": true,
        "superclassNames": [
          "NEKit.Observer<NEKit.ProxyServerEvent>"
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "DebugRuleManagerObserver",
        "printedName": "DebugRuleManagerObserver",
        "children": [
          {
            "kind": "Function",
            "name": "signal",
            "printedName": "signal(_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "RuleMatchEvent",
                "printedName": "NEKit.RuleMatchEvent",
                "usr": "s:5NEKit14RuleMatchEventO"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit24DebugRuleManagerObserverC6signalyyAA0C10MatchEventOF",
            "mangledName": "$s5NEKit24DebugRuleManagerObserverC6signalyyAA0C10MatchEventOF",
            "moduleName": "NEKit",
            "overriding": true,
            "isOpen": true,
            "declAttributes": [
              "Override",
              "AccessControl"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "DebugRuleManagerObserver",
                "printedName": "NEKit.DebugRuleManagerObserver",
                "usr": "s:5NEKit24DebugRuleManagerObserverC"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit24DebugRuleManagerObserverCACycfc",
            "mangledName": "$s5NEKit24DebugRuleManagerObserverCACycfc",
            "moduleName": "NEKit",
            "overriding": true,
            "implicit": true,
            "declAttributes": [
              "Override"
            ],
            "init_kind": "Designated"
          }
        ],
        "declKind": "Class",
        "usr": "s:5NEKit24DebugRuleManagerObserverC",
        "mangledName": "$s5NEKit24DebugRuleManagerObserverC",
        "moduleName": "NEKit",
        "isOpen": true,
        "declAttributes": [
          "AccessControl"
        ],
        "superclassUsr": "s:5NEKit8ObserverC",
        "inheritsConvenienceInitializers": true,
        "superclassNames": [
          "NEKit.Observer<NEKit.RuleMatchEvent>"
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "NEKit",
        "declAttributes": [
          "RawDocComment"
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "TypeDecl",
        "name": "SOCKS5Adapter",
        "printedName": "SOCKS5Adapter",
        "children": [
          {
            "kind": "Var",
            "name": "serverHost",
            "printedName": "serverHost",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit13SOCKS5AdapterC10serverHostSSvp",
            "mangledName": "$s5NEKit13SOCKS5AdapterC10serverHostSSvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "Final",
              "HasStorage",
              "AccessControl"
            ],
            "isLet": true,
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit13SOCKS5AdapterC10serverHostSSvg",
                "mangledName": "$s5NEKit13SOCKS5AdapterC10serverHostSSvg",
                "moduleName": "NEKit",
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "serverPort",
            "printedName": "serverPort",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit13SOCKS5AdapterC10serverPortSivp",
            "mangledName": "$s5NEKit13SOCKS5AdapterC10serverPortSivp",
            "moduleName": "NEKit",
            "declAttributes": [
              "Final",
              "HasStorage",
              "AccessControl"
            ],
            "isLet": true,
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit13SOCKS5AdapterC10serverPortSivg",
                "mangledName": "$s5NEKit13SOCKS5AdapterC10serverPortSivg",
                "moduleName": "NEKit",
                "implicit": true,
                "declAttributes": [
                  "Final"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "TypeDecl",
            "name": "ReadTag",
            "printedName": "ReadTag",
            "children": [
              {
                "kind": "Var",
                "name": "methodResponse",
                "printedName": "methodResponse",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(NEKit.SOCKS5Adapter.ReadTag.Type) -> NEKit.SOCKS5Adapter.ReadTag",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "ReadTag",
                        "printedName": "NEKit.SOCKS5Adapter.ReadTag",
                        "usr": "s:5NEKit13SOCKS5AdapterC7ReadTagO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Metatype",
                        "printedName": "NEKit.SOCKS5Adapter.ReadTag.Type",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "ReadTag",
                            "printedName": "NEKit.SOCKS5Adapter.ReadTag",
                            "usr": "s:5NEKit13SOCKS5AdapterC7ReadTagO"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "declKind": "EnumElement",
                "usr": "s:5NEKit13SOCKS5AdapterC7ReadTagO14methodResponseyA2EmF",
                "mangledName": "$s5NEKit13SOCKS5AdapterC7ReadTagO14methodResponseyA2EmF",
                "moduleName": "NEKit"
              },
              {
                "kind": "Var",
                "name": "connectResponseFirstPart",
                "printedName": "connectResponseFirstPart",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(NEKit.SOCKS5Adapter.ReadTag.Type) -> NEKit.SOCKS5Adapter.ReadTag",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "ReadTag",
                        "printedName": "NEKit.SOCKS5Adapter.ReadTag",
                        "usr": "s:5NEKit13SOCKS5AdapterC7ReadTagO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Metatype",
                        "printedName": "NEKit.SOCKS5Adapter.ReadTag.Type",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "ReadTag",
                            "printedName": "NEKit.SOCKS5Adapter.ReadTag",
                            "usr": "s:5NEKit13SOCKS5AdapterC7ReadTagO"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "declKind": "EnumElement",
                "usr": "s:5NEKit13SOCKS5AdapterC7ReadTagO24connectResponseFirstPartyA2EmF",
                "mangledName": "$s5NEKit13SOCKS5AdapterC7ReadTagO24connectResponseFirstPartyA2EmF",
                "moduleName": "NEKit"
              },
              {
                "kind": "Var",
                "name": "connectResponseSecondPart",
                "printedName": "connectResponseSecondPart",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(NEKit.SOCKS5Adapter.ReadTag.Type) -> NEKit.SOCKS5Adapter.ReadTag",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "ReadTag",
                        "printedName": "NEKit.SOCKS5Adapter.ReadTag",
                        "usr": "s:5NEKit13SOCKS5AdapterC7ReadTagO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Metatype",
                        "printedName": "NEKit.SOCKS5Adapter.ReadTag.Type",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "ReadTag",
                            "printedName": "NEKit.SOCKS5Adapter.ReadTag",
                            "usr": "s:5NEKit13SOCKS5AdapterC7ReadTagO"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "declKind": "EnumElement",
                "usr": "s:5NEKit13SOCKS5AdapterC7ReadTagO25connectResponseSecondPartyA2EmF",
                "mangledName": "$s5NEKit13SOCKS5AdapterC7ReadTagO25connectResponseSecondPartyA2EmF",
                "moduleName": "NEKit"
              },
              {
                "kind": "Constructor",
                "name": "init",
                "printedName": "init(rawValue:)",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "NEKit.SOCKS5Adapter.ReadTag?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "ReadTag",
                        "printedName": "NEKit.SOCKS5Adapter.ReadTag",
                        "usr": "s:5NEKit13SOCKS5AdapterC7ReadTagO"
                      }
                    ],
                    "usr": "s:Sq"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ],
                "declKind": "Constructor",
                "usr": "s:5NEKit13SOCKS5AdapterC7ReadTagO8rawValueAESgSi_tcfc",
                "mangledName": "$s5NEKit13SOCKS5AdapterC7ReadTagO8rawValueAESgSi_tcfc",
                "moduleName": "NEKit",
                "implicit": true,
                "init_kind": "Designated"
              },
              {
                "kind": "Var",
                "name": "rawValue",
                "printedName": "rawValue",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ],
                "declKind": "Var",
                "usr": "s:5NEKit13SOCKS5AdapterC7ReadTagO8rawValueSivp",
                "mangledName": "$s5NEKit13SOCKS5AdapterC7ReadTagO8rawValueSivp",
                "moduleName": "NEKit",
                "implicit": true,
                "accessors": [
                  {
                    "kind": "Accessor",
                    "name": "Get",
                    "printedName": "Get()",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Int",
                        "printedName": "Swift.Int",
                        "usr": "s:Si"
                      }
                    ],
                    "declKind": "Accessor",
                    "usr": "s:5NEKit13SOCKS5AdapterC7ReadTagO8rawValueSivg",
                    "mangledName": "$s5NEKit13SOCKS5AdapterC7ReadTagO8rawValueSivg",
                    "moduleName": "NEKit",
                    "implicit": true,
                    "accessorKind": "get"
                  }
                ]
              }
            ],
            "declKind": "Enum",
            "usr": "s:5NEKit13SOCKS5AdapterC7ReadTagO",
            "mangledName": "$s5NEKit13SOCKS5AdapterC7ReadTagO",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "enumRawTypeName": "Int",
            "conformances": [
              {
                "kind": "Conformance",
                "name": "Equatable",
                "printedName": "Equatable",
                "usr": "s:SQ",
                "mangledName": "$sSQ"
              },
              {
                "kind": "Conformance",
                "name": "Hashable",
                "printedName": "Hashable",
                "usr": "s:SH",
                "mangledName": "$sSH"
              },
              {
                "kind": "Conformance",
                "name": "RawRepresentable",
                "printedName": "RawRepresentable",
                "children": [
                  {
                    "kind": "TypeWitness",
                    "name": "RawValue",
                    "printedName": "RawValue",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Int",
                        "printedName": "Swift.Int",
                        "usr": "s:Si"
                      }
                    ]
                  }
                ],
                "usr": "s:SY",
                "mangledName": "$sSY"
              }
            ]
          },
          {
            "kind": "TypeDecl",
            "name": "WriteTag",
            "printedName": "WriteTag",
            "children": [
              {
                "kind": "Var",
                "name": "open",
                "printedName": "open",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(NEKit.SOCKS5Adapter.WriteTag.Type) -> NEKit.SOCKS5Adapter.WriteTag",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "WriteTag",
                        "printedName": "NEKit.SOCKS5Adapter.WriteTag",
                        "usr": "s:5NEKit13SOCKS5AdapterC8WriteTagO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Metatype",
                        "printedName": "NEKit.SOCKS5Adapter.WriteTag.Type",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "WriteTag",
                            "printedName": "NEKit.SOCKS5Adapter.WriteTag",
                            "usr": "s:5NEKit13SOCKS5AdapterC8WriteTagO"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "declKind": "EnumElement",
                "usr": "s:5NEKit13SOCKS5AdapterC8WriteTagO4openyA2EmF",
                "mangledName": "$s5NEKit13SOCKS5AdapterC8WriteTagO4openyA2EmF",
                "moduleName": "NEKit"
              },
              {
                "kind": "Var",
                "name": "connectIPv4",
                "printedName": "connectIPv4",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(NEKit.SOCKS5Adapter.WriteTag.Type) -> NEKit.SOCKS5Adapter.WriteTag",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "WriteTag",
                        "printedName": "NEKit.SOCKS5Adapter.WriteTag",
                        "usr": "s:5NEKit13SOCKS5AdapterC8WriteTagO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Metatype",
                        "printedName": "NEKit.SOCKS5Adapter.WriteTag.Type",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "WriteTag",
                            "printedName": "NEKit.SOCKS5Adapter.WriteTag",
                            "usr": "s:5NEKit13SOCKS5AdapterC8WriteTagO"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "declKind": "EnumElement",
                "usr": "s:5NEKit13SOCKS5AdapterC8WriteTagO11connectIPv4yA2EmF",
                "mangledName": "$s5NEKit13SOCKS5AdapterC8WriteTagO11connectIPv4yA2EmF",
                "moduleName": "NEKit"
              },
              {
                "kind": "Var",
                "name": "connectIPv6",
                "printedName": "connectIPv6",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(NEKit.SOCKS5Adapter.WriteTag.Type) -> NEKit.SOCKS5Adapter.WriteTag",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "WriteTag",
                        "printedName": "NEKit.SOCKS5Adapter.WriteTag",
                        "usr": "s:5NEKit13SOCKS5AdapterC8WriteTagO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Metatype",
                        "printedName": "NEKit.SOCKS5Adapter.WriteTag.Type",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "WriteTag",
                            "printedName": "NEKit.SOCKS5Adapter.WriteTag",
                            "usr": "s:5NEKit13SOCKS5AdapterC8WriteTagO"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "declKind": "EnumElement",
                "usr": "s:5NEKit13SOCKS5AdapterC8WriteTagO11connectIPv6yA2EmF",
                "mangledName": "$s5NEKit13SOCKS5AdapterC8WriteTagO11connectIPv6yA2EmF",
                "moduleName": "NEKit"
              },
              {
                "kind": "Var",
                "name": "connectDomainLength",
                "printedName": "connectDomainLength",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(NEKit.SOCKS5Adapter.WriteTag.Type) -> NEKit.SOCKS5Adapter.WriteTag",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "WriteTag",
                        "printedName": "NEKit.SOCKS5Adapter.WriteTag",
                        "usr": "s:5NEKit13SOCKS5AdapterC8WriteTagO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Metatype",
                        "printedName": "NEKit.SOCKS5Adapter.WriteTag.Type",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "WriteTag",
                            "printedName": "NEKit.SOCKS5Adapter.WriteTag",
                            "usr": "s:5NEKit13SOCKS5AdapterC8WriteTagO"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "declKind": "EnumElement",
                "usr": "s:5NEKit13SOCKS5AdapterC8WriteTagO19connectDomainLengthyA2EmF",
                "mangledName": "$s5NEKit13SOCKS5AdapterC8WriteTagO19connectDomainLengthyA2EmF",
                "moduleName": "NEKit"
              },
              {
                "kind": "Var",
                "name": "connectPort",
                "printedName": "connectPort",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(NEKit.SOCKS5Adapter.WriteTag.Type) -> NEKit.SOCKS5Adapter.WriteTag",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "WriteTag",
                        "printedName": "NEKit.SOCKS5Adapter.WriteTag",
                        "usr": "s:5NEKit13SOCKS5AdapterC8WriteTagO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Metatype",
                        "printedName": "NEKit.SOCKS5Adapter.WriteTag.Type",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "WriteTag",
                            "printedName": "NEKit.SOCKS5Adapter.WriteTag",
                            "usr": "s:5NEKit13SOCKS5AdapterC8WriteTagO"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "declKind": "EnumElement",
                "usr": "s:5NEKit13SOCKS5AdapterC8WriteTagO11connectPortyA2EmF",
                "mangledName": "$s5NEKit13SOCKS5AdapterC8WriteTagO11connectPortyA2EmF",
                "moduleName": "NEKit"
              },
              {
                "kind": "Constructor",
                "name": "init",
                "printedName": "init(rawValue:)",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Optional",
                    "printedName": "NEKit.SOCKS5Adapter.WriteTag?",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "WriteTag",
                        "printedName": "NEKit.SOCKS5Adapter.WriteTag",
                        "usr": "s:5NEKit13SOCKS5AdapterC8WriteTagO"
                      }
                    ],
                    "usr": "s:Sq"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ],
                "declKind": "Constructor",
                "usr": "s:5NEKit13SOCKS5AdapterC8WriteTagO8rawValueAESgSi_tcfc",
                "mangledName": "$s5NEKit13SOCKS5AdapterC8WriteTagO8rawValueAESgSi_tcfc",
                "moduleName": "NEKit",
                "implicit": true,
                "init_kind": "Designated"
              },
              {
                "kind": "Var",
                "name": "rawValue",
                "printedName": "rawValue",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ],
                "declKind": "Var",
                "usr": "s:5NEKit13SOCKS5AdapterC8WriteTagO8rawValueSivp",
                "mangledName": "$s5NEKit13SOCKS5AdapterC8WriteTagO8rawValueSivp",
                "moduleName": "NEKit",
                "implicit": true,
                "accessors": [
                  {
                    "kind": "Accessor",
                    "name": "Get",
                    "printedName": "Get()",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Int",
                        "printedName": "Swift.Int",
                        "usr": "s:Si"
                      }
                    ],
                    "declKind": "Accessor",
                    "usr": "s:5NEKit13SOCKS5AdapterC8WriteTagO8rawValueSivg",
                    "mangledName": "$s5NEKit13SOCKS5AdapterC8WriteTagO8rawValueSivg",
                    "moduleName": "NEKit",
                    "implicit": true,
                    "accessorKind": "get"
                  }
                ]
              }
            ],
            "declKind": "Enum",
            "usr": "s:5NEKit13SOCKS5AdapterC8WriteTagO",
            "mangledName": "$s5NEKit13SOCKS5AdapterC8WriteTagO",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "enumRawTypeName": "Int",
            "conformances": [
              {
                "kind": "Conformance",
                "name": "Equatable",
                "printedName": "Equatable",
                "usr": "s:SQ",
                "mangledName": "$sSQ"
              },
              {
                "kind": "Conformance",
                "name": "Hashable",
                "printedName": "Hashable",
                "usr": "s:SH",
                "mangledName": "$sSH"
              },
              {
                "kind": "Conformance",
                "name": "RawRepresentable",
                "printedName": "RawRepresentable",
                "children": [
                  {
                    "kind": "TypeWitness",
                    "name": "RawValue",
                    "printedName": "RawValue",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Int",
                        "printedName": "Swift.Int",
                        "usr": "s:Si"
                      }
                    ]
                  }
                ],
                "usr": "s:SY",
                "mangledName": "$sSY"
              }
            ]
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(serverHost:serverPort:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "SOCKS5Adapter",
                "printedName": "NEKit.SOCKS5Adapter",
                "usr": "c:@M@NEKit@objc(cs)SOCKS5Adapter"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              },
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit13SOCKS5AdapterC10serverHost0D4PortACSS_Sitcfc",
            "mangledName": "$s5NEKit13SOCKS5AdapterC10serverHost0D4PortACSS_Sitcfc",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "init_kind": "Designated"
          },
          {
            "kind": "Function",
            "name": "openSocketWith",
            "printedName": "openSocketWith(session:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "ConnectSession",
                "printedName": "NEKit.ConnectSession",
                "usr": "s:5NEKit14ConnectSessionC"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit13SOCKS5AdapterC14openSocketWith7sessionyAA14ConnectSessionC_tF",
            "mangledName": "$s5NEKit13SOCKS5AdapterC14openSocketWith7sessionyAA14ConnectSessionC_tF",
            "moduleName": "NEKit",
            "overriding": true,
            "declAttributes": [
              "Override",
              "AccessControl"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "didConnectWith",
            "printedName": "didConnectWith(socket:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "RawTCPSocketProtocol",
                "printedName": "NEKit.RawTCPSocketProtocol",
                "usr": "s:5NEKit20RawTCPSocketProtocolP"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit13SOCKS5AdapterC14didConnectWith6socketyAA20RawTCPSocketProtocol_p_tF",
            "mangledName": "$s5NEKit13SOCKS5AdapterC14didConnectWith6socketyAA20RawTCPSocketProtocol_p_tF",
            "moduleName": "NEKit",
            "overriding": true,
            "declAttributes": [
              "Override",
              "AccessControl"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "didRead",
            "printedName": "didRead(data:from:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              },
              {
                "kind": "TypeNominal",
                "name": "RawTCPSocketProtocol",
                "printedName": "NEKit.RawTCPSocketProtocol",
                "usr": "s:5NEKit20RawTCPSocketProtocolP"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit13SOCKS5AdapterC7didRead4data4fromy10Foundation4DataV_AA20RawTCPSocketProtocol_ptF",
            "mangledName": "$s5NEKit13SOCKS5AdapterC7didRead4data4fromy10Foundation4DataV_AA20RawTCPSocketProtocol_ptF",
            "moduleName": "NEKit",
            "overriding": true,
            "declAttributes": [
              "Override",
              "AccessControl"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "didWrite",
            "printedName": "didWrite(data:by:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Foundation.Data?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Data",
                    "printedName": "Foundation.Data",
                    "usr": "s:10Foundation4DataV"
                  }
                ],
                "usr": "s:Sq"
              },
              {
                "kind": "TypeNominal",
                "name": "RawTCPSocketProtocol",
                "printedName": "NEKit.RawTCPSocketProtocol",
                "usr": "s:5NEKit20RawTCPSocketProtocolP"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit13SOCKS5AdapterC8didWrite4data2byy10Foundation4DataVSg_AA20RawTCPSocketProtocol_ptF",
            "mangledName": "$s5NEKit13SOCKS5AdapterC8didWrite4data2byy10Foundation4DataVSg_AA20RawTCPSocketProtocol_ptF",
            "moduleName": "NEKit",
            "overriding": true,
            "declAttributes": [
              "AccessControl",
              "Override"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(observe:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "SOCKS5Adapter",
                "printedName": "NEKit.SOCKS5Adapter",
                "usr": "c:@M@NEKit@objc(cs)SOCKS5Adapter"
              },
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "hasDefaultArg": true,
                "usr": "s:Sb"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit13SOCKS5AdapterC7observeACSb_tcfc",
            "mangledName": "$s5NEKit13SOCKS5AdapterC7observeACSb_tcfc",
            "moduleName": "NEKit",
            "overriding": true,
            "implicit": true,
            "declAttributes": [
              "Override"
            ],
            "init_kind": "Designated"
          }
        ],
        "declKind": "Class",
        "usr": "c:@M@NEKit@objc(cs)SOCKS5Adapter",
        "mangledName": "$s5NEKit13SOCKS5AdapterC",
        "moduleName": "NEKit",
        "declAttributes": [
          "AccessControl",
          "ObjC"
        ],
        "superclassUsr": "c:@M@NEKit@objc(cs)AdapterSocket",
        "superclassNames": [
          "NEKit.AdapterSocket",
          "ObjectiveC.NSObject"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "SocketProtocol",
            "printedName": "SocketProtocol",
            "usr": "s:5NEKit14SocketProtocolP",
            "mangledName": "$s5NEKit14SocketProtocolP"
          },
          {
            "kind": "Conformance",
            "name": "RawTCPSocketDelegate",
            "printedName": "RawTCPSocketDelegate",
            "usr": "s:5NEKit20RawTCPSocketDelegateP",
            "mangledName": "$s5NEKit20RawTCPSocketDelegateP"
          },
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "CVarArg",
            "printedName": "CVarArg",
            "usr": "s:s7CVarArgP",
            "mangledName": "$ss7CVarArgP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObservingPublishing",
            "printedName": "_KeyValueCodingAndObservingPublishing",
            "usr": "s:10Foundation37_KeyValueCodingAndObservingPublishingP",
            "mangledName": "$s10Foundation37_KeyValueCodingAndObservingPublishingP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObserving",
            "printedName": "_KeyValueCodingAndObserving",
            "usr": "s:10Foundation27_KeyValueCodingAndObservingP",
            "mangledName": "$s10Foundation27_KeyValueCodingAndObservingP"
          },
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "CustomDebugStringConvertible",
            "printedName": "CustomDebugStringConvertible",
            "usr": "s:s28CustomDebugStringConvertibleP",
            "mangledName": "$ss28CustomDebugStringConvertibleP"
          }
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "NEKit"
      },
      {
        "kind": "TypeDecl",
        "name": "HTTPAuthentication",
        "printedName": "HTTPAuthentication",
        "children": [
          {
            "kind": "Var",
            "name": "username",
            "printedName": "username",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit18HTTPAuthenticationV8usernameSSvp",
            "mangledName": "$s5NEKit18HTTPAuthenticationV8usernameSSvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "HasStorage",
              "AccessControl",
              "RawDocComment"
            ],
            "isLet": true,
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit18HTTPAuthenticationV8usernameSSvg",
                "mangledName": "$s5NEKit18HTTPAuthenticationV8usernameSSvg",
                "moduleName": "NEKit",
                "implicit": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "password",
            "printedName": "password",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Var",
            "usr": "s:5NEKit18HTTPAuthenticationV8passwordSSvp",
            "mangledName": "$s5NEKit18HTTPAuthenticationV8passwordSSvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "HasStorage",
              "AccessControl",
              "RawDocComment"
            ],
            "isLet": true,
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:5NEKit18HTTPAuthenticationV8passwordSSvg",
                "mangledName": "$s5NEKit18HTTPAuthenticationV8passwordSSvg",
                "moduleName": "NEKit",
                "implicit": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(username:password:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "HTTPAuthentication",
                "printedName": "NEKit.HTTPAuthentication",
                "usr": "s:5NEKit18HTTPAuthenticationV"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:5NEKit18HTTPAuthenticationV8username8passwordACSS_SStcfc",
            "mangledName": "$s5NEKit18HTTPAuthenticationV8username8passwordACSS_SStcfc",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "init_kind": "Designated"
          },
          {
            "kind": "Function",
            "name": "encoding",
            "printedName": "encoding()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Swift.String?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit18HTTPAuthenticationV8encodingSSSgyF",
            "mangledName": "$s5NEKit18HTTPAuthenticationV8encodingSSSgyF",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "authString",
            "printedName": "authString()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Func",
            "usr": "s:5NEKit18HTTPAuthenticationV10authStringSSyF",
            "mangledName": "$s5NEKit18HTTPAuthenticationV10authStringSSyF",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          }
        ],
        "declKind": "Struct",
        "usr": "s:5NEKit18HTTPAuthenticationV",
        "mangledName": "$s5NEKit18HTTPAuthenticationV",
        "moduleName": "NEKit",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "BinaryFloatingPoint",
        "printedName": "BinaryFloatingPoint",
        "children": [
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "GenericTypeParam",
                "printedName": "τ_0_0"
              },
              {
                "kind": "TypeNominal",
                "name": "UInt128",
                "printedName": "NEKit.UInt128",
                "usr": "s:5NEKit7UInt128V"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:SB5NEKitEyxAA7UInt128Vcfc",
            "mangledName": "$sSB5NEKitEyxAA7UInt128Vcfc",
            "moduleName": "NEKit",
            "genericSig": "<τ_0_0 where τ_0_0 : Swift.BinaryFloatingPoint>",
            "sugared_genericSig": "<Self where Self : Swift.BinaryFloatingPoint>",
            "declAttributes": [
              "AccessControl"
            ],
            "isFromExtension": true,
            "init_kind": "Convenience"
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(exactly:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "τ_0_0?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:Sq"
              },
              {
                "kind": "TypeNominal",
                "name": "UInt128",
                "printedName": "NEKit.UInt128",
                "usr": "s:5NEKit7UInt128V"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:SB5NEKitE7exactlyxSgAA7UInt128V_tcfc",
            "mangledName": "$sSB5NEKitE7exactlyxSgAA7UInt128V_tcfc",
            "moduleName": "NEKit",
            "genericSig": "<τ_0_0 where τ_0_0 : Swift.BinaryFloatingPoint>",
            "sugared_genericSig": "<Self where Self : Swift.BinaryFloatingPoint>",
            "declAttributes": [
              "AccessControl"
            ],
            "isFromExtension": true,
            "init_kind": "Convenience"
          }
        ],
        "declKind": "Protocol",
        "usr": "s:SB",
        "mangledName": "$sSB",
        "moduleName": "Swift",
        "genericSig": "<τ_0_0 : Swift.ExpressibleByFloatLiteral, τ_0_0 : Swift.FloatingPoint, τ_0_0.RawExponent : Swift.UnsignedInteger, τ_0_0.RawSignificand : Swift.UnsignedInteger>",
        "sugared_genericSig": "<Self : Swift.ExpressibleByFloatLiteral, Self : Swift.FloatingPoint, Self.RawExponent : Swift.UnsignedInteger, Self.RawSignificand : Swift.UnsignedInteger>",
        "isExternal": true,
        "conformances": [
          {
            "kind": "Conformance",
            "name": "FloatingPoint",
            "printedName": "FloatingPoint",
            "usr": "s:SF",
            "mangledName": "$sSF"
          },
          {
            "kind": "Conformance",
            "name": "Strideable",
            "printedName": "Strideable",
            "usr": "s:Sx",
            "mangledName": "$sSx"
          },
          {
            "kind": "Conformance",
            "name": "Comparable",
            "printedName": "Comparable",
            "usr": "s:SL",
            "mangledName": "$sSL"
          },
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "SignedNumeric",
            "printedName": "SignedNumeric",
            "usr": "s:s13SignedNumericP",
            "mangledName": "$ss13SignedNumericP"
          },
          {
            "kind": "Conformance",
            "name": "Numeric",
            "printedName": "Numeric",
            "usr": "s:Sj",
            "mangledName": "$sSj"
          },
          {
            "kind": "Conformance",
            "name": "ExpressibleByIntegerLiteral",
            "printedName": "ExpressibleByIntegerLiteral",
            "usr": "s:s27ExpressibleByIntegerLiteralP",
            "mangledName": "$ss27ExpressibleByIntegerLiteralP"
          },
          {
            "kind": "Conformance",
            "name": "AdditiveArithmetic",
            "printedName": "AdditiveArithmetic",
            "usr": "s:s18AdditiveArithmeticP",
            "mangledName": "$ss18AdditiveArithmeticP"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "ExpressibleByFloatLiteral",
            "printedName": "ExpressibleByFloatLiteral",
            "usr": "s:s25ExpressibleByFloatLiteralP",
            "mangledName": "$ss25ExpressibleByFloatLiteralP"
          }
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "String",
        "printedName": "String",
        "children": [
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(_:radix:uppercase:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              },
              {
                "kind": "TypeNominal",
                "name": "UInt128",
                "printedName": "NEKit.UInt128",
                "usr": "s:5NEKit7UInt128V"
              },
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "hasDefaultArg": true,
                "usr": "s:Si"
              },
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "hasDefaultArg": true,
                "usr": "s:Sb"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:SS5NEKitE_5radix9uppercaseSSAA7UInt128V_SiSbtcfc",
            "mangledName": "$sSS5NEKitE_5radix9uppercaseSSAA7UInt128V_SiSbtcfc",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "isFromExtension": true,
            "init_kind": "Designated"
          }
        ],
        "declKind": "Struct",
        "usr": "s:SS",
        "mangledName": "$sSS",
        "moduleName": "Swift",
        "declAttributes": [
          "Frozen"
        ],
        "isExternal": true,
        "conformances": [
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "Decodable",
            "printedName": "Decodable",
            "usr": "s:Se",
            "mangledName": "$sSe"
          },
          {
            "kind": "Conformance",
            "name": "Encodable",
            "printedName": "Encodable",
            "usr": "s:SE",
            "mangledName": "$sSE"
          },
          {
            "kind": "Conformance",
            "name": "CodingKeyRepresentable",
            "printedName": "CodingKeyRepresentable",
            "usr": "s:s22CodingKeyRepresentableP",
            "mangledName": "$ss22CodingKeyRepresentableP"
          },
          {
            "kind": "Conformance",
            "name": "_HasContiguousBytes",
            "printedName": "_HasContiguousBytes",
            "usr": "s:s19_HasContiguousBytesP",
            "mangledName": "$ss19_HasContiguousBytesP"
          },
          {
            "kind": "Conformance",
            "name": "CustomReflectable",
            "printedName": "CustomReflectable",
            "usr": "s:s17CustomReflectableP",
            "mangledName": "$ss17CustomReflectableP"
          },
          {
            "kind": "Conformance",
            "name": "_CustomPlaygroundQuickLookable",
            "printedName": "_CustomPlaygroundQuickLookable",
            "usr": "s:s30_CustomPlaygroundQuickLookableP",
            "mangledName": "$ss30_CustomPlaygroundQuickLookableP"
          },
          {
            "kind": "Conformance",
            "name": "TextOutputStream",
            "printedName": "TextOutputStream",
            "usr": "s:s16TextOutputStreamP",
            "mangledName": "$ss16TextOutputStreamP"
          },
          {
            "kind": "Conformance",
            "name": "TextOutputStreamable",
            "printedName": "TextOutputStreamable",
            "usr": "s:s20TextOutputStreamableP",
            "mangledName": "$ss20TextOutputStreamableP"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "Sendable",
            "printedName": "Sendable",
            "usr": "s:s8SendableP",
            "mangledName": "$ss8SendableP"
          },
          {
            "kind": "Conformance",
            "name": "_ExpressibleByBuiltinUnicodeScalarLiteral",
            "printedName": "_ExpressibleByBuiltinUnicodeScalarLiteral",
            "usr": "s:s41_ExpressibleByBuiltinUnicodeScalarLiteralP",
            "mangledName": "$ss41_ExpressibleByBuiltinUnicodeScalarLiteralP"
          },
          {
            "kind": "Conformance",
            "name": "_ExpressibleByBuiltinExtendedGraphemeClusterLiteral",
            "printedName": "_ExpressibleByBuiltinExtendedGraphemeClusterLiteral",
            "usr": "s:s51_ExpressibleByBuiltinExtendedGraphemeClusterLiteralP",
            "mangledName": "$ss51_ExpressibleByBuiltinExtendedGraphemeClusterLiteralP"
          },
          {
            "kind": "Conformance",
            "name": "_ExpressibleByBuiltinStringLiteral",
            "printedName": "_ExpressibleByBuiltinStringLiteral",
            "usr": "s:s34_ExpressibleByBuiltinStringLiteralP",
            "mangledName": "$ss34_ExpressibleByBuiltinStringLiteralP"
          },
          {
            "kind": "Conformance",
            "name": "ExpressibleByStringLiteral",
            "printedName": "ExpressibleByStringLiteral",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "StringLiteralType",
                "printedName": "StringLiteralType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ]
              }
            ],
            "usr": "s:s26ExpressibleByStringLiteralP",
            "mangledName": "$ss26ExpressibleByStringLiteralP"
          },
          {
            "kind": "Conformance",
            "name": "ExpressibleByExtendedGraphemeClusterLiteral",
            "printedName": "ExpressibleByExtendedGraphemeClusterLiteral",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "ExtendedGraphemeClusterLiteralType",
                "printedName": "ExtendedGraphemeClusterLiteralType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ]
              }
            ],
            "usr": "s:s43ExpressibleByExtendedGraphemeClusterLiteralP",
            "mangledName": "$ss43ExpressibleByExtendedGraphemeClusterLiteralP"
          },
          {
            "kind": "Conformance",
            "name": "ExpressibleByUnicodeScalarLiteral",
            "printedName": "ExpressibleByUnicodeScalarLiteral",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "UnicodeScalarLiteralType",
                "printedName": "UnicodeScalarLiteralType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ]
              }
            ],
            "usr": "s:s33ExpressibleByUnicodeScalarLiteralP",
            "mangledName": "$ss33ExpressibleByUnicodeScalarLiteralP"
          },
          {
            "kind": "Conformance",
            "name": "CustomDebugStringConvertible",
            "printedName": "CustomDebugStringConvertible",
            "usr": "s:s28CustomDebugStringConvertibleP",
            "mangledName": "$ss28CustomDebugStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "BidirectionalCollection",
            "printedName": "BidirectionalCollection",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Element",
                "printedName": "Element",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Character",
                    "printedName": "Swift.Character",
                    "usr": "s:SJ"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "Index",
                "printedName": "Index",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Index",
                    "printedName": "Swift.String.Index",
                    "usr": "s:SS5IndexV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SubSequence",
                "printedName": "SubSequence",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Substring",
                    "printedName": "Swift.Substring",
                    "usr": "s:Ss"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "Indices",
                "printedName": "Indices",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DefaultIndices",
                    "printedName": "Swift.DefaultIndices<Swift.String>",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "String",
                        "printedName": "Swift.String",
                        "usr": "s:SS"
                      }
                    ],
                    "usr": "s:SI"
                  }
                ]
              }
            ],
            "usr": "s:SK",
            "mangledName": "$sSK"
          },
          {
            "kind": "Conformance",
            "name": "Collection",
            "printedName": "Collection",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Element",
                "printedName": "Element",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Character",
                    "printedName": "Swift.Character",
                    "usr": "s:SJ"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "Index",
                "printedName": "Index",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Index",
                    "printedName": "Swift.String.Index",
                    "usr": "s:SS5IndexV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "Iterator",
                "printedName": "Iterator",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Iterator",
                    "printedName": "Swift.String.Iterator",
                    "usr": "s:SS8IteratorV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SubSequence",
                "printedName": "SubSequence",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Substring",
                    "printedName": "Swift.Substring",
                    "usr": "s:Ss"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "Indices",
                "printedName": "Indices",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DefaultIndices",
                    "printedName": "Swift.DefaultIndices<Swift.String>",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "String",
                        "printedName": "Swift.String",
                        "usr": "s:SS"
                      }
                    ],
                    "usr": "s:SI"
                  }
                ]
              }
            ],
            "usr": "s:Sl",
            "mangledName": "$sSl"
          },
          {
            "kind": "Conformance",
            "name": "Sequence",
            "printedName": "Sequence",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Element",
                "printedName": "Element",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Character",
                    "printedName": "Swift.Character",
                    "usr": "s:SJ"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "Iterator",
                "printedName": "Iterator",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Iterator",
                    "printedName": "Swift.String.Iterator",
                    "usr": "s:SS8IteratorV"
                  }
                ]
              }
            ],
            "usr": "s:ST",
            "mangledName": "$sST"
          },
          {
            "kind": "Conformance",
            "name": "Comparable",
            "printedName": "Comparable",
            "usr": "s:SL",
            "mangledName": "$sSL"
          },
          {
            "kind": "Conformance",
            "name": "StringProtocol",
            "printedName": "StringProtocol",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "UTF8View",
                "printedName": "UTF8View",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UTF8View",
                    "printedName": "Swift.String.UTF8View",
                    "usr": "s:SS8UTF8ViewV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "UTF16View",
                "printedName": "UTF16View",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UTF16View",
                    "printedName": "Swift.String.UTF16View",
                    "usr": "s:SS9UTF16ViewV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "UnicodeScalarView",
                "printedName": "UnicodeScalarView",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UnicodeScalarView",
                    "printedName": "Swift.String.UnicodeScalarView",
                    "usr": "s:SS17UnicodeScalarViewV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SubSequence",
                "printedName": "SubSequence",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Substring",
                    "printedName": "Swift.Substring",
                    "usr": "s:Ss"
                  }
                ]
              }
            ],
            "usr": "s:Sy",
            "mangledName": "$sSy"
          },
          {
            "kind": "Conformance",
            "name": "ExpressibleByStringInterpolation",
            "printedName": "ExpressibleByStringInterpolation",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "StringInterpolation",
                "printedName": "StringInterpolation",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "DefaultStringInterpolation",
                    "printedName": "Swift.DefaultStringInterpolation",
                    "usr": "s:s26DefaultStringInterpolationV"
                  }
                ]
              }
            ],
            "usr": "s:s32ExpressibleByStringInterpolationP",
            "mangledName": "$ss32ExpressibleByStringInterpolationP"
          },
          {
            "kind": "Conformance",
            "name": "LosslessStringConvertible",
            "printedName": "LosslessStringConvertible",
            "usr": "s:s25LosslessStringConvertibleP",
            "mangledName": "$ss25LosslessStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "RangeReplaceableCollection",
            "printedName": "RangeReplaceableCollection",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "SubSequence",
                "printedName": "SubSequence",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Substring",
                    "printedName": "Swift.Substring",
                    "usr": "s:Ss"
                  }
                ]
              }
            ],
            "usr": "s:Sm",
            "mangledName": "$sSm"
          },
          {
            "kind": "Conformance",
            "name": "MirrorPath",
            "printedName": "MirrorPath",
            "usr": "s:s10MirrorPathP",
            "mangledName": "$ss10MirrorPathP"
          },
          {
            "kind": "Conformance",
            "name": "_ObjectiveCBridgeable",
            "printedName": "_ObjectiveCBridgeable",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "_ObjectiveCType",
                "printedName": "_ObjectiveCType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "NSString",
                    "printedName": "Foundation.NSString",
                    "usr": "c:objc(cs)NSString"
                  }
                ]
              }
            ],
            "usr": "s:s21_ObjectiveCBridgeableP",
            "mangledName": "$ss21_ObjectiveCBridgeableP"
          },
          {
            "kind": "Conformance",
            "name": "CVarArg",
            "printedName": "CVarArg",
            "usr": "s:s7CVarArgP",
            "mangledName": "$ss7CVarArgP"
          },
          {
            "kind": "Conformance",
            "name": "Transferable",
            "printedName": "Transferable",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Representation",
                "printedName": "Representation",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "OpaqueTypeArchetype",
                    "printedName": "some CoreTransferable.TransferRepresentation",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "TransferRepresentation",
                        "printedName": "CoreTransferable.TransferRepresentation",
                        "usr": "s:16CoreTransferable22TransferRepresentationP"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Sendable",
                        "printedName": "Swift.Sendable",
                        "usr": "s:s8SendableP"
                      }
                    ]
                  }
                ]
              }
            ],
            "usr": "s:16CoreTransferable0B0P",
            "mangledName": "$s16CoreTransferable0B0P"
          }
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "UInt8",
        "printedName": "UInt8",
        "children": [
          {
            "kind": "Var",
            "name": "littleEndian",
            "printedName": "littleEndian",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "UInt8",
                "printedName": "Swift.UInt8",
                "usr": "s:s5UInt8V"
              }
            ],
            "declKind": "Var",
            "usr": "s:s5UInt8V5NEKitE12littleEndianABvp",
            "mangledName": "$ss5UInt8V5NEKitE12littleEndianABvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "isFromExtension": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt8",
                    "printedName": "Swift.UInt8",
                    "usr": "s:s5UInt8V"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:s5UInt8V5NEKitE12littleEndianABvg",
                "mangledName": "$ss5UInt8V5NEKitE12littleEndianABvg",
                "moduleName": "NEKit",
                "isFromExtension": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Var",
            "name": "bigEndian",
            "printedName": "bigEndian",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "UInt8",
                "printedName": "Swift.UInt8",
                "usr": "s:s5UInt8V"
              }
            ],
            "declKind": "Var",
            "usr": "s:s5UInt8V5NEKitE9bigEndianABvp",
            "mangledName": "$ss5UInt8V5NEKitE9bigEndianABvp",
            "moduleName": "NEKit",
            "declAttributes": [
              "AccessControl"
            ],
            "isFromExtension": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt8",
                    "printedName": "Swift.UInt8",
                    "usr": "s:s5UInt8V"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:s5UInt8V5NEKitE9bigEndianABvg",
                "mangledName": "$ss5UInt8V5NEKitE9bigEndianABvg",
                "moduleName": "NEKit",
                "isFromExtension": true,
                "accessorKind": "get"
              }
            ]
          }
        ],
        "declKind": "Struct",
        "usr": "s:s5UInt8V",
        "mangledName": "$ss5UInt8V",
        "moduleName": "Swift",
        "declAttributes": [
          "Frozen"
        ],
        "isExternal": true,
        "conformances": [
          {
            "kind": "Conformance",
            "name": "FixedWidthInteger",
            "printedName": "FixedWidthInteger",
            "usr": "s:s17FixedWidthIntegerP",
            "mangledName": "$ss17FixedWidthIntegerP"
          },
          {
            "kind": "Conformance",
            "name": "UnsignedInteger",
            "printedName": "UnsignedInteger",
            "usr": "s:SU",
            "mangledName": "$sSU"
          },
          {
            "kind": "Conformance",
            "name": "_ExpressibleByBuiltinIntegerLiteral",
            "printedName": "_ExpressibleByBuiltinIntegerLiteral",
            "usr": "s:s35_ExpressibleByBuiltinIntegerLiteralP",
            "mangledName": "$ss35_ExpressibleByBuiltinIntegerLiteralP"
          },
          {
            "kind": "Conformance",
            "name": "BinaryInteger",
            "printedName": "BinaryInteger",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Words",
                "printedName": "Words",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Words",
                    "printedName": "Swift.UInt8.Words",
                    "usr": "s:s5UInt8V5WordsV"
                  }
                ]
              }
            ],
            "usr": "s:Sz",
            "mangledName": "$sSz"
          },
          {
            "kind": "Conformance",
            "name": "LosslessStringConvertible",
            "printedName": "LosslessStringConvertible",
            "usr": "s:s25LosslessStringConvertibleP",
            "mangledName": "$ss25LosslessStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "Numeric",
            "printedName": "Numeric",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Magnitude",
                "printedName": "Magnitude",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt8",
                    "printedName": "Swift.UInt8",
                    "usr": "s:s5UInt8V"
                  }
                ]
              }
            ],
            "usr": "s:Sj",
            "mangledName": "$sSj"
          },
          {
            "kind": "Conformance",
            "name": "Strideable",
            "printedName": "Strideable",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Stride",
                "printedName": "Stride",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ]
              }
            ],
            "usr": "s:Sx",
            "mangledName": "$sSx"
          },
          {
            "kind": "Conformance",
            "name": "AdditiveArithmetic",
            "printedName": "AdditiveArithmetic",
            "usr": "s:s18AdditiveArithmeticP",
            "mangledName": "$ss18AdditiveArithmeticP"
          },
          {
            "kind": "Conformance",
            "name": "ExpressibleByIntegerLiteral",
            "printedName": "ExpressibleByIntegerLiteral",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "IntegerLiteralType",
                "printedName": "IntegerLiteralType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt8",
                    "printedName": "Swift.UInt8",
                    "usr": "s:s5UInt8V"
                  }
                ]
              }
            ],
            "usr": "s:s27ExpressibleByIntegerLiteralP",
            "mangledName": "$ss27ExpressibleByIntegerLiteralP"
          },
          {
            "kind": "Conformance",
            "name": "Comparable",
            "printedName": "Comparable",
            "usr": "s:SL",
            "mangledName": "$sSL"
          },
          {
            "kind": "Conformance",
            "name": "BinaryReadable",
            "printedName": "BinaryReadable",
            "usr": "s:5NEKit14BinaryReadableP",
            "mangledName": "$s5NEKit14BinaryReadableP"
          },
          {
            "kind": "Conformance",
            "name": "Decodable",
            "printedName": "Decodable",
            "usr": "s:Se",
            "mangledName": "$sSe"
          },
          {
            "kind": "Conformance",
            "name": "Encodable",
            "printedName": "Encodable",
            "usr": "s:SE",
            "mangledName": "$sSE"
          },
          {
            "kind": "Conformance",
            "name": "CustomReflectable",
            "printedName": "CustomReflectable",
            "usr": "s:s17CustomReflectableP",
            "mangledName": "$ss17CustomReflectableP"
          },
          {
            "kind": "Conformance",
            "name": "_CustomPlaygroundQuickLookable",
            "printedName": "_CustomPlaygroundQuickLookable",
            "usr": "s:s30_CustomPlaygroundQuickLookableP",
            "mangledName": "$ss30_CustomPlaygroundQuickLookableP"
          },
          {
            "kind": "Conformance",
            "name": "_StringElement",
            "printedName": "_StringElement",
            "usr": "s:s14_StringElementP",
            "mangledName": "$ss14_StringElementP"
          },
          {
            "kind": "Conformance",
            "name": "CVarArg",
            "printedName": "CVarArg",
            "usr": "s:s7CVarArgP",
            "mangledName": "$ss7CVarArgP"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "_HasCustomAnyHashableRepresentation",
            "printedName": "_HasCustomAnyHashableRepresentation",
            "usr": "s:s35_HasCustomAnyHashableRepresentationP",
            "mangledName": "$ss35_HasCustomAnyHashableRepresentationP"
          },
          {
            "kind": "Conformance",
            "name": "Sendable",
            "printedName": "Sendable",
            "usr": "s:s8SendableP",
            "mangledName": "$ss8SendableP"
          },
          {
            "kind": "Conformance",
            "name": "SIMDScalar",
            "printedName": "SIMDScalar",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "SIMDMaskScalar",
                "printedName": "SIMDMaskScalar",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int8",
                    "printedName": "Swift.Int8",
                    "usr": "s:s4Int8V"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD2Storage",
                "printedName": "SIMD2Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD2Storage",
                    "printedName": "Swift.UInt8.SIMD2Storage",
                    "usr": "s:s5UInt8V12SIMD2StorageV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD4Storage",
                "printedName": "SIMD4Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD4Storage",
                    "printedName": "Swift.UInt8.SIMD4Storage",
                    "usr": "s:s5UInt8V12SIMD4StorageV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD8Storage",
                "printedName": "SIMD8Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD8Storage",
                    "printedName": "Swift.UInt8.SIMD8Storage",
                    "usr": "s:s5UInt8V12SIMD8StorageV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD16Storage",
                "printedName": "SIMD16Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD16Storage",
                    "printedName": "Swift.UInt8.SIMD16Storage",
                    "usr": "s:s5UInt8V13SIMD16StorageV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD32Storage",
                "printedName": "SIMD32Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD32Storage",
                    "printedName": "Swift.UInt8.SIMD32Storage",
                    "usr": "s:s5UInt8V13SIMD32StorageV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD64Storage",
                "printedName": "SIMD64Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD64Storage",
                    "printedName": "Swift.UInt8.SIMD64Storage",
                    "usr": "s:s5UInt8V13SIMD64StorageV"
                  }
                ]
              }
            ],
            "usr": "s:s10SIMDScalarP",
            "mangledName": "$ss10SIMDScalarP"
          },
          {
            "kind": "Conformance",
            "name": "_FormatSpecifiable",
            "printedName": "_FormatSpecifiable",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "_Arg",
                "printedName": "_Arg",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt32",
                    "printedName": "Swift.UInt32",
                    "usr": "s:s6UInt32V"
                  }
                ]
              }
            ],
            "usr": "s:10Foundation18_FormatSpecifiableP",
            "mangledName": "$s10Foundation18_FormatSpecifiableP"
          },
          {
            "kind": "Conformance",
            "name": "_ObjectiveCBridgeable",
            "printedName": "_ObjectiveCBridgeable",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "_ObjectiveCType",
                "printedName": "_ObjectiveCType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "NSNumber",
                    "printedName": "Foundation.NSNumber",
                    "usr": "c:objc(cs)NSNumber"
                  }
                ]
              }
            ],
            "usr": "s:s21_ObjectiveCBridgeableP",
            "mangledName": "$ss21_ObjectiveCBridgeableP"
          },
          {
            "kind": "Conformance",
            "name": "_FormatSpecifiable",
            "printedName": "_FormatSpecifiable",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "_Arg",
                "printedName": "_Arg",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt32",
                    "printedName": "Swift.UInt32",
                    "usr": "s:s6UInt32V"
                  }
                ]
              }
            ],
            "usr": "s:7SwiftUI18_FormatSpecifiableP",
            "mangledName": "$s7SwiftUI18_FormatSpecifiableP"
          }
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "UInt16",
        "printedName": "UInt16",
        "declKind": "Struct",
        "usr": "s:s6UInt16V",
        "mangledName": "$ss6UInt16V",
        "moduleName": "Swift",
        "declAttributes": [
          "Frozen"
        ],
        "isExternal": true,
        "conformances": [
          {
            "kind": "Conformance",
            "name": "FixedWidthInteger",
            "printedName": "FixedWidthInteger",
            "usr": "s:s17FixedWidthIntegerP",
            "mangledName": "$ss17FixedWidthIntegerP"
          },
          {
            "kind": "Conformance",
            "name": "UnsignedInteger",
            "printedName": "UnsignedInteger",
            "usr": "s:SU",
            "mangledName": "$sSU"
          },
          {
            "kind": "Conformance",
            "name": "_ExpressibleByBuiltinIntegerLiteral",
            "printedName": "_ExpressibleByBuiltinIntegerLiteral",
            "usr": "s:s35_ExpressibleByBuiltinIntegerLiteralP",
            "mangledName": "$ss35_ExpressibleByBuiltinIntegerLiteralP"
          },
          {
            "kind": "Conformance",
            "name": "BinaryInteger",
            "printedName": "BinaryInteger",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Words",
                "printedName": "Words",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Words",
                    "printedName": "Swift.UInt16.Words",
                    "usr": "s:s6UInt16V5WordsV"
                  }
                ]
              }
            ],
            "usr": "s:Sz",
            "mangledName": "$sSz"
          },
          {
            "kind": "Conformance",
            "name": "LosslessStringConvertible",
            "printedName": "LosslessStringConvertible",
            "usr": "s:s25LosslessStringConvertibleP",
            "mangledName": "$ss25LosslessStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "Numeric",
            "printedName": "Numeric",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Magnitude",
                "printedName": "Magnitude",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt16",
                    "printedName": "Swift.UInt16",
                    "usr": "s:s6UInt16V"
                  }
                ]
              }
            ],
            "usr": "s:Sj",
            "mangledName": "$sSj"
          },
          {
            "kind": "Conformance",
            "name": "Strideable",
            "printedName": "Strideable",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Stride",
                "printedName": "Stride",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ]
              }
            ],
            "usr": "s:Sx",
            "mangledName": "$sSx"
          },
          {
            "kind": "Conformance",
            "name": "AdditiveArithmetic",
            "printedName": "AdditiveArithmetic",
            "usr": "s:s18AdditiveArithmeticP",
            "mangledName": "$ss18AdditiveArithmeticP"
          },
          {
            "kind": "Conformance",
            "name": "ExpressibleByIntegerLiteral",
            "printedName": "ExpressibleByIntegerLiteral",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "IntegerLiteralType",
                "printedName": "IntegerLiteralType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt16",
                    "printedName": "Swift.UInt16",
                    "usr": "s:s6UInt16V"
                  }
                ]
              }
            ],
            "usr": "s:s27ExpressibleByIntegerLiteralP",
            "mangledName": "$ss27ExpressibleByIntegerLiteralP"
          },
          {
            "kind": "Conformance",
            "name": "Comparable",
            "printedName": "Comparable",
            "usr": "s:SL",
            "mangledName": "$sSL"
          },
          {
            "kind": "Conformance",
            "name": "BinaryReadable",
            "printedName": "BinaryReadable",
            "usr": "s:5NEKit14BinaryReadableP",
            "mangledName": "$s5NEKit14BinaryReadableP"
          },
          {
            "kind": "Conformance",
            "name": "Decodable",
            "printedName": "Decodable",
            "usr": "s:Se",
            "mangledName": "$sSe"
          },
          {
            "kind": "Conformance",
            "name": "Encodable",
            "printedName": "Encodable",
            "usr": "s:SE",
            "mangledName": "$sSE"
          },
          {
            "kind": "Conformance",
            "name": "CustomReflectable",
            "printedName": "CustomReflectable",
            "usr": "s:s17CustomReflectableP",
            "mangledName": "$ss17CustomReflectableP"
          },
          {
            "kind": "Conformance",
            "name": "_CustomPlaygroundQuickLookable",
            "printedName": "_CustomPlaygroundQuickLookable",
            "usr": "s:s30_CustomPlaygroundQuickLookableP",
            "mangledName": "$ss30_CustomPlaygroundQuickLookableP"
          },
          {
            "kind": "Conformance",
            "name": "_StringElement",
            "printedName": "_StringElement",
            "usr": "s:s14_StringElementP",
            "mangledName": "$ss14_StringElementP"
          },
          {
            "kind": "Conformance",
            "name": "CVarArg",
            "printedName": "CVarArg",
            "usr": "s:s7CVarArgP",
            "mangledName": "$ss7CVarArgP"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "_HasCustomAnyHashableRepresentation",
            "printedName": "_HasCustomAnyHashableRepresentation",
            "usr": "s:s35_HasCustomAnyHashableRepresentationP",
            "mangledName": "$ss35_HasCustomAnyHashableRepresentationP"
          },
          {
            "kind": "Conformance",
            "name": "Sendable",
            "printedName": "Sendable",
            "usr": "s:s8SendableP",
            "mangledName": "$ss8SendableP"
          },
          {
            "kind": "Conformance",
            "name": "SIMDScalar",
            "printedName": "SIMDScalar",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "SIMDMaskScalar",
                "printedName": "SIMDMaskScalar",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int16",
                    "printedName": "Swift.Int16",
                    "usr": "s:s5Int16V"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD2Storage",
                "printedName": "SIMD2Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD2Storage",
                    "printedName": "Swift.UInt16.SIMD2Storage",
                    "usr": "s:s6UInt16V12SIMD2StorageV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD4Storage",
                "printedName": "SIMD4Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD4Storage",
                    "printedName": "Swift.UInt16.SIMD4Storage",
                    "usr": "s:s6UInt16V12SIMD4StorageV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD8Storage",
                "printedName": "SIMD8Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD8Storage",
                    "printedName": "Swift.UInt16.SIMD8Storage",
                    "usr": "s:s6UInt16V12SIMD8StorageV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD16Storage",
                "printedName": "SIMD16Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD16Storage",
                    "printedName": "Swift.UInt16.SIMD16Storage",
                    "usr": "s:s6UInt16V13SIMD16StorageV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD32Storage",
                "printedName": "SIMD32Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD32Storage",
                    "printedName": "Swift.UInt16.SIMD32Storage",
                    "usr": "s:s6UInt16V13SIMD32StorageV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD64Storage",
                "printedName": "SIMD64Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD64Storage",
                    "printedName": "Swift.UInt16.SIMD64Storage",
                    "usr": "s:s6UInt16V13SIMD64StorageV"
                  }
                ]
              }
            ],
            "usr": "s:s10SIMDScalarP",
            "mangledName": "$ss10SIMDScalarP"
          },
          {
            "kind": "Conformance",
            "name": "_FormatSpecifiable",
            "printedName": "_FormatSpecifiable",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "_Arg",
                "printedName": "_Arg",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt32",
                    "printedName": "Swift.UInt32",
                    "usr": "s:s6UInt32V"
                  }
                ]
              }
            ],
            "usr": "s:10Foundation18_FormatSpecifiableP",
            "mangledName": "$s10Foundation18_FormatSpecifiableP"
          },
          {
            "kind": "Conformance",
            "name": "_ObjectiveCBridgeable",
            "printedName": "_ObjectiveCBridgeable",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "_ObjectiveCType",
                "printedName": "_ObjectiveCType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "NSNumber",
                    "printedName": "Foundation.NSNumber",
                    "usr": "c:objc(cs)NSNumber"
                  }
                ]
              }
            ],
            "usr": "s:s21_ObjectiveCBridgeableP",
            "mangledName": "$ss21_ObjectiveCBridgeableP"
          },
          {
            "kind": "Conformance",
            "name": "_FormatSpecifiable",
            "printedName": "_FormatSpecifiable",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "_Arg",
                "printedName": "_Arg",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt32",
                    "printedName": "Swift.UInt32",
                    "usr": "s:s6UInt32V"
                  }
                ]
              }
            ],
            "usr": "s:7SwiftUI18_FormatSpecifiableP",
            "mangledName": "$s7SwiftUI18_FormatSpecifiableP"
          }
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "UInt32",
        "printedName": "UInt32",
        "declKind": "Struct",
        "usr": "s:s6UInt32V",
        "mangledName": "$ss6UInt32V",
        "moduleName": "Swift",
        "declAttributes": [
          "Frozen"
        ],
        "isExternal": true,
        "conformances": [
          {
            "kind": "Conformance",
            "name": "FixedWidthInteger",
            "printedName": "FixedWidthInteger",
            "usr": "s:s17FixedWidthIntegerP",
            "mangledName": "$ss17FixedWidthIntegerP"
          },
          {
            "kind": "Conformance",
            "name": "UnsignedInteger",
            "printedName": "UnsignedInteger",
            "usr": "s:SU",
            "mangledName": "$sSU"
          },
          {
            "kind": "Conformance",
            "name": "_ExpressibleByBuiltinIntegerLiteral",
            "printedName": "_ExpressibleByBuiltinIntegerLiteral",
            "usr": "s:s35_ExpressibleByBuiltinIntegerLiteralP",
            "mangledName": "$ss35_ExpressibleByBuiltinIntegerLiteralP"
          },
          {
            "kind": "Conformance",
            "name": "BinaryInteger",
            "printedName": "BinaryInteger",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Words",
                "printedName": "Words",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Words",
                    "printedName": "Swift.UInt32.Words",
                    "usr": "s:s6UInt32V5WordsV"
                  }
                ]
              }
            ],
            "usr": "s:Sz",
            "mangledName": "$sSz"
          },
          {
            "kind": "Conformance",
            "name": "LosslessStringConvertible",
            "printedName": "LosslessStringConvertible",
            "usr": "s:s25LosslessStringConvertibleP",
            "mangledName": "$ss25LosslessStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "Numeric",
            "printedName": "Numeric",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Magnitude",
                "printedName": "Magnitude",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt32",
                    "printedName": "Swift.UInt32",
                    "usr": "s:s6UInt32V"
                  }
                ]
              }
            ],
            "usr": "s:Sj",
            "mangledName": "$sSj"
          },
          {
            "kind": "Conformance",
            "name": "Strideable",
            "printedName": "Strideable",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Stride",
                "printedName": "Stride",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ]
              }
            ],
            "usr": "s:Sx",
            "mangledName": "$sSx"
          },
          {
            "kind": "Conformance",
            "name": "AdditiveArithmetic",
            "printedName": "AdditiveArithmetic",
            "usr": "s:s18AdditiveArithmeticP",
            "mangledName": "$ss18AdditiveArithmeticP"
          },
          {
            "kind": "Conformance",
            "name": "ExpressibleByIntegerLiteral",
            "printedName": "ExpressibleByIntegerLiteral",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "IntegerLiteralType",
                "printedName": "IntegerLiteralType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt32",
                    "printedName": "Swift.UInt32",
                    "usr": "s:s6UInt32V"
                  }
                ]
              }
            ],
            "usr": "s:s27ExpressibleByIntegerLiteralP",
            "mangledName": "$ss27ExpressibleByIntegerLiteralP"
          },
          {
            "kind": "Conformance",
            "name": "Comparable",
            "printedName": "Comparable",
            "usr": "s:SL",
            "mangledName": "$sSL"
          },
          {
            "kind": "Conformance",
            "name": "BinaryReadable",
            "printedName": "BinaryReadable",
            "usr": "s:5NEKit14BinaryReadableP",
            "mangledName": "$s5NEKit14BinaryReadableP"
          },
          {
            "kind": "Conformance",
            "name": "Decodable",
            "printedName": "Decodable",
            "usr": "s:Se",
            "mangledName": "$sSe"
          },
          {
            "kind": "Conformance",
            "name": "Encodable",
            "printedName": "Encodable",
            "usr": "s:SE",
            "mangledName": "$sSE"
          },
          {
            "kind": "Conformance",
            "name": "CustomReflectable",
            "printedName": "CustomReflectable",
            "usr": "s:s17CustomReflectableP",
            "mangledName": "$ss17CustomReflectableP"
          },
          {
            "kind": "Conformance",
            "name": "_CustomPlaygroundQuickLookable",
            "printedName": "_CustomPlaygroundQuickLookable",
            "usr": "s:s30_CustomPlaygroundQuickLookableP",
            "mangledName": "$ss30_CustomPlaygroundQuickLookableP"
          },
          {
            "kind": "Conformance",
            "name": "CVarArg",
            "printedName": "CVarArg",
            "usr": "s:s7CVarArgP",
            "mangledName": "$ss7CVarArgP"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "_HasCustomAnyHashableRepresentation",
            "printedName": "_HasCustomAnyHashableRepresentation",
            "usr": "s:s35_HasCustomAnyHashableRepresentationP",
            "mangledName": "$ss35_HasCustomAnyHashableRepresentationP"
          },
          {
            "kind": "Conformance",
            "name": "Sendable",
            "printedName": "Sendable",
            "usr": "s:s8SendableP",
            "mangledName": "$ss8SendableP"
          },
          {
            "kind": "Conformance",
            "name": "SIMDScalar",
            "printedName": "SIMDScalar",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "SIMDMaskScalar",
                "printedName": "SIMDMaskScalar",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int32",
                    "printedName": "Swift.Int32",
                    "usr": "s:s5Int32V"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD2Storage",
                "printedName": "SIMD2Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD2Storage",
                    "printedName": "Swift.UInt32.SIMD2Storage",
                    "usr": "s:s6UInt32V12SIMD2StorageV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD4Storage",
                "printedName": "SIMD4Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD4Storage",
                    "printedName": "Swift.UInt32.SIMD4Storage",
                    "usr": "s:s6UInt32V12SIMD4StorageV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD8Storage",
                "printedName": "SIMD8Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD8Storage",
                    "printedName": "Swift.UInt32.SIMD8Storage",
                    "usr": "s:s6UInt32V12SIMD8StorageV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD16Storage",
                "printedName": "SIMD16Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD16Storage",
                    "printedName": "Swift.UInt32.SIMD16Storage",
                    "usr": "s:s6UInt32V13SIMD16StorageV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD32Storage",
                "printedName": "SIMD32Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD32Storage",
                    "printedName": "Swift.UInt32.SIMD32Storage",
                    "usr": "s:s6UInt32V13SIMD32StorageV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD64Storage",
                "printedName": "SIMD64Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD64Storage",
                    "printedName": "Swift.UInt32.SIMD64Storage",
                    "usr": "s:s6UInt32V13SIMD64StorageV"
                  }
                ]
              }
            ],
            "usr": "s:s10SIMDScalarP",
            "mangledName": "$ss10SIMDScalarP"
          },
          {
            "kind": "Conformance",
            "name": "_FormatSpecifiable",
            "printedName": "_FormatSpecifiable",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "_Arg",
                "printedName": "_Arg",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt32",
                    "printedName": "Swift.UInt32",
                    "usr": "s:s6UInt32V"
                  }
                ]
              }
            ],
            "usr": "s:10Foundation18_FormatSpecifiableP",
            "mangledName": "$s10Foundation18_FormatSpecifiableP"
          },
          {
            "kind": "Conformance",
            "name": "_ObjectiveCBridgeable",
            "printedName": "_ObjectiveCBridgeable",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "_ObjectiveCType",
                "printedName": "_ObjectiveCType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "NSNumber",
                    "printedName": "Foundation.NSNumber",
                    "usr": "c:objc(cs)NSNumber"
                  }
                ]
              }
            ],
            "usr": "s:s21_ObjectiveCBridgeableP",
            "mangledName": "$ss21_ObjectiveCBridgeableP"
          },
          {
            "kind": "Conformance",
            "name": "_FormatSpecifiable",
            "printedName": "_FormatSpecifiable",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "_Arg",
                "printedName": "_Arg",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt32",
                    "printedName": "Swift.UInt32",
                    "usr": "s:s6UInt32V"
                  }
                ]
              }
            ],
            "usr": "s:7SwiftUI18_FormatSpecifiableP",
            "mangledName": "$s7SwiftUI18_FormatSpecifiableP"
          }
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "UInt64",
        "printedName": "UInt64",
        "declKind": "Struct",
        "usr": "s:s6UInt64V",
        "mangledName": "$ss6UInt64V",
        "moduleName": "Swift",
        "declAttributes": [
          "Frozen"
        ],
        "isExternal": true,
        "conformances": [
          {
            "kind": "Conformance",
            "name": "FixedWidthInteger",
            "printedName": "FixedWidthInteger",
            "usr": "s:s17FixedWidthIntegerP",
            "mangledName": "$ss17FixedWidthIntegerP"
          },
          {
            "kind": "Conformance",
            "name": "UnsignedInteger",
            "printedName": "UnsignedInteger",
            "usr": "s:SU",
            "mangledName": "$sSU"
          },
          {
            "kind": "Conformance",
            "name": "_ExpressibleByBuiltinIntegerLiteral",
            "printedName": "_ExpressibleByBuiltinIntegerLiteral",
            "usr": "s:s35_ExpressibleByBuiltinIntegerLiteralP",
            "mangledName": "$ss35_ExpressibleByBuiltinIntegerLiteralP"
          },
          {
            "kind": "Conformance",
            "name": "BinaryInteger",
            "printedName": "BinaryInteger",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Words",
                "printedName": "Words",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Words",
                    "printedName": "Swift.UInt64.Words",
                    "usr": "s:s6UInt64V5WordsV"
                  }
                ]
              }
            ],
            "usr": "s:Sz",
            "mangledName": "$sSz"
          },
          {
            "kind": "Conformance",
            "name": "LosslessStringConvertible",
            "printedName": "LosslessStringConvertible",
            "usr": "s:s25LosslessStringConvertibleP",
            "mangledName": "$ss25LosslessStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "Numeric",
            "printedName": "Numeric",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Magnitude",
                "printedName": "Magnitude",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt64",
                    "printedName": "Swift.UInt64",
                    "usr": "s:s6UInt64V"
                  }
                ]
              }
            ],
            "usr": "s:Sj",
            "mangledName": "$sSj"
          },
          {
            "kind": "Conformance",
            "name": "Strideable",
            "printedName": "Strideable",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Stride",
                "printedName": "Stride",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ]
              }
            ],
            "usr": "s:Sx",
            "mangledName": "$sSx"
          },
          {
            "kind": "Conformance",
            "name": "AdditiveArithmetic",
            "printedName": "AdditiveArithmetic",
            "usr": "s:s18AdditiveArithmeticP",
            "mangledName": "$ss18AdditiveArithmeticP"
          },
          {
            "kind": "Conformance",
            "name": "ExpressibleByIntegerLiteral",
            "printedName": "ExpressibleByIntegerLiteral",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "IntegerLiteralType",
                "printedName": "IntegerLiteralType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt64",
                    "printedName": "Swift.UInt64",
                    "usr": "s:s6UInt64V"
                  }
                ]
              }
            ],
            "usr": "s:s27ExpressibleByIntegerLiteralP",
            "mangledName": "$ss27ExpressibleByIntegerLiteralP"
          },
          {
            "kind": "Conformance",
            "name": "Comparable",
            "printedName": "Comparable",
            "usr": "s:SL",
            "mangledName": "$sSL"
          },
          {
            "kind": "Conformance",
            "name": "BinaryReadable",
            "printedName": "BinaryReadable",
            "usr": "s:5NEKit14BinaryReadableP",
            "mangledName": "$s5NEKit14BinaryReadableP"
          },
          {
            "kind": "Conformance",
            "name": "Decodable",
            "printedName": "Decodable",
            "usr": "s:Se",
            "mangledName": "$sSe"
          },
          {
            "kind": "Conformance",
            "name": "Encodable",
            "printedName": "Encodable",
            "usr": "s:SE",
            "mangledName": "$sSE"
          },
          {
            "kind": "Conformance",
            "name": "CustomReflectable",
            "printedName": "CustomReflectable",
            "usr": "s:s17CustomReflectableP",
            "mangledName": "$ss17CustomReflectableP"
          },
          {
            "kind": "Conformance",
            "name": "_CustomPlaygroundQuickLookable",
            "printedName": "_CustomPlaygroundQuickLookable",
            "usr": "s:s30_CustomPlaygroundQuickLookableP",
            "mangledName": "$ss30_CustomPlaygroundQuickLookableP"
          },
          {
            "kind": "Conformance",
            "name": "CVarArg",
            "printedName": "CVarArg",
            "usr": "s:s7CVarArgP",
            "mangledName": "$ss7CVarArgP"
          },
          {
            "kind": "Conformance",
            "name": "_CVarArgAligned",
            "printedName": "_CVarArgAligned",
            "usr": "s:s15_CVarArgAlignedP",
            "mangledName": "$ss15_CVarArgAlignedP"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "_HasCustomAnyHashableRepresentation",
            "printedName": "_HasCustomAnyHashableRepresentation",
            "usr": "s:s35_HasCustomAnyHashableRepresentationP",
            "mangledName": "$ss35_HasCustomAnyHashableRepresentationP"
          },
          {
            "kind": "Conformance",
            "name": "Sendable",
            "printedName": "Sendable",
            "usr": "s:s8SendableP",
            "mangledName": "$ss8SendableP"
          },
          {
            "kind": "Conformance",
            "name": "SIMDScalar",
            "printedName": "SIMDScalar",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "SIMDMaskScalar",
                "printedName": "SIMDMaskScalar",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int64",
                    "printedName": "Swift.Int64",
                    "usr": "s:s5Int64V"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD2Storage",
                "printedName": "SIMD2Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD2Storage",
                    "printedName": "Swift.UInt64.SIMD2Storage",
                    "usr": "s:s6UInt64V12SIMD2StorageV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD4Storage",
                "printedName": "SIMD4Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD4Storage",
                    "printedName": "Swift.UInt64.SIMD4Storage",
                    "usr": "s:s6UInt64V12SIMD4StorageV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD8Storage",
                "printedName": "SIMD8Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD8Storage",
                    "printedName": "Swift.UInt64.SIMD8Storage",
                    "usr": "s:s6UInt64V12SIMD8StorageV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD16Storage",
                "printedName": "SIMD16Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD16Storage",
                    "printedName": "Swift.UInt64.SIMD16Storage",
                    "usr": "s:s6UInt64V13SIMD16StorageV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD32Storage",
                "printedName": "SIMD32Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD32Storage",
                    "printedName": "Swift.UInt64.SIMD32Storage",
                    "usr": "s:s6UInt64V13SIMD32StorageV"
                  }
                ]
              },
              {
                "kind": "TypeWitness",
                "name": "SIMD64Storage",
                "printedName": "SIMD64Storage",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "SIMD64Storage",
                    "printedName": "Swift.UInt64.SIMD64Storage",
                    "usr": "s:s6UInt64V13SIMD64StorageV"
                  }
                ]
              }
            ],
            "usr": "s:s10SIMDScalarP",
            "mangledName": "$ss10SIMDScalarP"
          },
          {
            "kind": "Conformance",
            "name": "_FormatSpecifiable",
            "printedName": "_FormatSpecifiable",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "_Arg",
                "printedName": "_Arg",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt64",
                    "printedName": "Swift.UInt64",
                    "usr": "s:s6UInt64V"
                  }
                ]
              }
            ],
            "usr": "s:10Foundation18_FormatSpecifiableP",
            "mangledName": "$s10Foundation18_FormatSpecifiableP"
          },
          {
            "kind": "Conformance",
            "name": "_ObjectiveCBridgeable",
            "printedName": "_ObjectiveCBridgeable",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "_ObjectiveCType",
                "printedName": "_ObjectiveCType",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "NSNumber",
                    "printedName": "Foundation.NSNumber",
                    "usr": "c:objc(cs)NSNumber"
                  }
                ]
              }
            ],
            "usr": "s:s21_ObjectiveCBridgeableP",
            "mangledName": "$ss21_ObjectiveCBridgeableP"
          },
          {
            "kind": "Conformance",
            "name": "_FormatSpecifiable",
            "printedName": "_FormatSpecifiable",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "_Arg",
                "printedName": "_Arg",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "UInt64",
                    "printedName": "Swift.UInt64",
                    "usr": "s:s6UInt64V"
                  }
                ]
              }
            ],
            "usr": "s:7SwiftUI18_FormatSpecifiableP",
            "mangledName": "$s7SwiftUI18_FormatSpecifiableP"
          }
        ]
      }
    ],
    "json_format_version": 8
  },
  "ConstValues": [
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/PushNotificationsAuthorization.swift",
      "kind": "StringLiteral",
      "offset": 340,
      "length": 45,
      "value": "\"LockdownNotificationsUserAuthorizedCategory\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/PushNotificationsAuthorization.swift",
      "kind": "StringLiteral",
      "offset": 1381,
      "length": 81,
      "value": "\"Weekly updates notifications are turned off; removing all pending notifications\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Messages\/HTTPHeader.swift",
      "kind": "BooleanLiteral",
      "offset": 399,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Messages\/HTTPHeader.swift",
      "kind": "IntegerLiteral",
      "offset": 689,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Messages\/HTTPHeader.swift",
      "kind": "Array",
      "offset": 734,
      "length": 2,
      "value": "[]"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Messages\/HTTPHeader.swift",
      "kind": "StringLiteral",
      "offset": 872,
      "length": 6,
      "value": "\"\r\n\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Messages\/HTTPHeader.swift",
      "kind": "IntegerLiteral",
      "offset": 909,
      "length": 1,
      "value": "3"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Messages\/HTTPHeader.swift",
      "kind": "IntegerLiteral",
      "offset": 1007,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Messages\/HTTPHeader.swift",
      "kind": "StringLiteral",
      "offset": 1034,
      "length": 3,
      "value": "\" \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Messages\/HTTPHeader.swift",
      "kind": "IntegerLiteral",
      "offset": 1070,
      "length": 1,
      "value": "3"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Messages\/HTTPHeader.swift",
      "kind": "IntegerLiteral",
      "offset": 1168,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Messages\/HTTPHeader.swift",
      "kind": "IntegerLiteral",
      "offset": 1194,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Messages\/HTTPHeader.swift",
      "kind": "IntegerLiteral",
      "offset": 1227,
      "length": 1,
      "value": "2"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Messages\/HTTPHeader.swift",
      "kind": "IntegerLiteral",
      "offset": 1257,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Messages\/HTTPHeader.swift",
      "kind": "IntegerLiteral",
      "offset": 1273,
      "length": 1,
      "value": "2"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Messages\/HTTPHeader.swift",
      "kind": "StringLiteral",
      "offset": 1325,
      "length": 3,
      "value": "\":\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Messages\/HTTPHeader.swift",
      "kind": "IntegerLiteral",
      "offset": 1341,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Messages\/HTTPHeader.swift",
      "kind": "BooleanLiteral",
      "offset": 1371,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Messages\/HTTPHeader.swift",
      "kind": "IntegerLiteral",
      "offset": 1412,
      "length": 1,
      "value": "2"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Messages\/HTTPHeader.swift",
      "kind": "IntegerLiteral",
      "offset": 1534,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Messages\/HTTPHeader.swift",
      "kind": "IntegerLiteral",
      "offset": 1602,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Messages\/HTTPHeader.swift",
      "kind": "StringLiteral",
      "offset": 1702,
      "length": 9,
      "value": "\"CONNECT\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Messages\/HTTPHeader.swift",
      "kind": "BooleanLiteral",
      "offset": 1738,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Messages\/HTTPHeader.swift",
      "kind": "StringLiteral",
      "offset": 1799,
      "length": 3,
      "value": "\":\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Messages\/HTTPHeader.swift",
      "kind": "IntegerLiteral",
      "offset": 1839,
      "length": 1,
      "value": "2"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Messages\/HTTPHeader.swift",
      "kind": "IntegerLiteral",
      "offset": 1945,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Messages\/HTTPHeader.swift",
      "kind": "IntegerLiteral",
      "offset": 1989,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Messages\/HTTPHeader.swift",
      "kind": "IntegerLiteral",
      "offset": 2134,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Messages\/HTTPHeader.swift",
      "kind": "BooleanLiteral",
      "offset": 2180,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Messages\/HTTPHeader.swift",
      "kind": "StringLiteral",
      "offset": 2206,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Messages\/HTTPHeader.swift",
      "kind": "IntegerLiteral",
      "offset": 2228,
      "length": 2,
      "value": "80"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Messages\/HTTPHeader.swift",
      "kind": "IntegerLiteral",
      "offset": 2472,
      "length": 2,
      "value": "80"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Messages\/HTTPHeader.swift",
      "kind": "BooleanLiteral",
      "offset": 2506,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Messages\/HTTPHeader.swift",
      "kind": "IntegerLiteral",
      "offset": 2858,
      "length": 2,
      "value": "80"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Messages\/HTTPHeader.swift",
      "kind": "BooleanLiteral",
      "offset": 2892,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Messages\/HTTPHeader.swift",
      "kind": "StringLiteral",
      "offset": 2991,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Messages\/HTTPHeader.swift",
      "kind": "StringLiteral",
      "offset": 3063,
      "length": 6,
      "value": "\"Host\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Messages\/HTTPHeader.swift",
      "kind": "StringLiteral",
      "offset": 3251,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Messages\/HTTPHeader.swift",
      "kind": "StringLiteral",
      "offset": 3397,
      "length": 3,
      "value": "\":\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Messages\/HTTPHeader.swift",
      "kind": "IntegerLiteral",
      "offset": 3441,
      "length": 1,
      "value": "2"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Messages\/HTTPHeader.swift",
      "kind": "IntegerLiteral",
      "offset": 3563,
      "length": 1,
      "value": "2"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Messages\/HTTPHeader.swift",
      "kind": "IntegerLiteral",
      "offset": 3602,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Messages\/HTTPHeader.swift",
      "kind": "IntegerLiteral",
      "offset": 3654,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Messages\/HTTPHeader.swift",
      "kind": "IntegerLiteral",
      "offset": 3846,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Messages\/HTTPHeader.swift",
      "kind": "IntegerLiteral",
      "offset": 3876,
      "length": 2,
      "value": "80"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Messages\/HTTPHeader.swift",
      "kind": "StringLiteral",
      "offset": 3973,
      "length": 16,
      "value": "\"Content-Length\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Messages\/HTTPHeader.swift",
      "kind": "StringLiteral",
      "offset": 5043,
      "length": 38,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Messages\/HTTPHeader.swift",
      "kind": "StringLiteral",
      "offset": 5053,
      "length": 1,
      "value": "\" \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Messages\/HTTPHeader.swift",
      "kind": "StringLiteral",
      "offset": 5061,
      "length": 1,
      "value": "\" \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Messages\/HTTPHeader.swift",
      "kind": "StringLiteral",
      "offset": 5076,
      "length": 1,
      "value": "\"\r\n\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Messages\/HTTPHeader.swift",
      "kind": "StringLiteral",
      "offset": 5142,
      "length": 22,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Messages\/HTTPHeader.swift",
      "kind": "StringLiteral",
      "offset": 5149,
      "length": 1,
      "value": "\": \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Messages\/HTTPHeader.swift",
      "kind": "StringLiteral",
      "offset": 5159,
      "length": 1,
      "value": "\"\r\n\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Messages\/HTTPHeader.swift",
      "kind": "StringLiteral",
      "offset": 5193,
      "length": 6,
      "value": "\"\r\n\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Messages\/HTTPHeader.swift",
      "kind": "StringLiteral",
      "offset": 5405,
      "length": 3,
      "value": "\"\/\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Messages\/HTTPHeader.swift",
      "kind": "IntegerLiteral",
      "offset": 5639,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Messages\/HTTPHeader.swift",
      "kind": "Array",
      "offset": 5929,
      "length": 65,
      "value": "[\"Proxy-Authenticate\", \"Proxy-Authorization\", \"Proxy-Connection\"]"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Messages\/HTTPHeader.swift",
      "kind": "StringLiteral",
      "offset": 6219,
      "length": 25,
      "value": "\"http.?:\\\/\\\/.*?(\\\/.*)\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Messages\/HTTPHeader.swift",
      "kind": "IntegerLiteral",
      "offset": 6506,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Messages\/HTTPHeader.swift",
      "kind": "IntegerLiteral",
      "offset": 6606,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/GlobalIntializer.swift",
      "kind": "BooleanLiteral",
      "offset": 174,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSSession.swift",
      "kind": "IntegerLiteral",
      "offset": 402,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSSession.swift",
      "kind": "StringLiteral",
      "offset": 700,
      "length": 52,
      "value": "\"DNSSession can only be initailized by a DNS query.\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSSession.swift",
      "kind": "IntegerLiteral",
      "offset": 827,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSSession.swift",
      "kind": "StringLiteral",
      "offset": 859,
      "length": 52,
      "value": "\"Expecting the DNS query has exact one query entry.\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSSession.swift",
      "kind": "StringLiteral",
      "offset": 1326,
      "length": 148,
      "value": "\"<\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSSession.swift",
      "kind": "StringLiteral",
      "offset": 1345,
      "length": 6,
      "value": "\" domain: \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSSession.swift",
      "kind": "StringLiteral",
      "offset": 1396,
      "length": 6,
      "value": "\" realIP: \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSSession.swift",
      "kind": "StringLiteral",
      "offset": 1434,
      "length": 6,
      "value": "\" fakeIP: \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSSession.swift",
      "kind": "StringLiteral",
      "offset": 1472,
      "length": 1,
      "value": "\">\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Rule\/DomainListRule.swift",
      "kind": "Array",
      "offset": 435,
      "length": 2,
      "value": "[]"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Rule\/DomainListRule.swift",
      "kind": "IntegerLiteral",
      "offset": 464,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Rule\/DomainListRule.swift",
      "kind": "StringLiteral",
      "offset": 982,
      "length": 18,
      "value": "\"<DomainListRule>\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Rule\/DomainListRule.swift",
      "kind": "Array",
      "offset": 1097,
      "length": 2,
      "value": "[]"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Rule\/DomainListRule.swift",
      "kind": "BooleanLiteral",
      "offset": 2591,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Rule\/DomainListRule.swift",
      "kind": "BooleanLiteral",
      "offset": 2635,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Rule\/DomainListRule.swift",
      "kind": "StringLiteral",
      "offset": 101,
      "length": 14,
      "value": "\"NEKit.DomainListRule\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/Factory\/ServerAdapterFactory.swift",
      "kind": "StringLiteral",
      "offset": 92,
      "length": 20,
      "value": "\"NEKit.ServerAdapterFactory\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/Atomic.swift",
      "kind": "IntegerLiteral",
      "offset": 540,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 1659,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 1694,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 1831,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 1911,
      "length": 2,
      "value": "64"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 1955,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 2133,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 2164,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 2197,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 2499,
      "length": 3,
      "value": "127"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 2808,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 2822,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 3610,
      "length": 3,
      "value": "128"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 3720,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 3747,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 3785,
      "length": 3,
      "value": "128"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 3884,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 3915,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 3951,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 3993,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 4119,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 4146,
      "length": 3,
      "value": "127"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 4187,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 4272,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 4314,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 4342,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 5617,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "BooleanLiteral",
      "offset": 6471,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 6876,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "BooleanLiteral",
      "offset": 7186,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 7626,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 8038,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 8528,
      "length": 2,
      "value": "32"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 8612,
      "length": 2,
      "value": "32"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 8814,
      "length": 2,
      "value": "32"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 8900,
      "length": 2,
      "value": "32"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 9169,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 9179,
      "length": 1,
      "value": "4"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 9190,
      "length": 1,
      "value": "4"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 9308,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 9361,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 9695,
      "length": 1,
      "value": "3"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 9698,
      "length": 1,
      "value": "3"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 9805,
      "length": 1,
      "value": "2"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 9808,
      "length": 1,
      "value": "3"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 9846,
      "length": 1,
      "value": "3"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 9849,
      "length": 1,
      "value": "2"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 9887,
      "length": 1,
      "value": "3"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 9890,
      "length": 1,
      "value": "3"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 9896,
      "length": 2,
      "value": "32"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 10023,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 10026,
      "length": 1,
      "value": "3"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 10064,
      "length": 1,
      "value": "2"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 10067,
      "length": 1,
      "value": "2"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 10105,
      "length": 1,
      "value": "3"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 10108,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 10146,
      "length": 1,
      "value": "2"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 10149,
      "length": 1,
      "value": "3"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 10155,
      "length": 2,
      "value": "32"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 10212,
      "length": 1,
      "value": "3"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 10215,
      "length": 1,
      "value": "2"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 10221,
      "length": 2,
      "value": "32"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 10387,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 10390,
      "length": 1,
      "value": "3"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 10428,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 10431,
      "length": 1,
      "value": "2"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 10469,
      "length": 1,
      "value": "2"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 10472,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 10510,
      "length": 1,
      "value": "3"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 10513,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 10551,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 10554,
      "length": 1,
      "value": "3"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 10560,
      "length": 2,
      "value": "32"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 10617,
      "length": 1,
      "value": "2"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 10620,
      "length": 1,
      "value": "2"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 10626,
      "length": 2,
      "value": "32"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 10683,
      "length": 1,
      "value": "3"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 10686,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 10692,
      "length": 2,
      "value": "32"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 10858,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 10861,
      "length": 1,
      "value": "2"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 10899,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 10902,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 10940,
      "length": 1,
      "value": "2"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 10943,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 10981,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 10984,
      "length": 1,
      "value": "3"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 10990,
      "length": 2,
      "value": "32"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 11047,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 11050,
      "length": 1,
      "value": "2"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 11056,
      "length": 2,
      "value": "32"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 11113,
      "length": 1,
      "value": "2"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 11116,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 11122,
      "length": 2,
      "value": "32"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 11179,
      "length": 1,
      "value": "3"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 11182,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 11188,
      "length": 2,
      "value": "32"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 11354,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 11357,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 11395,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 11398,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 11436,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 11439,
      "length": 1,
      "value": "2"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 11445,
      "length": 2,
      "value": "32"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 11502,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 11505,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 11511,
      "length": 2,
      "value": "32"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 11568,
      "length": 1,
      "value": "2"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 11571,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 11577,
      "length": 2,
      "value": "32"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 11743,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 11746,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 11774,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 11777,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 11783,
      "length": 2,
      "value": "32"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 11840,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 11843,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 11849,
      "length": 2,
      "value": "32"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 12159,
      "length": 2,
      "value": "32"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 12278,
      "length": 2,
      "value": "32"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 12364,
      "length": 2,
      "value": "32"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 12525,
      "length": 2,
      "value": "32"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 12611,
      "length": 2,
      "value": "32"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 12772,
      "length": 2,
      "value": "32"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 13790,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 13828,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 14010,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 14289,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "BooleanLiteral",
      "offset": 14324,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "BooleanLiteral",
      "offset": 14450,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 14808,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "BooleanLiteral",
      "offset": 14843,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "BooleanLiteral",
      "offset": 14972,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 15166,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 15528,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 15598,
      "length": 3,
      "value": "128"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 15604,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 15640,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 15752,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 15967,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "StringLiteral",
      "offset": 15970,
      "length": 15,
      "value": "\"Division by 0\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 16112,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 16176,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 16387,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 16973,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 17007,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 17022,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 17026,
      "length": 3,
      "value": "127"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 17077,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 17092,
      "length": 3,
      "value": "128"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 17129,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 17196,
      "length": 3,
      "value": "128"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 17203,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 17375,
      "length": 3,
      "value": "128"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "Array",
      "offset": 17517,
      "length": 2,
      "value": "[]"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "Array",
      "offset": 17567,
      "length": 2,
      "value": "[]"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 17606,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 17839,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 17891,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 18008,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 18209,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 18281,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 18285,
      "length": 3,
      "value": "128"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 18327,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 18411,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 18447,
      "length": 3,
      "value": "128"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 18656,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 20988,
      "length": 3,
      "value": "127"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 21042,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 21086,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 21090,
      "length": 2,
      "value": "63"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 21247,
      "length": 2,
      "value": "64"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 21348,
      "length": 2,
      "value": "64"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 21450,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 21567,
      "length": 2,
      "value": "64"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 21608,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 22081,
      "length": 3,
      "value": "127"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 22135,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 22179,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 22183,
      "length": 2,
      "value": "63"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 22278,
      "length": 2,
      "value": "64"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 22441,
      "length": 2,
      "value": "64"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 22575,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 22660,
      "length": 2,
      "value": "64"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 22723,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "StringLiteral",
      "offset": 23204,
      "length": 20,
      "value": "\"Addition overflow!\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "StringLiteral",
      "offset": 23520,
      "length": 19,
      "value": "\"Integer underflow\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "StringLiteral",
      "offset": 23908,
      "length": 26,
      "value": "\"Multiplication overflow!\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "BooleanLiteral",
      "offset": 24378,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "BooleanLiteral",
      "offset": 24408,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 24614,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 25379,
      "length": 2,
      "value": "10"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "BooleanLiteral",
      "offset": 25401,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 25448,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 25461,
      "length": 2,
      "value": "37"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "StringLiteral",
      "offset": 25465,
      "length": 41,
      "value": "\"radix must be within the range of 2-36.\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 25628,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "StringLiteral",
      "offset": 25658,
      "length": 3,
      "value": "\"0\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 25846,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "StringLiteral",
      "offset": 25942,
      "length": 38,
      "value": "\"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "StringLiteral",
      "offset": 25983,
      "length": 38,
      "value": "\"0123456789abcdefghijklmnopqrstuvwxyz\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 26435,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "BooleanLiteral",
      "offset": 26860,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "BooleanLiteral",
      "offset": 26992,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "BooleanLiteral",
      "offset": 27022,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 27560,
      "length": 2,
      "value": "10"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 27596,
      "length": 1,
      "value": "2"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "StringLiteral",
      "offset": 27808,
      "length": 4,
      "value": "\"0b\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 27824,
      "length": 1,
      "value": "2"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "StringLiteral",
      "offset": 27861,
      "length": 4,
      "value": "\"0o\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 27877,
      "length": 1,
      "value": "8"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "StringLiteral",
      "offset": 27914,
      "length": 4,
      "value": "\"0x\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 27930,
      "length": 2,
      "value": "16"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 27958,
      "length": 2,
      "value": "10"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 28692,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "StringLiteral",
      "offset": 28695,
      "length": 106,
      "value": "\"Value is too large to fit into a BinaryFloatingPoint until a 128bit BinaryFloatingPoint type is defined.\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 28933,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "IntegerLiteral",
      "offset": 29610,
      "length": 2,
      "value": "10"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/UInt128.swift",
      "kind": "BooleanLiteral",
      "offset": 29632,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/HTTPURL.swift",
      "kind": "StringLiteral",
      "offset": 297,
      "length": 65,
      "value": "\"^(?:(?:(https?):\\\/\\\/)?([\\w\\.-]+)(?::(\\d+))?)?(?:\\\/(.*))?$\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/HTTPURL.swift",
      "kind": "IntegerLiteral",
      "offset": 575,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/HTTPURL.swift",
      "kind": "IntegerLiteral",
      "offset": 681,
      "length": 1,
      "value": "5"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/HTTPURL.swift",
      "kind": "IntegerLiteral",
      "offset": 755,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/HTTPURL.swift",
      "kind": "IntegerLiteral",
      "offset": 859,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/HTTPURL.swift",
      "kind": "IntegerLiteral",
      "offset": 1040,
      "length": 1,
      "value": "2"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/HTTPURL.swift",
      "kind": "IntegerLiteral",
      "offset": 1217,
      "length": 1,
      "value": "3"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/HTTPURL.swift",
      "kind": "IntegerLiteral",
      "offset": 1399,
      "length": 1,
      "value": "4"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/HTTPURL.swift",
      "kind": "StringLiteral",
      "offset": 1544,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSServer.swift",
      "kind": "Dictionary",
      "offset": 758,
      "length": 3,
      "value": "[]"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSServer.swift",
      "kind": "Dictionary",
      "offset": 822,
      "length": 3,
      "value": "[]"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSServer.swift",
      "kind": "Array",
      "offset": 915,
      "length": 2,
      "value": "[]"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSServer.swift",
      "kind": "StringLiteral",
      "offset": 3279,
      "length": 46,
      "value": "\"The rule match result should never be .Pass.\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSServer.swift",
      "kind": "BooleanLiteral",
      "offset": 4121,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSServer.swift",
      "kind": "BooleanLiteral",
      "offset": 4235,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSServer.swift",
      "kind": "BooleanLiteral",
      "offset": 4343,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSServer.swift",
      "kind": "BooleanLiteral",
      "offset": 4444,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSServer.swift",
      "kind": "BooleanLiteral",
      "offset": 4544,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSServer.swift",
      "kind": "BooleanLiteral",
      "offset": 4641,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSServer.swift",
      "kind": "Array",
      "offset": 4816,
      "length": 2,
      "value": "[]"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSServer.swift",
      "kind": "BooleanLiteral",
      "offset": 5785,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSServer.swift",
      "kind": "IntegerLiteral",
      "offset": 5961,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSServer.swift",
      "kind": "StringLiteral",
      "offset": 6187,
      "length": 31,
      "value": "\"Failed to build DNS response.\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSServer.swift",
      "kind": "BooleanLiteral",
      "offset": 6954,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSServer.swift",
      "kind": "StringLiteral",
      "offset": 7591,
      "length": 26,
      "value": "\"Failed to get a fake IP.\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSServer.swift",
      "kind": "BooleanLiteral",
      "offset": 7638,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSServer.swift",
      "kind": "IntegerLiteral",
      "offset": 7909,
      "length": 1,
      "value": "2"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSServer.swift",
      "kind": "BooleanLiteral",
      "offset": 7927,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSServer.swift",
      "kind": "StringLiteral",
      "offset": 8076,
      "length": 50,
      "value": "\"Failed to parse response from remote DNS server.\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSServer.swift",
      "kind": "StringLiteral",
      "offset": 8425,
      "length": 61,
      "value": "\"Do not find the corresponding DNS session for the response.\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSServer.swift",
      "kind": "StringLiteral",
      "offset": 9184,
      "length": 69,
      "value": "\"The rule match result should never be .Pass or .Unknown in IP mode.\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Rule\/AllRule.swift",
      "kind": "StringLiteral",
      "offset": 208,
      "length": 11,
      "value": "\"<AllRule>\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Rule\/AllRule.swift",
      "kind": "StringLiteral",
      "offset": 81,
      "length": 7,
      "value": "\"NEKit.AllRule\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/IPPool.swift",
      "kind": "Array",
      "offset": 268,
      "length": 2,
      "value": "[]"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/IPPool.swift",
      "kind": "IntegerLiteral",
      "offset": 466,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/IPPool.swift",
      "kind": "IntegerLiteral",
      "offset": 599,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Rule\/CountryRule.swift",
      "kind": "StringLiteral",
      "offset": 467,
      "length": 57,
      "value": "\"<CountryRule countryCode:\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Rule\/CountryRule.swift",
      "kind": "StringLiteral",
      "offset": 507,
      "length": 5,
      "value": "\" match:\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Rule\/CountryRule.swift",
      "kind": "StringLiteral",
      "offset": 522,
      "length": 1,
      "value": "\">\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Rule\/CountryRule.swift",
      "kind": "StringLiteral",
      "offset": 159,
      "length": 11,
      "value": "\"NEKit.CountryRule\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/RawSocket\/NWTCPSocket.swift",
      "kind": "BooleanLiteral",
      "offset": 306,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/RawSocket\/NWTCPSocket.swift",
      "kind": "BooleanLiteral",
      "offset": 348,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/RawSocket\/NWTCPSocket.swift",
      "kind": "BooleanLiteral",
      "offset": 382,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/RawSocket\/NWTCPSocket.swift",
      "kind": "BooleanLiteral",
      "offset": 462,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/RawSocket\/NWTCPSocket.swift",
      "kind": "StringLiteral",
      "offset": 1820,
      "length": 9,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/RawSocket\/NWTCPSocket.swift",
      "kind": "StringLiteral",
      "offset": 1828,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/RawSocket\/NWTCPSocket.swift",
      "kind": "StringLiteral",
      "offset": 2431,
      "length": 7,
      "value": "\"state\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/RawSocket\/NWTCPSocket.swift",
      "kind": "BooleanLiteral",
      "offset": 2684,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/RawSocket\/NWTCPSocket.swift",
      "kind": "BooleanLiteral",
      "offset": 2860,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/RawSocket\/NWTCPSocket.swift",
      "kind": "BooleanLiteral",
      "offset": 3020,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/RawSocket\/NWTCPSocket.swift",
      "kind": "IntegerLiteral",
      "offset": 3533,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/RawSocket\/NWTCPSocket.swift",
      "kind": "IntegerLiteral",
      "offset": 4026,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/RawSocket\/NWTCPSocket.swift",
      "kind": "StringLiteral",
      "offset": 4158,
      "length": 74,
      "value": "\"NWTCPSocket got an error when reading data: \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/RawSocket\/NWTCPSocket.swift",
      "kind": "StringLiteral",
      "offset": 4231,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/RawSocket\/NWTCPSocket.swift",
      "kind": "StringLiteral",
      "offset": 4894,
      "length": 74,
      "value": "\"NWTCPSocket got an error when reading data: \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/RawSocket\/NWTCPSocket.swift",
      "kind": "StringLiteral",
      "offset": 4967,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/RawSocket\/NWTCPSocket.swift",
      "kind": "IntegerLiteral",
      "offset": 5481,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/RawSocket\/NWTCPSocket.swift",
      "kind": "IntegerLiteral",
      "offset": 6447,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/RawSocket\/NWTCPSocket.swift",
      "kind": "BooleanLiteral",
      "offset": 6600,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/RawSocket\/NWTCPSocket.swift",
      "kind": "StringLiteral",
      "offset": 6936,
      "length": 7,
      "value": "\"state\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/RawSocket\/NWTCPSocket.swift",
      "kind": "BooleanLiteral",
      "offset": 7191,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/RawSocket\/NWTCPSocket.swift",
      "kind": "BooleanLiteral",
      "offset": 7266,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/RawSocket\/NWTCPSocket.swift",
      "kind": "BooleanLiteral",
      "offset": 8121,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/RawSocket\/NWTCPSocket.swift",
      "kind": "BooleanLiteral",
      "offset": 8581,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/RawSocket\/NWTCPSocket.swift",
      "kind": "BooleanLiteral",
      "offset": 8699,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/RawSocket\/NWTCPSocket.swift",
      "kind": "StringLiteral",
      "offset": 8779,
      "length": 74,
      "value": "\"NWTCPSocket got an error when writing data: \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/RawSocket\/NWTCPSocket.swift",
      "kind": "StringLiteral",
      "offset": 8852,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/RawSocket\/NWTCPSocket.swift",
      "kind": "StringLiteral",
      "offset": 9757,
      "length": 7,
      "value": "\"state\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Rule\/DirectRule.swift",
      "kind": "StringLiteral",
      "offset": 255,
      "length": 14,
      "value": "\"<DirectRule>\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Rule\/DirectRule.swift",
      "kind": "StringLiteral",
      "offset": 174,
      "length": 10,
      "value": "\"NEKit.DirectRule\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/PacketProtocolParser.swift",
      "kind": "IntegerLiteral",
      "offset": 638,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/PacketProtocolParser.swift",
      "kind": "IntegerLiteral",
      "offset": 802,
      "length": 1,
      "value": "8"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/PacketProtocolParser.swift",
      "kind": "IntegerLiteral",
      "offset": 912,
      "length": 1,
      "value": "8"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/PacketProtocolParser.swift",
      "kind": "IntegerLiteral",
      "offset": 1223,
      "length": 1,
      "value": "2"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/PacketProtocolParser.swift",
      "kind": "IntegerLiteral",
      "offset": 1276,
      "length": 1,
      "value": "8"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/PacketProtocolParser.swift",
      "kind": "IntegerLiteral",
      "offset": 1466,
      "length": 1,
      "value": "2"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/PacketProtocolParser.swift",
      "kind": "IntegerLiteral",
      "offset": 1590,
      "length": 1,
      "value": "2"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/PacketProtocolParser.swift",
      "kind": "IntegerLiteral",
      "offset": 1601,
      "length": 1,
      "value": "4"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/PacketProtocolParser.swift",
      "kind": "IntegerLiteral",
      "offset": 1772,
      "length": 1,
      "value": "4"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/PacketProtocolParser.swift",
      "kind": "IntegerLiteral",
      "offset": 1783,
      "length": 1,
      "value": "6"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/PacketProtocolParser.swift",
      "kind": "IntegerLiteral",
      "offset": 1848,
      "length": 1,
      "value": "8"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/PacketProtocolParser.swift",
      "kind": "IntegerLiteral",
      "offset": 1859,
      "length": 1,
      "value": "8"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/PacketProtocolParser.swift",
      "kind": "IntegerLiteral",
      "offset": 1933,
      "length": 1,
      "value": "6"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/PacketProtocolParser.swift",
      "kind": "IntegerLiteral",
      "offset": 1944,
      "length": 1,
      "value": "8"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/PacketProtocolParser.swift",
      "kind": "IntegerLiteral",
      "offset": 2165,
      "length": 1,
      "value": "6"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/PacketProtocolParser.swift",
      "kind": "IntegerLiteral",
      "offset": 2176,
      "length": 1,
      "value": "8"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Rule\/DNSFailRule.swift",
      "kind": "StringLiteral",
      "offset": 219,
      "length": 15,
      "value": "\"<DNSFailRule>\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Rule\/DNSFailRule.swift",
      "kind": "StringLiteral",
      "offset": 1487,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Rule\/DNSFailRule.swift",
      "kind": "StringLiteral",
      "offset": 88,
      "length": 11,
      "value": "\"NEKit.DNSFailRule\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/IPPacket.swift",
      "kind": "IntegerLiteral",
      "offset": 94,
      "length": 1,
      "value": "4"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/IPPacket.swift",
      "kind": "IntegerLiteral",
      "offset": 104,
      "length": 1,
      "value": "6"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/IPPacket.swift",
      "kind": "IntegerLiteral",
      "offset": 94,
      "length": 1,
      "value": "4"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/IPPacket.swift",
      "kind": "IntegerLiteral",
      "offset": 104,
      "length": 1,
      "value": "6"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/IPPacket.swift",
      "kind": "IntegerLiteral",
      "offset": 94,
      "length": 1,
      "value": "4"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/IPPacket.swift",
      "kind": "IntegerLiteral",
      "offset": 104,
      "length": 1,
      "value": "6"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/IPPacket.swift",
      "kind": "IntegerLiteral",
      "offset": 164,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/IPPacket.swift",
      "kind": "IntegerLiteral",
      "offset": 173,
      "length": 1,
      "value": "6"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/IPPacket.swift",
      "kind": "IntegerLiteral",
      "offset": 182,
      "length": 2,
      "value": "17"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/IPPacket.swift",
      "kind": "IntegerLiteral",
      "offset": 164,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/IPPacket.swift",
      "kind": "IntegerLiteral",
      "offset": 173,
      "length": 1,
      "value": "6"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/IPPacket.swift",
      "kind": "IntegerLiteral",
      "offset": 182,
      "length": 2,
      "value": "17"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/IPPacket.swift",
      "kind": "IntegerLiteral",
      "offset": 164,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/IPPacket.swift",
      "kind": "IntegerLiteral",
      "offset": 173,
      "length": 1,
      "value": "6"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/IPPacket.swift",
      "kind": "IntegerLiteral",
      "offset": 182,
      "length": 2,
      "value": "17"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/IPPacket.swift",
      "kind": "IntegerLiteral",
      "offset": 653,
      "length": 2,
      "value": "20"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/IPPacket.swift",
      "kind": "IntegerLiteral",
      "offset": 802,
      "length": 1,
      "value": "4"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/IPPacket.swift",
      "kind": "IntegerLiteral",
      "offset": 1211,
      "length": 2,
      "value": "20"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/IPPacket.swift",
      "kind": "IntegerLiteral",
      "offset": 1383,
      "length": 1,
      "value": "9"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/IPPacket.swift",
      "kind": "IntegerLiteral",
      "offset": 1773,
      "length": 2,
      "value": "20"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/IPPacket.swift",
      "kind": "IntegerLiteral",
      "offset": 1903,
      "length": 2,
      "value": "12"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/IPPacket.swift",
      "kind": "IntegerLiteral",
      "offset": 2301,
      "length": 2,
      "value": "20"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/IPPacket.swift",
      "kind": "IntegerLiteral",
      "offset": 2431,
      "length": 2,
      "value": "16"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/IPPacket.swift",
      "kind": "IntegerLiteral",
      "offset": 3116,
      "length": 4,
      "value": "0x0F"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/IPPacket.swift",
      "kind": "IntegerLiteral",
      "offset": 3123,
      "length": 1,
      "value": "4"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/IPPacket.swift",
      "kind": "IntegerLiteral",
      "offset": 3240,
      "length": 1,
      "value": "4"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/IPPacket.swift",
      "kind": "IntegerLiteral",
      "offset": 4070,
      "length": 4,
      "value": "0x0F"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/IPPacket.swift",
      "kind": "IntegerLiteral",
      "offset": 4077,
      "length": 1,
      "value": "4"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/IPPacket.swift",
      "kind": "IntegerLiteral",
      "offset": 4194,
      "length": 1,
      "value": "4"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/IPPacket.swift",
      "kind": "IntegerLiteral",
      "offset": 4329,
      "length": 1,
      "value": "2"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/IPPacket.swift",
      "kind": "IntegerLiteral",
      "offset": 4506,
      "length": 2,
      "value": "20"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/IPPacket.swift",
      "kind": "IntegerLiteral",
      "offset": 4719,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/IPPacket.swift",
      "kind": "IntegerLiteral",
      "offset": 5251,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/IPPacket.swift",
      "kind": "IntegerLiteral",
      "offset": 5416,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/IPPacket.swift",
      "kind": "IntegerLiteral",
      "offset": 5467,
      "length": 2,
      "value": "64"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/IPPacket.swift",
      "kind": "BooleanLiteral",
      "offset": 6265,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/IPPacket.swift",
      "kind": "IntegerLiteral",
      "offset": 6360,
      "length": 1,
      "value": "4"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/IPPacket.swift",
      "kind": "StringLiteral",
      "offset": 6393,
      "length": 43,
      "value": "\"Got unknown ip packet version \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/IPPacket.swift",
      "kind": "IntegerLiteral",
      "offset": 6433,
      "length": 1,
      "value": "4"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/IPPacket.swift",
      "kind": "StringLiteral",
      "offset": 6435,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/IPPacket.swift",
      "kind": "IntegerLiteral",
      "offset": 6520,
      "length": 4,
      "value": "0x0F"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/IPPacket.swift",
      "kind": "IntegerLiteral",
      "offset": 6527,
      "length": 1,
      "value": "4"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/IPPacket.swift",
      "kind": "StringLiteral",
      "offset": 6735,
      "length": 39,
      "value": "\"Packet length mismatches from header.\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/IPPacket.swift",
      "kind": "StringLiteral",
      "offset": 7027,
      "length": 34,
      "value": "\"Get unsupported packet protocol.\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/IPPacket.swift",
      "kind": "StringLiteral",
      "offset": 7500,
      "length": 28,
      "value": "\"IPv6 is not supported yet.\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/IPPacket.swift",
      "kind": "StringLiteral",
      "offset": 7848,
      "length": 82,
      "value": "\"Can not parse packet header of type \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/IPPacket.swift",
      "kind": "StringLiteral",
      "offset": 7925,
      "length": 3,
      "value": "\" yet\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/IPPacket.swift",
      "kind": "IntegerLiteral",
      "offset": 8052,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/IPPacket.swift",
      "kind": "IntegerLiteral",
      "offset": 8150,
      "length": 2,
      "value": "16"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/IPPacket.swift",
      "kind": "IntegerLiteral",
      "offset": 8187,
      "length": 6,
      "value": "0xFFFF"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/IPPacket.swift",
      "kind": "IntegerLiteral",
      "offset": 8305,
      "length": 2,
      "value": "16"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/IPPacket.swift",
      "kind": "IntegerLiteral",
      "offset": 8342,
      "length": 6,
      "value": "0xFFFF"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/IPPacket.swift",
      "kind": "IntegerLiteral",
      "offset": 8415,
      "length": 1,
      "value": "8"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/IPPacket.swift",
      "kind": "IntegerLiteral",
      "offset": 8703,
      "length": 1,
      "value": "4"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/IPPacket.swift",
      "kind": "IntegerLiteral",
      "offset": 8727,
      "length": 1,
      "value": "4"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/IPPacket.swift",
      "kind": "IntegerLiteral",
      "offset": 8734,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/IPPacket.swift",
      "kind": "IntegerLiteral",
      "offset": 8774,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/IPPacket.swift",
      "kind": "IntegerLiteral",
      "offset": 8823,
      "length": 1,
      "value": "2"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/IPPacket.swift",
      "kind": "IntegerLiteral",
      "offset": 8875,
      "length": 1,
      "value": "4"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/IPPacket.swift",
      "kind": "IntegerLiteral",
      "offset": 8919,
      "length": 1,
      "value": "6"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/IPPacket.swift",
      "kind": "IntegerLiteral",
      "offset": 8959,
      "length": 1,
      "value": "8"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/IPPacket.swift",
      "kind": "IntegerLiteral",
      "offset": 9022,
      "length": 1,
      "value": "9"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/IPPacket.swift",
      "kind": "IntegerLiteral",
      "offset": 9080,
      "length": 2,
      "value": "10"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/IPPacket.swift",
      "kind": "IntegerLiteral",
      "offset": 9092,
      "length": 1,
      "value": "2"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/IPPacket.swift",
      "kind": "IntegerLiteral",
      "offset": 9165,
      "length": 2,
      "value": "12"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/IPPacket.swift",
      "kind": "BooleanLiteral",
      "offset": 9175,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/IPPacket.swift",
      "kind": "IntegerLiteral",
      "offset": 9257,
      "length": 2,
      "value": "16"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/IPPacket.swift",
      "kind": "BooleanLiteral",
      "offset": 9267,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/IPPacket.swift",
      "kind": "IntegerLiteral",
      "offset": 9598,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/IPPacket.swift",
      "kind": "IntegerLiteral",
      "offset": 9629,
      "length": 2,
      "value": "10"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/IPPacket.swift",
      "kind": "BooleanLiteral",
      "offset": 9639,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/IPPacket.swift",
      "kind": "IntegerLiteral",
      "offset": 9812,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/IPPacket.swift",
      "kind": "BooleanLiteral",
      "offset": 9911,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/IPPacket.swift",
      "kind": "IntegerLiteral",
      "offset": 10133,
      "length": 1,
      "value": "2"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/IPPacket.swift",
      "kind": "BooleanLiteral",
      "offset": 10232,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/IPPacket.swift",
      "kind": "IntegerLiteral",
      "offset": 10454,
      "length": 1,
      "value": "4"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/Packet\/IPPacket.swift",
      "kind": "IntegerLiteral",
      "offset": 10567,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 108,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 111,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 114,
      "length": 2,
      "value": "2"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 118,
      "length": 2,
      "value": "3"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 122,
      "length": 2,
      "value": "4"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 126,
      "length": 5,
      "value": "5"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 133,
      "length": 3,
      "value": "6"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 138,
      "length": 2,
      "value": "7"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 142,
      "length": 2,
      "value": "8"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 146,
      "length": 2,
      "value": "9"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 150,
      "length": 4,
      "value": "10"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 156,
      "length": 3,
      "value": "11"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 161,
      "length": 3,
      "value": "12"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 166,
      "length": 5,
      "value": "13"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 173,
      "length": 5,
      "value": "14"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 180,
      "length": 2,
      "value": "15"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 184,
      "length": 3,
      "value": "16"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 189,
      "length": 2,
      "value": "17"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 193,
      "length": 5,
      "value": "18"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 200,
      "length": 3,
      "value": "19"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 205,
      "length": 4,
      "value": "20"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 211,
      "length": 2,
      "value": "21"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 215,
      "length": 4,
      "value": "22"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 221,
      "length": 7,
      "value": "23"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 230,
      "length": 3,
      "value": "24"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 235,
      "length": 3,
      "value": "25"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 240,
      "length": 2,
      "value": "26"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 244,
      "length": 4,
      "value": "27"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 250,
      "length": 4,
      "value": "28"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 256,
      "length": 3,
      "value": "29"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 261,
      "length": 3,
      "value": "30"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 266,
      "length": 3,
      "value": "31"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 271,
      "length": 6,
      "value": "32"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 279,
      "length": 3,
      "value": "33"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 284,
      "length": 4,
      "value": "34"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 290,
      "length": 5,
      "value": "35"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 297,
      "length": 2,
      "value": "36"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 301,
      "length": 4,
      "value": "37"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 307,
      "length": 2,
      "value": "38"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 311,
      "length": 5,
      "value": "39"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 318,
      "length": 4,
      "value": "40"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 324,
      "length": 3,
      "value": "41"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 329,
      "length": 3,
      "value": "42"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 334,
      "length": 2,
      "value": "43"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 338,
      "length": 5,
      "value": "44"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 353,
      "length": 2,
      "value": "46"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 357,
      "length": 4,
      "value": "47"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 363,
      "length": 6,
      "value": "48"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 378,
      "length": 3,
      "value": "249"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 383,
      "length": 4,
      "value": "250"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 389,
      "length": 4,
      "value": "251"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 395,
      "length": 4,
      "value": "252"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 401,
      "length": 5,
      "value": "253"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 408,
      "length": 5,
      "value": "254"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 415,
      "length": 3,
      "value": "255"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 108,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 111,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 114,
      "length": 2,
      "value": "2"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 118,
      "length": 2,
      "value": "3"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 122,
      "length": 2,
      "value": "4"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 126,
      "length": 5,
      "value": "5"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 133,
      "length": 3,
      "value": "6"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 138,
      "length": 2,
      "value": "7"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 142,
      "length": 2,
      "value": "8"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 146,
      "length": 2,
      "value": "9"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 150,
      "length": 4,
      "value": "10"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 156,
      "length": 3,
      "value": "11"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 161,
      "length": 3,
      "value": "12"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 166,
      "length": 5,
      "value": "13"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 173,
      "length": 5,
      "value": "14"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 180,
      "length": 2,
      "value": "15"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 184,
      "length": 3,
      "value": "16"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 189,
      "length": 2,
      "value": "17"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 193,
      "length": 5,
      "value": "18"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 200,
      "length": 3,
      "value": "19"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 205,
      "length": 4,
      "value": "20"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 211,
      "length": 2,
      "value": "21"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 215,
      "length": 4,
      "value": "22"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 221,
      "length": 7,
      "value": "23"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 230,
      "length": 3,
      "value": "24"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 235,
      "length": 3,
      "value": "25"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 240,
      "length": 2,
      "value": "26"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 244,
      "length": 4,
      "value": "27"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 250,
      "length": 4,
      "value": "28"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 256,
      "length": 3,
      "value": "29"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 261,
      "length": 3,
      "value": "30"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 266,
      "length": 3,
      "value": "31"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 271,
      "length": 6,
      "value": "32"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 279,
      "length": 3,
      "value": "33"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 284,
      "length": 4,
      "value": "34"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 290,
      "length": 5,
      "value": "35"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 297,
      "length": 2,
      "value": "36"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 301,
      "length": 4,
      "value": "37"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 307,
      "length": 2,
      "value": "38"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 311,
      "length": 5,
      "value": "39"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 318,
      "length": 4,
      "value": "40"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 324,
      "length": 3,
      "value": "41"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 329,
      "length": 3,
      "value": "42"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 334,
      "length": 2,
      "value": "43"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 338,
      "length": 5,
      "value": "44"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 353,
      "length": 2,
      "value": "46"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 357,
      "length": 4,
      "value": "47"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 363,
      "length": 6,
      "value": "48"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 378,
      "length": 3,
      "value": "249"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 383,
      "length": 4,
      "value": "250"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 389,
      "length": 4,
      "value": "251"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 395,
      "length": 4,
      "value": "252"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 401,
      "length": 5,
      "value": "253"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 408,
      "length": 5,
      "value": "254"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 415,
      "length": 3,
      "value": "255"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 108,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 111,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 114,
      "length": 2,
      "value": "2"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 118,
      "length": 2,
      "value": "3"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 122,
      "length": 2,
      "value": "4"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 126,
      "length": 5,
      "value": "5"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 133,
      "length": 3,
      "value": "6"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 138,
      "length": 2,
      "value": "7"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 142,
      "length": 2,
      "value": "8"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 146,
      "length": 2,
      "value": "9"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 150,
      "length": 4,
      "value": "10"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 156,
      "length": 3,
      "value": "11"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 161,
      "length": 3,
      "value": "12"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 166,
      "length": 5,
      "value": "13"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 173,
      "length": 5,
      "value": "14"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 180,
      "length": 2,
      "value": "15"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 184,
      "length": 3,
      "value": "16"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 189,
      "length": 2,
      "value": "17"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 193,
      "length": 5,
      "value": "18"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 200,
      "length": 3,
      "value": "19"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 205,
      "length": 4,
      "value": "20"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 211,
      "length": 2,
      "value": "21"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 215,
      "length": 4,
      "value": "22"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 221,
      "length": 7,
      "value": "23"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 230,
      "length": 3,
      "value": "24"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 235,
      "length": 3,
      "value": "25"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 240,
      "length": 2,
      "value": "26"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 244,
      "length": 4,
      "value": "27"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 250,
      "length": 4,
      "value": "28"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 256,
      "length": 3,
      "value": "29"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 261,
      "length": 3,
      "value": "30"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 266,
      "length": 3,
      "value": "31"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 271,
      "length": 6,
      "value": "32"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 279,
      "length": 3,
      "value": "33"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 284,
      "length": 4,
      "value": "34"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 290,
      "length": 5,
      "value": "35"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 297,
      "length": 2,
      "value": "36"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 301,
      "length": 4,
      "value": "37"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 307,
      "length": 2,
      "value": "38"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 311,
      "length": 5,
      "value": "39"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 318,
      "length": 4,
      "value": "40"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 324,
      "length": 3,
      "value": "41"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 329,
      "length": 3,
      "value": "42"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 334,
      "length": 2,
      "value": "43"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 338,
      "length": 5,
      "value": "44"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 353,
      "length": 2,
      "value": "46"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 357,
      "length": 4,
      "value": "47"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 363,
      "length": 6,
      "value": "48"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 378,
      "length": 3,
      "value": "249"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 383,
      "length": 4,
      "value": "250"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 389,
      "length": 4,
      "value": "251"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 395,
      "length": 4,
      "value": "252"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 401,
      "length": 5,
      "value": "253"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 408,
      "length": 5,
      "value": "254"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 415,
      "length": 3,
      "value": "255"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 474,
      "length": 8,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 474,
      "length": 8,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 474,
      "length": 8,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 542,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 545,
      "length": 11,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 558,
      "length": 13,
      "value": "2"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 573,
      "length": 9,
      "value": "3"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 584,
      "length": 14,
      "value": "4"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 600,
      "length": 7,
      "value": "5"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 542,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 545,
      "length": 11,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 558,
      "length": 13,
      "value": "2"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 573,
      "length": 9,
      "value": "3"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 584,
      "length": 14,
      "value": "4"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 600,
      "length": 7,
      "value": "5"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 542,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 545,
      "length": 11,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 558,
      "length": 13,
      "value": "2"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 573,
      "length": 9,
      "value": "3"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 584,
      "length": 14,
      "value": "4"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 600,
      "length": 7,
      "value": "5"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 662,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 662,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSEnums.swift",
      "kind": "IntegerLiteral",
      "offset": 662,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/RuleMatchEvent.swift",
      "kind": "StringLiteral",
      "offset": 189,
      "length": 42,
      "value": "\"Rule \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/RuleMatchEvent.swift",
      "kind": "StringLiteral",
      "offset": 202,
      "length": 7,
      "value": "\" matched session \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/RuleMatchEvent.swift",
      "kind": "StringLiteral",
      "offset": 229,
      "length": 1,
      "value": "\".\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/RuleMatchEvent.swift",
      "kind": "StringLiteral",
      "offset": 307,
      "length": 48,
      "value": "\"Rule \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/RuleMatchEvent.swift",
      "kind": "StringLiteral",
      "offset": 320,
      "length": 3,
      "value": "\" did not match session \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/RuleMatchEvent.swift",
      "kind": "StringLiteral",
      "offset": 353,
      "length": 1,
      "value": "\".\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/RuleMatchEvent.swift",
      "kind": "StringLiteral",
      "offset": 458,
      "length": 87,
      "value": "\"Rule \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/RuleMatchEvent.swift",
      "kind": "StringLiteral",
      "offset": 471,
      "length": 7,
      "value": "\" matched DNS session \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/RuleMatchEvent.swift",
      "kind": "StringLiteral",
      "offset": 502,
      "length": 2,
      "value": "\" of type \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/RuleMatchEvent.swift",
      "kind": "StringLiteral",
      "offset": 518,
      "length": 1,
      "value": "\", the result is \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/RuleMatchEvent.swift",
      "kind": "StringLiteral",
      "offset": 543,
      "length": 1,
      "value": "\".\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/TUNInterface.swift",
      "kind": "Array",
      "offset": 325,
      "length": 2,
      "value": "[]"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/TUNInterface.swift",
      "kind": "Array",
      "offset": 1307,
      "length": 2,
      "value": "[]"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/Port.swift",
      "kind": "StringLiteral",
      "offset": 1277,
      "length": 17,
      "value": "\"<Port \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/Port.swift",
      "kind": "StringLiteral",
      "offset": 1292,
      "length": 1,
      "value": "\">\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Tunnel\/Tunnel.swift",
      "kind": "StringLiteral",
      "offset": 529,
      "length": 9,
      "value": "\"invalid\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Tunnel\/Tunnel.swift",
      "kind": "StringLiteral",
      "offset": 596,
      "length": 17,
      "value": "\"reading request\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Tunnel\/Tunnel.swift",
      "kind": "StringLiteral",
      "offset": 673,
      "length": 21,
      "value": "\"waiting to be ready\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Tunnel\/Tunnel.swift",
      "kind": "StringLiteral",
      "offset": 748,
      "length": 12,
      "value": "\"forwarding\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Tunnel\/Tunnel.swift",
      "kind": "StringLiteral",
      "offset": 811,
      "length": 9,
      "value": "\"closing\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Tunnel\/Tunnel.swift",
      "kind": "StringLiteral",
      "offset": 870,
      "length": 8,
      "value": "\"closed\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Tunnel\/Tunnel.swift",
      "kind": "IntegerLiteral",
      "offset": 1282,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Tunnel\/Tunnel.swift",
      "kind": "BooleanLiteral",
      "offset": 1487,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Tunnel\/Tunnel.swift",
      "kind": "BooleanLiteral",
      "offset": 1543,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Tunnel\/Tunnel.swift",
      "kind": "BooleanLiteral",
      "offset": 1587,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Tunnel\/Tunnel.swift",
      "kind": "StringLiteral",
      "offset": 1990,
      "length": 68,
      "value": "\"<Tunnel proxySocket:\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Tunnel\/Tunnel.swift",
      "kind": "StringLiteral",
      "offset": 2025,
      "length": 13,
      "value": "\" adapterSocket:\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Tunnel\/Tunnel.swift",
      "kind": "StringLiteral",
      "offset": 2056,
      "length": 1,
      "value": "\">\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Tunnel\/Tunnel.swift",
      "kind": "StringLiteral",
      "offset": 2095,
      "length": 37,
      "value": "\"<Tunnel proxySocket:\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Tunnel\/Tunnel.swift",
      "kind": "StringLiteral",
      "offset": 2130,
      "length": 1,
      "value": "\">\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Tunnel\/Tunnel.swift",
      "kind": "BooleanLiteral",
      "offset": 2901,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Tunnel\/Tunnel.swift",
      "kind": "BooleanLiteral",
      "offset": 3498,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Tunnel\/Tunnel.swift",
      "kind": "BooleanLiteral",
      "offset": 3566,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Tunnel\/Tunnel.swift",
      "kind": "StringLiteral",
      "offset": 4402,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Tunnel\/Tunnel.swift",
      "kind": "IntegerLiteral",
      "offset": 5301,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Tunnel\/Tunnel.swift",
      "kind": "IntegerLiteral",
      "offset": 5580,
      "length": 1,
      "value": "2"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Tunnel\/Tunnel.swift",
      "kind": "BooleanLiteral",
      "offset": 5828,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Tunnel\/Tunnel.swift",
      "kind": "StringLiteral",
      "offset": 182,
      "length": 6,
      "value": "\"NEKit.Tunnel\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/ProxySocketEvent.swift",
      "kind": "StringLiteral",
      "offset": 179,
      "length": 52,
      "value": "\"Start processing data from proxy socket \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/ProxySocketEvent.swift",
      "kind": "StringLiteral",
      "offset": 229,
      "length": 1,
      "value": "\".\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/ProxySocketEvent.swift",
      "kind": "StringLiteral",
      "offset": 295,
      "length": 54,
      "value": "\"Disconnect is just called on proxy socket \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/ProxySocketEvent.swift",
      "kind": "StringLiteral",
      "offset": 347,
      "length": 1,
      "value": "\".\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/ProxySocketEvent.swift",
      "kind": "StringLiteral",
      "offset": 418,
      "length": 60,
      "value": "\"Force disconnect is just called on proxy socket \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/ProxySocketEvent.swift",
      "kind": "StringLiteral",
      "offset": 476,
      "length": 1,
      "value": "\".\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/ProxySocketEvent.swift",
      "kind": "StringLiteral",
      "offset": 538,
      "length": 38,
      "value": "\"Proxy socket \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/ProxySocketEvent.swift",
      "kind": "StringLiteral",
      "offset": 561,
      "length": 12,
      "value": "\" disconnected.\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/ProxySocketEvent.swift",
      "kind": "StringLiteral",
      "offset": 652,
      "length": 53,
      "value": "\"Proxy socket \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/ProxySocketEvent.swift",
      "kind": "StringLiteral",
      "offset": 675,
      "length": 8,
      "value": "\" received request \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/ProxySocketEvent.swift",
      "kind": "StringLiteral",
      "offset": 703,
      "length": 1,
      "value": "\".\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/ProxySocketEvent.swift",
      "kind": "StringLiteral",
      "offset": 771,
      "length": 62,
      "value": "\"Received \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/ProxySocketEvent.swift",
      "kind": "StringLiteral",
      "offset": 794,
      "length": 5,
      "value": "\" bytes data on proxy socket \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/ProxySocketEvent.swift",
      "kind": "StringLiteral",
      "offset": 831,
      "length": 1,
      "value": "\".\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/ProxySocketEvent.swift",
      "kind": "StringLiteral",
      "offset": 937,
      "length": 58,
      "value": "\"Sent \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/ProxySocketEvent.swift",
      "kind": "StringLiteral",
      "offset": 956,
      "length": 5,
      "value": "\" bytes data on proxy socket \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/ProxySocketEvent.swift",
      "kind": "StringLiteral",
      "offset": 993,
      "length": 1,
      "value": "\".\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/ProxySocketEvent.swift",
      "kind": "StringLiteral",
      "offset": 1040,
      "length": 38,
      "value": "\"Sent data on proxy socket \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/ProxySocketEvent.swift",
      "kind": "StringLiteral",
      "offset": 1076,
      "length": 1,
      "value": "\".\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/ProxySocketEvent.swift",
      "kind": "StringLiteral",
      "offset": 1170,
      "length": 67,
      "value": "\"Proxy socket \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/ProxySocketEvent.swift",
      "kind": "StringLiteral",
      "offset": 1193,
      "length": 2,
      "value": "\" is asked to respond to adapter \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/ProxySocketEvent.swift",
      "kind": "StringLiteral",
      "offset": 1235,
      "length": 1,
      "value": "\".\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/ProxySocketEvent.swift",
      "kind": "StringLiteral",
      "offset": 1300,
      "length": 50,
      "value": "\"Proxy socket \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/ProxySocketEvent.swift",
      "kind": "StringLiteral",
      "offset": 1323,
      "length": 2,
      "value": "\" is ready to forward data.\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/ProxySocketEvent.swift",
      "kind": "StringLiteral",
      "offset": 1421,
      "length": 55,
      "value": "\"Proxy socket \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/ProxySocketEvent.swift",
      "kind": "StringLiteral",
      "offset": 1444,
      "length": 11,
      "value": "\" encountered an error \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/ProxySocketEvent.swift",
      "kind": "StringLiteral",
      "offset": 1474,
      "length": 1,
      "value": "\".\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/RejectAdapter.swift",
      "kind": "BooleanLiteral",
      "offset": 670,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/RejectAdapter.swift",
      "kind": "BooleanLiteral",
      "offset": 1084,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/RejectAdapter.swift",
      "kind": "StringLiteral",
      "offset": 32,
      "length": 13,
      "value": "\"NEKit.RejectAdapter\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/DirectAdapter.swift",
      "kind": "BooleanLiteral",
      "offset": 214,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/DirectAdapter.swift",
      "kind": "BooleanLiteral",
      "offset": 624,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/RawSocket\/GCDTCPSocket.swift",
      "kind": "BooleanLiteral",
      "offset": 304,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/RawSocket\/GCDTCPSocket.swift",
      "kind": "BooleanLiteral",
      "offset": 2220,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/RawSocket\/GCDTCPSocket.swift",
      "kind": "IntegerLiteral",
      "offset": 3089,
      "length": 2,
      "value": "-1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/RawSocket\/GCDTCPSocket.swift",
      "kind": "IntegerLiteral",
      "offset": 3332,
      "length": 2,
      "value": "-1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/RawSocket\/GCDTCPSocket.swift",
      "kind": "IntegerLiteral",
      "offset": 3341,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/RawSocket\/GCDTCPSocket.swift",
      "kind": "IntegerLiteral",
      "offset": 3683,
      "length": 2,
      "value": "-1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/RawSocket\/GCDTCPSocket.swift",
      "kind": "IntegerLiteral",
      "offset": 4012,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/RawSocket\/GCDTCPSocket.swift",
      "kind": "IntegerLiteral",
      "offset": 4488,
      "length": 2,
      "value": "-1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/RawSocket\/GCDTCPSocket.swift",
      "kind": "IntegerLiteral",
      "offset": 4864,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/RawSocket\/GCDTCPSocket.swift",
      "kind": "IntegerLiteral",
      "offset": 5077,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/RawSocket\/GCDTCPSocket.swift",
      "kind": "IntegerLiteral",
      "offset": 5515,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/RawSocket\/GCDTCPSocket.swift",
      "kind": "IntegerLiteral",
      "offset": 5931,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/RawSocket\/GCDTCPSocket.swift",
      "kind": "Dictionary",
      "offset": 7713,
      "length": 3,
      "value": "[]"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/RawSocket\/GCDTCPSocket.swift",
      "kind": "StringLiteral",
      "offset": 152,
      "length": 12,
      "value": "\"NEKit.GCDTCPSocket\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Messages\/ConnectSession.swift",
      "kind": "StringLiteral",
      "offset": 2055,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Messages\/ConnectSession.swift",
      "kind": "StringLiteral",
      "offset": 2200,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Messages\/ConnectSession.swift",
      "kind": "BooleanLiteral",
      "offset": 2284,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Messages\/ConnectSession.swift",
      "kind": "BooleanLiteral",
      "offset": 2651,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Messages\/ConnectSession.swift",
      "kind": "BooleanLiteral",
      "offset": 3228,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Messages\/ConnectSession.swift",
      "kind": "BooleanLiteral",
      "offset": 3346,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Messages\/ConnectSession.swift",
      "kind": "BooleanLiteral",
      "offset": 3498,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Messages\/ConnectSession.swift",
      "kind": "BooleanLiteral",
      "offset": 3664,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Messages\/ConnectSession.swift",
      "kind": "IntegerLiteral",
      "offset": 3735,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Messages\/ConnectSession.swift",
      "kind": "StringLiteral",
      "offset": 3795,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Messages\/ConnectSession.swift",
      "kind": "BooleanLiteral",
      "offset": 3957,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Messages\/ConnectSession.swift",
      "kind": "StringLiteral",
      "offset": 4360,
      "length": 78,
      "value": "\"<\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Messages\/ConnectSession.swift",
      "kind": "StringLiteral",
      "offset": 4379,
      "length": 4,
      "value": "\" host:\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Messages\/ConnectSession.swift",
      "kind": "StringLiteral",
      "offset": 4392,
      "length": 4,
      "value": "\" port:\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Messages\/ConnectSession.swift",
      "kind": "StringLiteral",
      "offset": 4405,
      "length": 13,
      "value": "\" requestedHost:\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Messages\/ConnectSession.swift",
      "kind": "StringLiteral",
      "offset": 4436,
      "length": 1,
      "value": "\">\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Messages\/ConnectSession.swift",
      "kind": "StringLiteral",
      "offset": 4475,
      "length": 47,
      "value": "\"<\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Messages\/ConnectSession.swift",
      "kind": "StringLiteral",
      "offset": 4494,
      "length": 4,
      "value": "\" host:\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Messages\/ConnectSession.swift",
      "kind": "StringLiteral",
      "offset": 4507,
      "length": 4,
      "value": "\" port:\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Messages\/ConnectSession.swift",
      "kind": "StringLiteral",
      "offset": 4520,
      "length": 1,
      "value": "\">\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/ProxyServer\/ProxyServer.swift",
      "kind": "StringLiteral",
      "offset": 603,
      "length": 63,
      "value": "\"<\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/ProxyServer\/ProxyServer.swift",
      "kind": "StringLiteral",
      "offset": 612,
      "length": 7,
      "value": "\" address:\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/ProxyServer\/ProxyServer.swift",
      "kind": "StringLiteral",
      "offset": 651,
      "length": 4,
      "value": "\" port:\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/ProxyServer\/ProxyServer.swift",
      "kind": "StringLiteral",
      "offset": 664,
      "length": 1,
      "value": "\">\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/ProxyServer\/ProxyServer.swift",
      "kind": "Array",
      "offset": 757,
      "length": 2,
      "value": "[]"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/ProxyServer\/ProxyServer.swift",
      "kind": "StringLiteral",
      "offset": 1187,
      "length": 25,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/ProxyServer\/ProxyServer.swift",
      "kind": "StringLiteral",
      "offset": 1211,
      "length": 1,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/ProxyServer\/ProxyServer.swift",
      "kind": "StringLiteral",
      "offset": 151,
      "length": 11,
      "value": "\"NEKit.ProxyServer\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/HTTPStreamScanner.swift",
      "kind": "IntegerLiteral",
      "offset": 410,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/HTTPStreamScanner.swift",
      "kind": "BooleanLiteral",
      "offset": 483,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/HTTPStreamScanner.swift",
      "kind": "BooleanLiteral",
      "offset": 1169,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/HTTPStreamScanner.swift",
      "kind": "IntegerLiteral",
      "offset": 1216,
      "length": 2,
      "value": "-1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/HTTPStreamScanner.swift",
      "kind": "BooleanLiteral",
      "offset": 1276,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/HTTPStreamScanner.swift",
      "kind": "IntegerLiteral",
      "offset": 1718,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/HTTPStreamScanner.swift",
      "kind": "IntegerLiteral",
      "offset": 2109,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/HTTPStreamScanner.swift",
      "kind": "IntegerLiteral",
      "offset": 2192,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/HTTPStreamScanner.swift",
      "kind": "IntegerLiteral",
      "offset": 2233,
      "length": 2,
      "value": "-1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/BinaryDataScanner.swift",
      "kind": "IntegerLiteral",
      "offset": 1084,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/HTTPAdapter.swift",
      "kind": "StringLiteral",
      "offset": 229,
      "length": 43,
      "value": "\"Invalid url when connecting through proxy\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/HTTPAdapter.swift",
      "kind": "StringLiteral",
      "offset": 328,
      "length": 41,
      "value": "\"Failed to serialize HTTP CONNECT header\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/HTTPAdapter.swift",
      "kind": "BooleanLiteral",
      "offset": 1205,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/HTTPAdapter.swift",
      "kind": "StringLiteral",
      "offset": 1759,
      "length": 33,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/HTTPAdapter.swift",
      "kind": "StringLiteral",
      "offset": 1775,
      "length": 1,
      "value": "\":\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/HTTPAdapter.swift",
      "kind": "StringLiteral",
      "offset": 1791,
      "length": 9,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/HTTPAdapter.swift",
      "kind": "StringLiteral",
      "offset": 2008,
      "length": 9,
      "value": "\"CONNECT\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/HTTPAdapter.swift",
      "kind": "StringLiteral",
      "offset": 2171,
      "length": 21,
      "value": "\"Proxy-Authorization\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/HTTPAdapter.swift",
      "kind": "StringLiteral",
      "offset": 2302,
      "length": 6,
      "value": "\"Host\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/HTTPAdapter.swift",
      "kind": "StringLiteral",
      "offset": 2322,
      "length": 33,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/HTTPAdapter.swift",
      "kind": "StringLiteral",
      "offset": 2338,
      "length": 1,
      "value": "\":\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/HTTPAdapter.swift",
      "kind": "StringLiteral",
      "offset": 2354,
      "length": 15,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/HTTPAdapter.swift",
      "kind": "StringLiteral",
      "offset": 2420,
      "length": 16,
      "value": "\"Content-Length\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/HTTPAdapter.swift",
      "kind": "StringLiteral",
      "offset": 2450,
      "length": 3,
      "value": "\"0\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/HTTPAdapter.swift",
      "kind": "StringLiteral",
      "offset": 465,
      "length": 11,
      "value": "\"NEKit.HTTPAdapter\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils.swift",
      "kind": "StringLiteral",
      "offset": 109,
      "length": 10,
      "value": "\"\r\n\r\n\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils.swift",
      "kind": "StringLiteral",
      "offset": 188,
      "length": 6,
      "value": "\"\r\n\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils.swift",
      "kind": "StringLiteral",
      "offset": 281,
      "length": 45,
      "value": "\"HTTP\/1.1 200 Connection Established\r\n\r\n\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils.swift",
      "kind": "StringLiteral",
      "offset": 798,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils.swift",
      "kind": "IntegerLiteral",
      "offset": 904,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils.swift",
      "kind": "IntegerLiteral",
      "offset": 952,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils.swift",
      "kind": "BooleanLiteral",
      "offset": 1338,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils.swift",
      "kind": "BooleanLiteral",
      "offset": 1387,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils.swift",
      "kind": "IntegerLiteral",
      "offset": 1585,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils.swift",
      "kind": "IntegerLiteral",
      "offset": 1595,
      "length": 2,
      "value": "16"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils.swift",
      "kind": "IntegerLiteral",
      "offset": 1656,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils.swift",
      "kind": "IntegerLiteral",
      "offset": 1971,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils.swift",
      "kind": "IntegerLiteral",
      "offset": 2035,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils.swift",
      "kind": "IntegerLiteral",
      "offset": 2590,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils.swift",
      "kind": "IntegerLiteral",
      "offset": 2600,
      "length": 2,
      "value": "16"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils.swift",
      "kind": "IntegerLiteral",
      "offset": 2657,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils.swift",
      "kind": "IntegerLiteral",
      "offset": 3038,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils.swift",
      "kind": "IntegerLiteral",
      "offset": 3051,
      "length": 2,
      "value": "-1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils.swift",
      "kind": "IntegerLiteral",
      "offset": 3203,
      "length": 2,
      "value": "-1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils.swift",
      "kind": "IntegerLiteral",
      "offset": 3310,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/ProxySocket\/ProxySocket.swift",
      "kind": "BooleanLiteral",
      "offset": 328,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/ProxySocket\/ProxySocket.swift",
      "kind": "StringLiteral",
      "offset": 493,
      "length": 59,
      "value": "\"<\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/ProxySocket\/ProxySocket.swift",
      "kind": "StringLiteral",
      "offset": 506,
      "length": 4,
      "value": "\" host:\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/ProxySocket\/ProxySocket.swift",
      "kind": "StringLiteral",
      "offset": 527,
      "length": 4,
      "value": "\" port: \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/ProxySocket\/ProxySocket.swift",
      "kind": "StringLiteral",
      "offset": 549,
      "length": 1,
      "value": "\")>\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/ProxySocket\/ProxySocket.swift",
      "kind": "StringLiteral",
      "offset": 589,
      "length": 15,
      "value": "\"<\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/ProxySocket\/ProxySocket.swift",
      "kind": "StringLiteral",
      "offset": 602,
      "length": 1,
      "value": "\">\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/ProxySocket\/ProxySocket.swift",
      "kind": "BooleanLiteral",
      "offset": 795,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/ProxySocket\/ProxySocket.swift",
      "kind": "BooleanLiteral",
      "offset": 2468,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/ProxySocket\/ProxySocket.swift",
      "kind": "BooleanLiteral",
      "offset": 2855,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/ProxySocket\/ProxySocket.swift",
      "kind": "StringLiteral",
      "offset": 107,
      "length": 11,
      "value": "\"NEKit.ProxySocket\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/UDPDirectStack.swift",
      "kind": "Dictionary",
      "offset": 664,
      "length": 3,
      "value": "[]"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/UDPDirectStack.swift",
      "kind": "StringLiteral",
      "offset": 792,
      "length": 39,
      "value": "\"NEKit.UDPDirectStack.SocketArrayQueue\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/UDPDirectStack.swift",
      "kind": "Array",
      "offset": 845,
      "length": 2,
      "value": "[]"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/UDPDirectStack.swift",
      "kind": "BooleanLiteral",
      "offset": 1455,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/UDPDirectStack.swift",
      "kind": "BooleanLiteral",
      "offset": 1581,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/UDPDirectStack.swift",
      "kind": "BooleanLiteral",
      "offset": 1611,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/UDPDirectStack.swift",
      "kind": "Dictionary",
      "offset": 1854,
      "length": 3,
      "value": "[]"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "StringLiteral",
      "offset": 261,
      "length": 18,
      "value": "\"lockdown_domains\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "StringLiteral",
      "offset": 306,
      "length": 23,
      "value": "\"lockdown_domains_user\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "StringLiteral",
      "offset": 1261,
      "length": 9,
      "value": "\"h:mm a_\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "IntegerLiteral",
      "offset": 1533,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "IntegerLiteral",
      "offset": 1591,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "BooleanLiteral",
      "offset": 1872,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "BooleanLiteral",
      "offset": 1925,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "IntegerLiteral",
      "offset": 2308,
      "length": 3,
      "value": "100"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "IntegerLiteral",
      "offset": 2316,
      "length": 3,
      "value": "200"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "Array",
      "offset": 2639,
      "length": 2,
      "value": "[]"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "IntegerLiteral",
      "offset": 2894,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "IntegerLiteral",
      "offset": 3331,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "BooleanLiteral",
      "offset": 3764,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "Array",
      "offset": 4113,
      "length": 2,
      "value": "[]"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "IntegerLiteral",
      "offset": 4494,
      "length": 2,
      "value": "27"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "StringLiteral",
      "offset": 4518,
      "length": 19,
      "value": "\"snapchatAnalytics\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "StringLiteral",
      "offset": 4571,
      "length": 19,
      "value": "\"Snapchat Trackers\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "StringLiteral",
      "offset": 4601,
      "length": 33,
      "value": "\"The title of a list of trackers\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "StringLiteral",
      "offset": 4654,
      "length": 25,
      "value": "\"snapchat_analytics_icon\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "BooleanLiteral",
      "offset": 4698,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "StringLiteral",
      "offset": 4751,
      "length": 20,
      "value": "\"snapchat_analytics\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "Dictionary",
      "offset": 4792,
      "length": 3,
      "value": "[]"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "IntegerLiteral",
      "offset": 4857,
      "length": 2,
      "value": "30"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "StringLiteral",
      "offset": 4881,
      "length": 9,
      "value": "\"gameAds\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "StringLiteral",
      "offset": 4924,
      "length": 16,
      "value": "\"Game Marketing\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "StringLiteral",
      "offset": 4951,
      "length": 33,
      "value": "\"The title of a list of trackers\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "StringLiteral",
      "offset": 5004,
      "length": 15,
      "value": "\"game_ads_icon\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "BooleanLiteral",
      "offset": 5038,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "StringLiteral",
      "offset": 5090,
      "length": 10,
      "value": "\"game_ads\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "Dictionary",
      "offset": 5121,
      "length": 3,
      "value": "[]"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "IntegerLiteral",
      "offset": 5188,
      "length": 2,
      "value": "29"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "StringLiteral",
      "offset": 5212,
      "length": 11,
      "value": "\"clickbait\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "StringLiteral",
      "offset": 5257,
      "length": 11,
      "value": "\"Clickbait\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "StringLiteral",
      "offset": 5279,
      "length": 33,
      "value": "\"The title of a list of trackers\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "StringLiteral",
      "offset": 5332,
      "length": 16,
      "value": "\"clickbait_icon\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "BooleanLiteral",
      "offset": 5367,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "StringLiteral",
      "offset": 5420,
      "length": 11,
      "value": "\"clickbait\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "Dictionary",
      "offset": 5452,
      "length": 3,
      "value": "[]"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "IntegerLiteral",
      "offset": 5516,
      "length": 2,
      "value": "29"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "StringLiteral",
      "offset": 5540,
      "length": 15,
      "value": "\"crypto_mining\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "StringLiteral",
      "offset": 5589,
      "length": 15,
      "value": "\"Crypto Mining\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "StringLiteral",
      "offset": 5615,
      "length": 33,
      "value": "\"The title of a list of trackers\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "StringLiteral",
      "offset": 5668,
      "length": 13,
      "value": "\"crypto_icon\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "BooleanLiteral",
      "offset": 5700,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "StringLiteral",
      "offset": 5752,
      "length": 15,
      "value": "\"crypto_mining\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "Dictionary",
      "offset": 5788,
      "length": 3,
      "value": "[]"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "StringLiteral",
      "offset": 5810,
      "length": 74,
      "value": "\"This block list is currently under maintenance and will be updated soon.\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "IntegerLiteral",
      "offset": 5949,
      "length": 2,
      "value": "30"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "StringLiteral",
      "offset": 5973,
      "length": 13,
      "value": "\"email_opens\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "StringLiteral",
      "offset": 6020,
      "length": 16,
      "value": "\"Email Trackers\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "StringLiteral",
      "offset": 6047,
      "length": 33,
      "value": "\"The title of a list of trackers\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "StringLiteral",
      "offset": 6100,
      "length": 12,
      "value": "\"email_icon\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "BooleanLiteral",
      "offset": 6131,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "StringLiteral",
      "offset": 6184,
      "length": 13,
      "value": "\"email_opens\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "Dictionary",
      "offset": 6218,
      "length": 3,
      "value": "[]"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "IntegerLiteral",
      "offset": 6287,
      "length": 2,
      "value": "33"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "StringLiteral",
      "offset": 6311,
      "length": 14,
      "value": "\"facebook_inc\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "StringLiteral",
      "offset": 6359,
      "length": 21,
      "value": "\"Facebook & WhatsApp\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "StringLiteral",
      "offset": 6391,
      "length": 33,
      "value": "\"The title of a list of trackers\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "StringLiteral",
      "offset": 6444,
      "length": 15,
      "value": "\"facebook_icon\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "BooleanLiteral",
      "offset": 6478,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "StringLiteral",
      "offset": 6531,
      "length": 14,
      "value": "\"facebook_inc\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "Dictionary",
      "offset": 6566,
      "length": 3,
      "value": "[]"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "StringLiteral",
      "offset": 6588,
      "length": 165,
      "value": "\"This list is intended to completely block Facebook-owned apps. Do not enable it if you use apps owned by Facebook like WhatsApp, Facebook Messenger, and Instagram.\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "IntegerLiteral",
      "offset": 6819,
      "length": 2,
      "value": "28"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "StringLiteral",
      "offset": 6843,
      "length": 14,
      "value": "\"facebook_sdk\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "StringLiteral",
      "offset": 6891,
      "length": 19,
      "value": "\"Facebook Trackers\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "StringLiteral",
      "offset": 6921,
      "length": 33,
      "value": "\"The title of a list of trackers\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "StringLiteral",
      "offset": 6974,
      "length": 21,
      "value": "\"facebook_white_icon\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "BooleanLiteral",
      "offset": 7014,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "StringLiteral",
      "offset": 7066,
      "length": 14,
      "value": "\"facebook_sdk\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "Dictionary",
      "offset": 7101,
      "length": 3,
      "value": "[]"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "IntegerLiteral",
      "offset": 7175,
      "length": 2,
      "value": "31"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "StringLiteral",
      "offset": 7199,
      "length": 19,
      "value": "\"marketing_scripts\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "StringLiteral",
      "offset": 7252,
      "length": 20,
      "value": "\"Marketing Trackers\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "StringLiteral",
      "offset": 7283,
      "length": 33,
      "value": "\"The title of a list of trackers\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "StringLiteral",
      "offset": 7336,
      "length": 16,
      "value": "\"marketing_icon\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "BooleanLiteral",
      "offset": 7371,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "StringLiteral",
      "offset": 7423,
      "length": 11,
      "value": "\"marketing\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "Dictionary",
      "offset": 7455,
      "length": 3,
      "value": "[]"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "IntegerLiteral",
      "offset": 7531,
      "length": 2,
      "value": "30"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "StringLiteral",
      "offset": 7555,
      "length": 24,
      "value": "\"marketing_beta_scripts\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "StringLiteral",
      "offset": 7613,
      "length": 23,
      "value": "\"Marketing Trackers II\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "StringLiteral",
      "offset": 7647,
      "length": 33,
      "value": "\"The title of a list of trackers\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "StringLiteral",
      "offset": 7700,
      "length": 16,
      "value": "\"marketing_icon\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "BooleanLiteral",
      "offset": 7735,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "StringLiteral",
      "offset": 7787,
      "length": 16,
      "value": "\"marketing_beta\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "Dictionary",
      "offset": 7824,
      "length": 3,
      "value": "[]"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "IntegerLiteral",
      "offset": 7888,
      "length": 2,
      "value": "29"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "StringLiteral",
      "offset": 7912,
      "length": 12,
      "value": "\"ransomware\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "StringLiteral",
      "offset": 7958,
      "length": 12,
      "value": "\"Ransomware\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "StringLiteral",
      "offset": 7981,
      "length": 33,
      "value": "\"The title of a list of trackers\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "StringLiteral",
      "offset": 8034,
      "length": 17,
      "value": "\"ransomware_icon\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "BooleanLiteral",
      "offset": 8070,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "StringLiteral",
      "offset": 8123,
      "length": 12,
      "value": "\"ransomware\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "Dictionary",
      "offset": 8156,
      "length": 3,
      "value": "[]"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "StringLiteral",
      "offset": 8178,
      "length": 74,
      "value": "\"This block list is currently under maintenance and will be updated soon.\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "IntegerLiteral",
      "offset": 8320,
      "length": 2,
      "value": "35"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "StringLiteral",
      "offset": 8344,
      "length": 21,
      "value": "\"google_shopping_ads\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "StringLiteral",
      "offset": 8399,
      "length": 17,
      "value": "\"Google Shopping\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "StringLiteral",
      "offset": 8427,
      "length": 33,
      "value": "\"The title of a list of trackers\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "StringLiteral",
      "offset": 8480,
      "length": 13,
      "value": "\"google_icon\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "BooleanLiteral",
      "offset": 8512,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "StringLiteral",
      "offset": 8565,
      "length": 21,
      "value": "\"google_shopping_ads\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "Dictionary",
      "offset": 8607,
      "length": 3,
      "value": "[]"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "StringLiteral",
      "offset": 8629,
      "length": 230,
      "value": "\"This blocks background Google tracking, but also blocks the shopping results at the top of Google search results. This is on by default for maximum privacy, but if you like the Google Shopping results, you can turn blocking off.\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "IntegerLiteral",
      "offset": 8926,
      "length": 2,
      "value": "35"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "StringLiteral",
      "offset": 8950,
      "length": 15,
      "value": "\"data_trackers\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "StringLiteral",
      "offset": 8999,
      "length": 15,
      "value": "\"Data Trackers\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "StringLiteral",
      "offset": 9025,
      "length": 33,
      "value": "\"The title of a list of trackers\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "StringLiteral",
      "offset": 9078,
      "length": 16,
      "value": "\"user_data_icon\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "BooleanLiteral",
      "offset": 9113,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "StringLiteral",
      "offset": 9165,
      "length": 15,
      "value": "\"data_trackers\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "Dictionary",
      "offset": 9201,
      "length": 3,
      "value": "[]"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "IntegerLiteral",
      "offset": 9269,
      "length": 2,
      "value": "40"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "StringLiteral",
      "offset": 9293,
      "length": 13,
      "value": "\"general_ads\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "StringLiteral",
      "offset": 9340,
      "length": 19,
      "value": "\"General Marketing\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "StringLiteral",
      "offset": 9370,
      "length": 33,
      "value": "\"The title of a list of trackers\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "StringLiteral",
      "offset": 9423,
      "length": 10,
      "value": "\"ads_icon\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "BooleanLiteral",
      "offset": 9452,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "StringLiteral",
      "offset": 9504,
      "length": 13,
      "value": "\"general_ads\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "Dictionary",
      "offset": 9538,
      "length": 3,
      "value": "[]"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "IntegerLiteral",
      "offset": 9605,
      "length": 2,
      "value": "29"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "StringLiteral",
      "offset": 9629,
      "length": 11,
      "value": "\"reporting\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "StringLiteral",
      "offset": 9674,
      "length": 11,
      "value": "\"Reporting\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "StringLiteral",
      "offset": 9696,
      "length": 33,
      "value": "\"The title of a list of trackers\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "StringLiteral",
      "offset": 9749,
      "length": 16,
      "value": "\"reporting_icon\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "BooleanLiteral",
      "offset": 9784,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "StringLiteral",
      "offset": 9837,
      "length": 11,
      "value": "\"reporting\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "Dictionary",
      "offset": 9869,
      "length": 3,
      "value": "[]"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "IntegerLiteral",
      "offset": 9941,
      "length": 2,
      "value": "32"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "StringLiteral",
      "offset": 9965,
      "length": 17,
      "value": "\"amazon_trackers\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "StringLiteral",
      "offset": 10016,
      "length": 17,
      "value": "\"Amazon Trackers\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "StringLiteral",
      "offset": 10044,
      "length": 33,
      "value": "\"The title of a list of trackers\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "StringLiteral",
      "offset": 10097,
      "length": 13,
      "value": "\"amazon_icon\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "BooleanLiteral",
      "offset": 10129,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "StringLiteral",
      "offset": 10182,
      "length": 17,
      "value": "\"amazon_trackers\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "Dictionary",
      "offset": 10220,
      "length": 3,
      "value": "[]"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "StringLiteral",
      "offset": 10242,
      "length": 126,
      "value": "\"This blocks Amazon referral link tracking too, so enabling this list may cause errors when clicking certain links on Amazon.\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "StringLiteral",
      "offset": 12217,
      "length": 5,
      "value": "\"txt\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "StringLiteral",
      "offset": 12407,
      "length": 4,
      "value": "\"\n\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "StringLiteral",
      "offset": 12514,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "StringLiteral",
      "offset": 12539,
      "length": 3,
      "value": "\"#\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "BooleanLiteral",
      "offset": 12579,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "BooleanLiteral",
      "offset": 13792,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "Dictionary",
      "offset": 14479,
      "length": 3,
      "value": "[]"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/FirewallUtilities.swift",
      "kind": "Dictionary",
      "offset": 14665,
      "length": 3,
      "value": "[]"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "IntegerLiteral",
      "offset": 266,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "BooleanLiteral",
      "offset": 353,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "BooleanLiteral",
      "offset": 391,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "BooleanLiteral",
      "offset": 435,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "BooleanLiteral",
      "offset": 481,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "Array",
      "offset": 570,
      "length": 2,
      "value": "[]"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "Array",
      "offset": 611,
      "length": 2,
      "value": "[]"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "Array",
      "offset": 656,
      "length": 2,
      "value": "[]"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "Array",
      "offset": 700,
      "length": 2,
      "value": "[]"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "IntegerLiteral",
      "offset": 773,
      "length": 2,
      "value": "12"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "IntegerLiteral",
      "offset": 793,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "IntegerLiteral",
      "offset": 870,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "IntegerLiteral",
      "offset": 951,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "IntegerLiteral",
      "offset": 1031,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "BooleanLiteral",
      "offset": 1518,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "IntegerLiteral",
      "offset": 1628,
      "length": 4,
      "value": "0x80"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "IntegerLiteral",
      "offset": 1635,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "IntegerLiteral",
      "offset": 1795,
      "length": 4,
      "value": "0x04"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "IntegerLiteral",
      "offset": 1802,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "IntegerLiteral",
      "offset": 1833,
      "length": 4,
      "value": "0x02"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "IntegerLiteral",
      "offset": 1840,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "IntegerLiteral",
      "offset": 1877,
      "length": 4,
      "value": "0x01"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "IntegerLiteral",
      "offset": 1884,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "IntegerLiteral",
      "offset": 1960,
      "length": 4,
      "value": "0x80"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "IntegerLiteral",
      "offset": 1967,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "IntegerLiteral",
      "offset": 2027,
      "length": 4,
      "value": "0x0F"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "StringLiteral",
      "offset": 2108,
      "length": 61,
      "value": "\"Received DNS response with unknown status: \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "IntegerLiteral",
      "offset": 2162,
      "length": 4,
      "value": "0x0F"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "StringLiteral",
      "offset": 2167,
      "length": 1,
      "value": "\".\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "IntegerLiteral",
      "offset": 2423,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "IntegerLiteral",
      "offset": 2526,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "IntegerLiteral",
      "offset": 2618,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "IntegerLiteral",
      "offset": 2725,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "IntegerLiteral",
      "offset": 2817,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "IntegerLiteral",
      "offset": 2932,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "IntegerLiteral",
      "offset": 3028,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "IntegerLiteral",
      "offset": 3141,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "IntegerLiteral",
      "offset": 3331,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "IntegerLiteral",
      "offset": 3468,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "BooleanLiteral",
      "offset": 3477,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "IntegerLiteral",
      "offset": 3509,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "IntegerLiteral",
      "offset": 3551,
      "length": 1,
      "value": "7"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "IntegerLiteral",
      "offset": 3600,
      "length": 1,
      "value": "4"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "IntegerLiteral",
      "offset": 3656,
      "length": 1,
      "value": "2"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "IntegerLiteral",
      "offset": 3718,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "IntegerLiteral",
      "offset": 3768,
      "length": 1,
      "value": "2"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "IntegerLiteral",
      "offset": 3786,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "IntegerLiteral",
      "offset": 3840,
      "length": 3,
      "value": "128"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "IntegerLiteral",
      "offset": 3926,
      "length": 1,
      "value": "3"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "IntegerLiteral",
      "offset": 3985,
      "length": 1,
      "value": "4"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "BooleanLiteral",
      "offset": 3994,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "IntegerLiteral",
      "offset": 4056,
      "length": 1,
      "value": "6"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "BooleanLiteral",
      "offset": 4065,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "IntegerLiteral",
      "offset": 4131,
      "length": 1,
      "value": "8"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "BooleanLiteral",
      "offset": 4140,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "IntegerLiteral",
      "offset": 4205,
      "length": 2,
      "value": "10"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "BooleanLiteral",
      "offset": 4215,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "IntegerLiteral",
      "offset": 4254,
      "length": 2,
      "value": "12"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "IntegerLiteral",
      "offset": 4460,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "BooleanLiteral",
      "offset": 4559,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "IntegerLiteral",
      "offset": 4779,
      "length": 1,
      "value": "2"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "BooleanLiteral",
      "offset": 4878,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "IntegerLiteral",
      "offset": 5096,
      "length": 1,
      "value": "4"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "IntegerLiteral",
      "offset": 5209,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "BooleanLiteral",
      "offset": 5760,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "BooleanLiteral",
      "offset": 6031,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "BooleanLiteral",
      "offset": 6143,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "BooleanLiteral",
      "offset": 6332,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "BooleanLiteral",
      "offset": 6436,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "IntegerLiteral",
      "offset": 6526,
      "length": 1,
      "value": "2"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "BooleanLiteral",
      "offset": 6535,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "BooleanLiteral",
      "offset": 6556,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "BooleanLiteral",
      "offset": 6757,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "BooleanLiteral",
      "offset": 6867,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "IntegerLiteral",
      "offset": 6963,
      "length": 1,
      "value": "2"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "BooleanLiteral",
      "offset": 6972,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "IntegerLiteral",
      "offset": 7057,
      "length": 1,
      "value": "4"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "BooleanLiteral",
      "offset": 7066,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "IntegerLiteral",
      "offset": 7158,
      "length": 1,
      "value": "8"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "BooleanLiteral",
      "offset": 7167,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "IntegerLiteral",
      "offset": 7251,
      "length": 2,
      "value": "10"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "BooleanLiteral",
      "offset": 7270,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "StringLiteral",
      "offset": 7573,
      "length": 3,
      "value": "\".\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "IntegerLiteral",
      "offset": 7680,
      "length": 1,
      "value": "2"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "IntegerLiteral",
      "offset": 7739,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "BooleanLiteral",
      "offset": 7928,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "StringLiteral",
      "offset": 8084,
      "length": 40,
      "value": "\"Received DNS packet with unknown type.\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "StringLiteral",
      "offset": 8279,
      "length": 41,
      "value": "\"Received DNS packet with unknown class.\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "IntegerLiteral",
      "offset": 8450,
      "length": 1,
      "value": "4"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "IntegerLiteral",
      "offset": 8771,
      "length": 3,
      "value": "300"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "IntegerLiteral",
      "offset": 9004,
      "length": 1,
      "value": "2"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "IntegerLiteral",
      "offset": 9067,
      "length": 3,
      "value": "300"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "IntegerLiteral",
      "offset": 9277,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "BooleanLiteral",
      "offset": 9466,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "StringLiteral",
      "offset": 9622,
      "length": 40,
      "value": "\"Received DNS packet with unknown type.\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "StringLiteral",
      "offset": 9817,
      "length": 41,
      "value": "\"Received DNS packet with unknown class.\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "IntegerLiteral",
      "offset": 10156,
      "length": 2,
      "value": "10"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "StringLiteral",
      "offset": 10552,
      "length": 3,
      "value": "\".\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "IntegerLiteral",
      "offset": 10679,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "BooleanLiteral",
      "offset": 10750,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "IntegerLiteral",
      "offset": 10834,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "IntegerLiteral",
      "offset": 10991,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "BooleanLiteral",
      "offset": 11008,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "IntegerLiteral",
      "offset": 11091,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "BooleanLiteral",
      "offset": 11179,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "IntegerLiteral",
      "offset": 11245,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "StringLiteral",
      "offset": 11266,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "IntegerLiteral",
      "offset": 11300,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "BooleanLiteral",
      "offset": 11323,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "IntegerLiteral",
      "offset": 11359,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "IntegerLiteral",
      "offset": 11479,
      "length": 6,
      "value": "0xC000"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "IntegerLiteral",
      "offset": 11489,
      "length": 6,
      "value": "0xC000"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "IntegerLiteral",
      "offset": 11613,
      "length": 1,
      "value": "2"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "BooleanLiteral",
      "offset": 11663,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "IntegerLiteral",
      "offset": 11732,
      "length": 6,
      "value": "0x3FFF"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "IntegerLiteral",
      "offset": 11805,
      "length": 2,
      "value": "-2"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "IntegerLiteral",
      "offset": 11894,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "IntegerLiteral",
      "offset": 11918,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "StringLiteral",
      "offset": 12165,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "StringLiteral",
      "offset": 12337,
      "length": 5,
      "value": "\".%@\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "BooleanLiteral",
      "offset": 12409,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/IPStack\/DNS\/DNSMessage.swift",
      "kind": "StringLiteral",
      "offset": 12565,
      "length": 3,
      "value": "\".\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Opt.swift",
      "kind": "IntegerLiteral",
      "offset": 90,
      "length": 3,
      "value": "128"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Opt.swift",
      "kind": "IntegerLiteral",
      "offset": 96,
      "length": 4,
      "value": "1024"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Opt.swift",
      "kind": "IntegerLiteral",
      "offset": 290,
      "length": 4,
      "value": "8912"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Opt.swift",
      "kind": "IntegerLiteral",
      "offset": 333,
      "length": 3,
      "value": "300"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Opt.swift",
      "kind": "IntegerLiteral",
      "offset": 388,
      "length": 2,
      "value": "10"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Opt.swift",
      "kind": "IntegerLiteral",
      "offset": 439,
      "length": 3,
      "value": "300"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Opt.swift",
      "kind": "IntegerLiteral",
      "offset": 497,
      "length": 2,
      "value": "60"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Opt.swift",
      "kind": "IntegerLiteral",
      "offset": 551,
      "length": 5,
      "value": "10240"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Opt.swift",
      "kind": "IntegerLiteral",
      "offset": 608,
      "length": 3,
      "value": "300"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Opt.swift",
      "kind": "IntegerLiteral",
      "offset": 648,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Opt.swift",
      "kind": "IntegerLiteral",
      "offset": 695,
      "length": 2,
      "value": "50"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/ProxyServerEvent.swift",
      "kind": "StringLiteral",
      "offset": 202,
      "length": 62,
      "value": "\"Proxy server \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/ProxyServerEvent.swift",
      "kind": "StringLiteral",
      "offset": 225,
      "length": 4,
      "value": "\" just accepted a new socket \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/ProxyServerEvent.swift",
      "kind": "StringLiteral",
      "offset": 262,
      "length": 1,
      "value": "\".\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/ProxyServerEvent.swift",
      "kind": "StringLiteral",
      "offset": 342,
      "length": 59,
      "value": "\"A tunnel \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/ProxyServerEvent.swift",
      "kind": "StringLiteral",
      "offset": 361,
      "length": 2,
      "value": "\" on proxy server \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/ProxyServerEvent.swift",
      "kind": "StringLiteral",
      "offset": 387,
      "length": 4,
      "value": "\" just closed.\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/ProxyServerEvent.swift",
      "kind": "StringLiteral",
      "offset": 456,
      "length": 33,
      "value": "\"Proxy server \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/ProxyServerEvent.swift",
      "kind": "StringLiteral",
      "offset": 479,
      "length": 7,
      "value": "\" started.\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/ProxyServerEvent.swift",
      "kind": "StringLiteral",
      "offset": 544,
      "length": 33,
      "value": "\"Proxy server \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/ProxyServerEvent.swift",
      "kind": "StringLiteral",
      "offset": 567,
      "length": 7,
      "value": "\" stopped.\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/RawSocket\/NWUDPSocket.swift",
      "kind": "Array",
      "offset": 608,
      "length": 2,
      "value": "[]"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/RawSocket\/NWUDPSocket.swift",
      "kind": "BooleanLiteral",
      "offset": 637,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/RawSocket\/NWUDPSocket.swift",
      "kind": "StringLiteral",
      "offset": 1408,
      "length": 9,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/RawSocket\/NWUDPSocket.swift",
      "kind": "StringLiteral",
      "offset": 1416,
      "length": 21,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/RawSocket\/NWUDPSocket.swift",
      "kind": "StringLiteral",
      "offset": 2500,
      "length": 93,
      "value": "\"Error when reading from remote server. \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/RawSocket\/NWUDPSocket.swift",
      "kind": "StringLiteral",
      "offset": 2573,
      "length": 18,
      "value": "\"Connection reset\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/RawSocket\/NWUDPSocket.swift",
      "kind": "StringLiteral",
      "offset": 2592,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/RawSocket\/NWUDPSocket.swift",
      "kind": "IntegerLiteral",
      "offset": 2830,
      "length": 2,
      "value": "32"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/RawSocket\/NWUDPSocket.swift",
      "kind": "StringLiteral",
      "offset": 3314,
      "length": 7,
      "value": "\"state\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/RawSocket\/NWUDPSocket.swift",
      "kind": "IntegerLiteral",
      "offset": 3879,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/RawSocket\/NWUDPSocket.swift",
      "kind": "BooleanLiteral",
      "offset": 3944,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/RawSocket\/NWUDPSocket.swift",
      "kind": "BooleanLiteral",
      "offset": 4077,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/RawSocket\/NWUDPSocket.swift",
      "kind": "BooleanLiteral",
      "offset": 4198,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/RawSocket\/NWUDPSocket.swift",
      "kind": "IntegerLiteral",
      "offset": 4349,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/RawSocket\/NWUDPSocket.swift",
      "kind": "StringLiteral",
      "offset": 503,
      "length": 11,
      "value": "\"NEKit.NWUDPSocket\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/BlockDayLog.swift",
      "kind": "StringLiteral",
      "offset": 358,
      "length": 9,
      "value": "\"h:mm a_\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/BlockDayLog.swift",
      "kind": "StringLiteral",
      "offset": 461,
      "length": 26,
      "value": "\"LockdownBlockDayLogQueue\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/BlockDayLog.swift",
      "kind": "StringLiteral",
      "offset": 539,
      "length": 28,
      "value": "\"LockdownIsBlockLogDisabled\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/BlockDayLog.swift",
      "kind": "StringLiteral",
      "offset": 614,
      "length": 17,
      "value": "\"LockdownDayLogs\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/BlockDayLog.swift",
      "kind": "IntegerLiteral",
      "offset": 665,
      "length": 4,
      "value": "5000"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/BlockDayLog.swift",
      "kind": "IntegerLiteral",
      "offset": 708,
      "length": 4,
      "value": "4500"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/BlockDayLog.swift",
      "kind": "Array",
      "offset": 1332,
      "length": 2,
      "value": "[]"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/BlockDayLog.swift",
      "kind": "BooleanLiteral",
      "offset": 1453,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/BlockDayLog.swift",
      "kind": "BooleanLiteral",
      "offset": 1607,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/BlockDayLog.swift",
      "kind": "BooleanLiteral",
      "offset": 1738,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/IPRange.swift",
      "kind": "BooleanLiteral",
      "offset": 1381,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/IPRange.swift",
      "kind": "StringLiteral",
      "offset": 1583,
      "length": 3,
      "value": "\"\/\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/IPRange.swift",
      "kind": "IntegerLiteral",
      "offset": 1616,
      "length": 1,
      "value": "2"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/IPRange.swift",
      "kind": "IntegerLiteral",
      "offset": 1735,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/IPRange.swift",
      "kind": "IntegerLiteral",
      "offset": 1916,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/IPRange.swift",
      "kind": "IntegerLiteral",
      "offset": 2093,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/IPRange.swift",
      "kind": "StringLiteral",
      "offset": 2384,
      "length": 3,
      "value": "\"+\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/IPRange.swift",
      "kind": "IntegerLiteral",
      "offset": 2417,
      "length": 1,
      "value": "2"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/IPRange.swift",
      "kind": "IntegerLiteral",
      "offset": 2542,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/IPRange.swift",
      "kind": "IntegerLiteral",
      "offset": 2737,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/IPRange.swift",
      "kind": "IntegerLiteral",
      "offset": 2923,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/IPRange.swift",
      "kind": "StringLiteral",
      "offset": 3208,
      "length": 3,
      "value": "\"\/\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/IPRange.swift",
      "kind": "StringLiteral",
      "offset": 3293,
      "length": 3,
      "value": "\"+\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/Buffer.swift",
      "kind": "IntegerLiteral",
      "offset": 282,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/Buffer.swift",
      "kind": "IntegerLiteral",
      "offset": 551,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/Buffer.swift",
      "kind": "IntegerLiteral",
      "offset": 642,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/Buffer.swift",
      "kind": "IntegerLiteral",
      "offset": 1350,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Rule\/IPRangeListRule.swift",
      "kind": "StringLiteral",
      "offset": 236,
      "length": 15,
      "value": "\"<IPRangeList>\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Rule\/IPRangeListRule.swift",
      "kind": "Array",
      "offset": 345,
      "length": 2,
      "value": "[]"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Rule\/IPRangeListRule.swift",
      "kind": "StringLiteral",
      "offset": 101,
      "length": 15,
      "value": "\"NEKit.IPRangeListRule\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/SocketProtocol.swift",
      "kind": "StringLiteral",
      "offset": 2333,
      "length": 11,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/SocketProtocol.swift",
      "kind": "StringLiteral",
      "offset": 2343,
      "length": 1,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/SocketProtocol.swift",
      "kind": "StringLiteral",
      "offset": 2415,
      "length": 11,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/SocketProtocol.swift",
      "kind": "StringLiteral",
      "offset": 2425,
      "length": 1,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/IPAddress.swift",
      "kind": "IntegerLiteral",
      "offset": 448,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/IPAddress.swift",
      "kind": "IntegerLiteral",
      "offset": 471,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/IPAddress.swift",
      "kind": "IntegerLiteral",
      "offset": 1052,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/IPAddress.swift",
      "kind": "IntegerLiteral",
      "offset": 1375,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/IPAddress.swift",
      "kind": "IntegerLiteral",
      "offset": 2043,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/IPAddress.swift",
      "kind": "IntegerLiteral",
      "offset": 2283,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/IPAddress.swift",
      "kind": "IntegerLiteral",
      "offset": 2959,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/IPAddress.swift",
      "kind": "IntegerLiteral",
      "offset": 6045,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/IPAddress.swift",
      "kind": "BooleanLiteral",
      "offset": 6087,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/IPAddress.swift",
      "kind": "BooleanLiteral",
      "offset": 6132,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/IPAddress.swift",
      "kind": "BooleanLiteral",
      "offset": 6485,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/Checksum.swift",
      "kind": "IntegerLiteral",
      "offset": 113,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/Checksum.swift",
      "kind": "IntegerLiteral",
      "offset": 184,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/Checksum.swift",
      "kind": "IntegerLiteral",
      "offset": 398,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/Checksum.swift",
      "kind": "IntegerLiteral",
      "offset": 534,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/Checksum.swift",
      "kind": "IntegerLiteral",
      "offset": 620,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/Checksum.swift",
      "kind": "IntegerLiteral",
      "offset": 691,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/Checksum.swift",
      "kind": "BooleanLiteral",
      "offset": 772,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/Checksum.swift",
      "kind": "IntegerLiteral",
      "offset": 970,
      "length": 1,
      "value": "2"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/Checksum.swift",
      "kind": "IntegerLiteral",
      "offset": 1466,
      "length": 2,
      "value": "16"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/Checksum.swift",
      "kind": "IntegerLiteral",
      "offset": 1472,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/Checksum.swift",
      "kind": "IntegerLiteral",
      "offset": 1507,
      "length": 2,
      "value": "16"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/Checksum.swift",
      "kind": "IntegerLiteral",
      "offset": 1521,
      "length": 6,
      "value": "0xFFFF"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/AdapterSocket.swift",
      "kind": "StringLiteral",
      "offset": 250,
      "length": 58,
      "value": "\"<\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/AdapterSocket.swift",
      "kind": "StringLiteral",
      "offset": 263,
      "length": 4,
      "value": "\" host:\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/AdapterSocket.swift",
      "kind": "StringLiteral",
      "offset": 284,
      "length": 4,
      "value": "\" port:\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/AdapterSocket.swift",
      "kind": "StringLiteral",
      "offset": 305,
      "length": 1,
      "value": "\")>\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/AdapterSocket.swift",
      "kind": "BooleanLiteral",
      "offset": 346,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/AdapterSocket.swift",
      "kind": "StringLiteral",
      "offset": 1321,
      "length": 11,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/AdapterSocket.swift",
      "kind": "StringLiteral",
      "offset": 1331,
      "length": 1,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/AdapterSocket.swift",
      "kind": "BooleanLiteral",
      "offset": 1372,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/AdapterSocket.swift",
      "kind": "BooleanLiteral",
      "offset": 2328,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/AdapterSocket.swift",
      "kind": "BooleanLiteral",
      "offset": 2653,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/AdapterSocket.swift",
      "kind": "StringLiteral",
      "offset": 30,
      "length": 13,
      "value": "\"NEKit.AdapterSocket\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/Factory\/RejectAdapterFactory.swift",
      "kind": "StringLiteral",
      "offset": 30,
      "length": 20,
      "value": "\"NEKit.RejectAdapterFactory\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/SpeedAdapter.swift",
      "kind": "IntegerLiteral",
      "offset": 233,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/SpeedAdapter.swift",
      "kind": "IntegerLiteral",
      "offset": 258,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/SpeedAdapter.swift",
      "kind": "BooleanLiteral",
      "offset": 304,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/SpeedAdapter.swift",
      "kind": "BooleanLiteral",
      "offset": 674,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/SpeedAdapter.swift",
      "kind": "IntegerLiteral",
      "offset": 1236,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/SpeedAdapter.swift",
      "kind": "BooleanLiteral",
      "offset": 1425,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/SpeedAdapter.swift",
      "kind": "IntegerLiteral",
      "offset": 1454,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/SpeedAdapter.swift",
      "kind": "BooleanLiteral",
      "offset": 1806,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/SpeedAdapter.swift",
      "kind": "IntegerLiteral",
      "offset": 1835,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/SpeedAdapter.swift",
      "kind": "BooleanLiteral",
      "offset": 2235,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/SpeedAdapter.swift",
      "kind": "IntegerLiteral",
      "offset": 3041,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/SpeedAdapter.swift",
      "kind": "IntegerLiteral",
      "offset": 3073,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/SpeedAdapter.swift",
      "kind": "IntegerLiteral",
      "offset": 3094,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/Factory\/AuthenticationServerAdapterFactory.swift",
      "kind": "StringLiteral",
      "offset": 97,
      "length": 32,
      "value": "\"NEKit.HTTPAuthenticationAdapterFactory\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/Factory\/AdapterFactoryManager.swift",
      "kind": "StringLiteral",
      "offset": 319,
      "length": 8,
      "value": "\"direct\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/PushNotifications.swift",
      "kind": "StringLiteral",
      "offset": 315,
      "length": 33,
      "value": "\"PushNotifications-ScheduleQueue\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/PushNotifications.swift",
      "kind": "StringLiteral",
      "offset": 475,
      "length": 14,
      "value": "\"WeeklyUpdate\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/PushNotifications.swift",
      "kind": "StringLiteral",
      "offset": 475,
      "length": 14,
      "value": "\"WeeklyUpdate\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/PushNotifications.swift",
      "kind": "IntegerLiteral",
      "offset": 689,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/PushNotifications.swift",
      "kind": "IntegerLiteral",
      "offset": 694,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/PushNotifications.swift",
      "kind": "FloatLiteral",
      "offset": 1635,
      "length": 3,
      "value": "1.0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/PushNotifications.swift",
      "kind": "Array",
      "offset": 1746,
      "length": 2,
      "value": "[]"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/PushNotifications.swift",
      "kind": "BooleanLiteral",
      "offset": 2259,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/PushNotifications.swift",
      "kind": "StringLiteral",
      "offset": 2293,
      "length": 67,
      "value": "\"Notifications are not approved by user, not scheduling onboarding\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/PushNotifications.swift",
      "kind": "IntegerLiteral",
      "offset": 2498,
      "length": 3,
      "value": "100"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/PushNotifications.swift",
      "kind": "BooleanLiteral",
      "offset": 2559,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/PushNotifications.swift",
      "kind": "StringLiteral",
      "offset": 2594,
      "length": 83,
      "value": "\"Error: asked to schedule onboarding notification when total metrics are below 100\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/PushNotifications.swift",
      "kind": "FloatLiteral",
      "offset": 2875,
      "length": 3,
      "value": "2.0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/PushNotifications.swift",
      "kind": "BooleanLiteral",
      "offset": 2889,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/PushNotifications.swift",
      "kind": "StringLiteral",
      "offset": 3295,
      "length": 41,
      "value": "\"Error scheduling notification: \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/PushNotifications.swift",
      "kind": "StringLiteral",
      "offset": 3335,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/PushNotifications.swift",
      "kind": "StringLiteral",
      "offset": 3385,
      "length": 47,
      "value": "\"Succesfully scheduled onboarding notification\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/PushNotifications.swift",
      "kind": "BooleanLiteral",
      "offset": 3797,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/PushNotifications.swift",
      "kind": "StringLiteral",
      "offset": 3831,
      "length": 75,
      "value": "\"Notifications are not approved by user for weekly updates, not scheduling\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/PushNotifications.swift",
      "kind": "IntegerLiteral",
      "offset": 4322,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/PushNotifications.swift",
      "kind": "BooleanLiteral",
      "offset": 4689,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/PushNotifications.swift",
      "kind": "StringLiteral",
      "offset": 5149,
      "length": 41,
      "value": "\"Error scheduling notification: \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/PushNotifications.swift",
      "kind": "StringLiteral",
      "offset": 5189,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/PushNotifications.swift",
      "kind": "StringLiteral",
      "offset": 5531,
      "length": 100,
      "value": "\"Scheduled notification with id \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/PushNotifications.swift",
      "kind": "StringLiteral",
      "offset": 5584,
      "length": 3,
      "value": "\" for metrics: \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/PushNotifications.swift",
      "kind": "StringLiteral",
      "offset": 5614,
      "length": 1,
      "value": "\", \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/PushNotifications.swift",
      "kind": "StringLiteral",
      "offset": 5630,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/PushNotifications.swift",
      "kind": "StringLiteral",
      "offset": 6069,
      "length": 41,
      "value": "\"Wrong dateComponents: \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/PushNotifications.swift",
      "kind": "StringLiteral",
      "offset": 6109,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/PushNotifications.swift",
      "kind": "StringLiteral",
      "offset": 6156,
      "length": 23,
      "value": "\"weekly-update-invalid\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/PushNotifications.swift",
      "kind": "StringLiteral",
      "offset": 6248,
      "length": 39,
      "value": "\"weekly-update-\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/PushNotifications.swift",
      "kind": "StringLiteral",
      "offset": 6270,
      "length": 1,
      "value": "\"-\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/PushNotifications.swift",
      "kind": "StringLiteral",
      "offset": 6279,
      "length": 1,
      "value": "\"-\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/PushNotifications.swift",
      "kind": "StringLiteral",
      "offset": 6286,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/PushNotifications.swift",
      "kind": "StringLiteral",
      "offset": 6361,
      "length": 12,
      "value": "\"onboarding\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/PushNotifications.swift",
      "kind": "StringLiteral",
      "offset": 6460,
      "length": 15,
      "value": "\"weekly-update\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/PushNotifications.swift",
      "kind": "IntegerLiteral",
      "offset": 6679,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/PushNotifications.swift",
      "kind": "StringLiteral",
      "offset": 6794,
      "length": 26,
      "value": "\"Blocked Trackers Summary\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/PushNotifications.swift",
      "kind": "StringLiteral",
      "offset": 6831,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/PushNotifications.swift",
      "kind": "StringLiteral",
      "offset": 6866,
      "length": 347,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/PushNotifications.swift",
      "kind": "StringLiteral",
      "offset": 6887,
      "length": 13,
      "value": "\"You blocked\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/PushNotifications.swift",
      "kind": "StringLiteral",
      "offset": 6911,
      "length": 68,
      "value": "\"Used in the sentence: You blocked 500 tracking attempts this week.\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/PushNotifications.swift",
      "kind": "StringLiteral",
      "offset": 6981,
      "length": 1,
      "value": "\" \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/PushNotifications.swift",
      "kind": "StringLiteral",
      "offset": 6998,
      "length": 1,
      "value": "\" \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/PushNotifications.swift",
      "kind": "StringLiteral",
      "offset": 7019,
      "length": 71,
      "value": "\"tracking attempts this week. Tap to update to the newest block lists.\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/PushNotifications.swift",
      "kind": "StringLiteral",
      "offset": 7101,
      "length": 109,
      "value": "\"Used in the sentence: You blocked 500 tracking attempts this week. Tap to update to the newsst block lists.\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/PushNotifications.swift",
      "kind": "StringLiteral",
      "offset": 7212,
      "length": 1,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/PushNotifications.swift",
      "kind": "StringLiteral",
      "offset": 7418,
      "length": 16,
      "value": "\"Stay Protected\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/PushNotifications.swift",
      "kind": "StringLiteral",
      "offset": 7445,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/PushNotifications.swift",
      "kind": "StringLiteral",
      "offset": 7498,
      "length": 73,
      "value": "\"Tap to activate Lockdown Firewall and update to the newest block lists.\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/PushNotifications.swift",
      "kind": "StringLiteral",
      "offset": 7582,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/PushNotifications.swift",
      "kind": "StringLiteral",
      "offset": 7887,
      "length": 44,
      "value": "\"You've just blocked 100 tracking attempts!\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/PushNotifications.swift",
      "kind": "StringLiteral",
      "offset": 7942,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/PushNotifications.swift",
      "kind": "StringLiteral",
      "offset": 7991,
      "length": 27,
      "value": "\"Tap to see what they are.\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/PushNotifications.swift",
      "kind": "StringLiteral",
      "offset": 8029,
      "length": 93,
      "value": "\"Used in the paragraph: You've just blocked 100 tracking attempts! Tap to see what they are.\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/PushNotifications.swift",
      "kind": "StringLiteral",
      "offset": 8447,
      "length": 33,
      "value": "\"LockdownAllowNotificationsAfter\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/PushNotifications.swift",
      "kind": "StringLiteral",
      "offset": 8715,
      "length": 132,
      "value": "\"User allowed notifications on Friday\/Saturday, so we will start scheduling notifications only on Sunday: \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/PushNotifications.swift",
      "kind": "StringLiteral",
      "offset": 8846,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/PushNotifications.swift",
      "kind": "StringLiteral",
      "offset": 8971,
      "length": 99,
      "value": "\"User allowed notifications on Sunday-Thursday, we will start scheduling notifications immediately\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/PushNotifications.swift",
      "kind": "StringLiteral",
      "offset": 9431,
      "length": 123,
      "value": "\"No 'notifications allowed after date' is stored. It likely means that the user did not authorize the use of notifications\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/PushNotifications.swift",
      "kind": "StringLiteral",
      "offset": 9818,
      "length": 95,
      "value": "\"Not scheduling because notifications are not allowed yet (probably will be allowed on Sunday)\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/PushNotifications.swift",
      "kind": "IntegerLiteral",
      "offset": 10558,
      "length": 1,
      "value": "6"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/PushNotifications.swift",
      "kind": "IntegerLiteral",
      "offset": 10574,
      "length": 1,
      "value": "7"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/PushNotifications.swift",
      "kind": "IntegerLiteral",
      "offset": 10821,
      "length": 1,
      "value": "7"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/PushNotifications.swift",
      "kind": "IntegerLiteral",
      "offset": 10854,
      "length": 2,
      "value": "15"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/PushNotifications.swift",
      "kind": "IntegerLiteral",
      "offset": 10890,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/PushNotifications.swift",
      "kind": "IntegerLiteral",
      "offset": 10925,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/PushNotifications.swift",
      "kind": "IntegerLiteral",
      "offset": 11375,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/PushNotifications.swift",
      "kind": "IntegerLiteral",
      "offset": 11406,
      "length": 1,
      "value": "3"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/PushNotifications.swift",
      "kind": "IntegerLiteral",
      "offset": 11439,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/PushNotifications.swift",
      "kind": "IntegerLiteral",
      "offset": 11472,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/PushNotifications.swift",
      "kind": "StringLiteral",
      "offset": 12106,
      "length": 42,
      "value": "\"LockdownNotificationsEnergySavingCounter\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/PushNotifications.swift",
      "kind": "StringLiteral",
      "offset": 12229,
      "length": 42,
      "value": "\"LockdownNotificationsEnergySavingCounter\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/PushNotifications.swift",
      "kind": "IntegerLiteral",
      "offset": 12380,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/PushNotifications.swift",
      "kind": "IntegerLiteral",
      "offset": 12472,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/PushNotifications.swift",
      "kind": "IntegerLiteral",
      "offset": 12573,
      "length": 2,
      "value": "40"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/PushNotifications.swift",
      "kind": "BooleanLiteral",
      "offset": 12601,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/PushNotifications.swift",
      "kind": "BooleanLiteral",
      "offset": 12639,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/SecureHTTPAdapter.swift",
      "kind": "BooleanLiteral",
      "offset": 325,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/TunnelEvent.swift",
      "kind": "StringLiteral",
      "offset": 168,
      "length": 42,
      "value": "\"Tunnel \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/TunnelEvent.swift",
      "kind": "StringLiteral",
      "offset": 185,
      "length": 6,
      "value": "\" starts processing data.\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/TunnelEvent.swift",
      "kind": "StringLiteral",
      "offset": 269,
      "length": 38,
      "value": "\"Close is called on tunnel \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/TunnelEvent.swift",
      "kind": "StringLiteral",
      "offset": 305,
      "length": 1,
      "value": "\".\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/TunnelEvent.swift",
      "kind": "StringLiteral",
      "offset": 371,
      "length": 44,
      "value": "\"Force close is called on tunnel \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/TunnelEvent.swift",
      "kind": "StringLiteral",
      "offset": 413,
      "length": 1,
      "value": "\".\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/TunnelEvent.swift",
      "kind": "StringLiteral",
      "offset": 505,
      "length": 75,
      "value": "\"Tunnel \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/TunnelEvent.swift",
      "kind": "StringLiteral",
      "offset": 522,
      "length": 8,
      "value": "\" received request \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/TunnelEvent.swift",
      "kind": "StringLiteral",
      "offset": 550,
      "length": 4,
      "value": "\" from proxy socket \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/TunnelEvent.swift",
      "kind": "StringLiteral",
      "offset": 578,
      "length": 1,
      "value": "\".\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/TunnelEvent.swift",
      "kind": "IntegerLiteral",
      "offset": 687,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/TunnelEvent.swift",
      "kind": "StringLiteral",
      "offset": 714,
      "length": 75,
      "value": "\"Tunnel \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/TunnelEvent.swift",
      "kind": "StringLiteral",
      "offset": 731,
      "length": 8,
      "value": "\" received ready-for-forward signal from socket \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/TunnelEvent.swift",
      "kind": "StringLiteral",
      "offset": 787,
      "length": 1,
      "value": "\".\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/TunnelEvent.swift",
      "kind": "StringLiteral",
      "offset": 834,
      "length": 98,
      "value": "\"Tunnel \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/TunnelEvent.swift",
      "kind": "StringLiteral",
      "offset": 851,
      "length": 8,
      "value": "\" received ready-for-forward signal from socket \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/TunnelEvent.swift",
      "kind": "StringLiteral",
      "offset": 907,
      "length": 1,
      "value": "\". Start forwarding data.\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/TunnelEvent.swift",
      "kind": "StringLiteral",
      "offset": 1037,
      "length": 76,
      "value": "\"Tunnel \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/TunnelEvent.swift",
      "kind": "StringLiteral",
      "offset": 1054,
      "length": 8,
      "value": "\" received \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/TunnelEvent.swift",
      "kind": "StringLiteral",
      "offset": 1077,
      "length": 5,
      "value": "\" bytes from proxy socket \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/TunnelEvent.swift",
      "kind": "StringLiteral",
      "offset": 1111,
      "length": 1,
      "value": "\".\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/TunnelEvent.swift",
      "kind": "StringLiteral",
      "offset": 1240,
      "length": 77,
      "value": "\"Proxy socket \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/TunnelEvent.swift",
      "kind": "StringLiteral",
      "offset": 1263,
      "length": 4,
      "value": "\" sent \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/TunnelEvent.swift",
      "kind": "StringLiteral",
      "offset": 1282,
      "length": 5,
      "value": "\" bytes data from Tunnel \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/TunnelEvent.swift",
      "kind": "StringLiteral",
      "offset": 1315,
      "length": 1,
      "value": "\".\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/TunnelEvent.swift",
      "kind": "StringLiteral",
      "offset": 1362,
      "length": 57,
      "value": "\"Proxy socket \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/TunnelEvent.swift",
      "kind": "StringLiteral",
      "offset": 1385,
      "length": 4,
      "value": "\" sent data from Tunnel \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/TunnelEvent.swift",
      "kind": "StringLiteral",
      "offset": 1417,
      "length": 1,
      "value": "\".\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/TunnelEvent.swift",
      "kind": "StringLiteral",
      "offset": 1526,
      "length": 78,
      "value": "\"Tunnel \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/TunnelEvent.swift",
      "kind": "StringLiteral",
      "offset": 1543,
      "length": 8,
      "value": "\" received \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/TunnelEvent.swift",
      "kind": "StringLiteral",
      "offset": 1566,
      "length": 5,
      "value": "\" bytes from adapter socket \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/TunnelEvent.swift",
      "kind": "StringLiteral",
      "offset": 1602,
      "length": 1,
      "value": "\".\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/TunnelEvent.swift",
      "kind": "StringLiteral",
      "offset": 1733,
      "length": 79,
      "value": "\"Adatper socket \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/TunnelEvent.swift",
      "kind": "StringLiteral",
      "offset": 1758,
      "length": 4,
      "value": "\" sent \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/TunnelEvent.swift",
      "kind": "StringLiteral",
      "offset": 1777,
      "length": 5,
      "value": "\" bytes data from Tunnel \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/TunnelEvent.swift",
      "kind": "StringLiteral",
      "offset": 1810,
      "length": 1,
      "value": "\".\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/TunnelEvent.swift",
      "kind": "StringLiteral",
      "offset": 1857,
      "length": 59,
      "value": "\"Adapter socket \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/TunnelEvent.swift",
      "kind": "StringLiteral",
      "offset": 1882,
      "length": 4,
      "value": "\" sent data from Tunnel \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/TunnelEvent.swift",
      "kind": "StringLiteral",
      "offset": 1914,
      "length": 1,
      "value": "\".\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/TunnelEvent.swift",
      "kind": "StringLiteral",
      "offset": 2007,
      "length": 80,
      "value": "\"Adapter socket \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/TunnelEvent.swift",
      "kind": "StringLiteral",
      "offset": 2032,
      "length": 9,
      "value": "\" connected to remote successfully on tunnel \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/TunnelEvent.swift",
      "kind": "StringLiteral",
      "offset": 2085,
      "length": 1,
      "value": "\".\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/TunnelEvent.swift",
      "kind": "StringLiteral",
      "offset": 2180,
      "length": 68,
      "value": "\"Updating adapter socket of tunnel \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/TunnelEvent.swift",
      "kind": "StringLiteral",
      "offset": 2224,
      "length": 4,
      "value": "\" from \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/TunnelEvent.swift",
      "kind": "StringLiteral",
      "offset": 2236,
      "length": 2,
      "value": "\" to \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/TunnelEvent.swift",
      "kind": "StringLiteral",
      "offset": 2246,
      "length": 1,
      "value": "\".\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/TunnelEvent.swift",
      "kind": "StringLiteral",
      "offset": 2302,
      "length": 26,
      "value": "\"Tunnel \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/TunnelEvent.swift",
      "kind": "StringLiteral",
      "offset": 2319,
      "length": 6,
      "value": "\" closed.\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Rule\/Rule.swift",
      "kind": "StringLiteral",
      "offset": 183,
      "length": 8,
      "value": "\"<Rule>\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Tunnel\/QueueFactory.swift",
      "kind": "StringLiteral",
      "offset": 182,
      "length": 23,
      "value": "\"NEKit.ProcessingQueue\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Tunnel\/QueueFactory.swift",
      "kind": "StringLiteral",
      "offset": 264,
      "length": 23,
      "value": "\"NEKit.ProcessingQueue\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Tunnel\/QueueFactory.swift",
      "kind": "StringLiteral",
      "offset": 510,
      "length": 23,
      "value": "\"NEKit.ProcessingQueue\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/ProxySocket\/HTTPProxySocket.swift",
      "kind": "StringLiteral",
      "offset": 384,
      "length": 9,
      "value": "\"invalid\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/ProxySocket\/HTTPProxySocket.swift",
      "kind": "StringLiteral",
      "offset": 455,
      "length": 22,
      "value": "\"reading first header\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/ProxySocket\/HTTPProxySocket.swift",
      "kind": "StringLiteral",
      "offset": 539,
      "length": 30,
      "value": "\"waiting to send first header\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/ProxySocket\/HTTPProxySocket.swift",
      "kind": "StringLiteral",
      "offset": 626,
      "length": 29,
      "value": "\"reading header (forwarding)\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/ProxySocket\/HTTPProxySocket.swift",
      "kind": "StringLiteral",
      "offset": 713,
      "length": 30,
      "value": "\"reading content (forwarding)\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/ProxySocket\/HTTPProxySocket.swift",
      "kind": "StringLiteral",
      "offset": 794,
      "length": 9,
      "value": "\"stopped\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/ProxySocket\/HTTPProxySocket.swift",
      "kind": "StringLiteral",
      "offset": 1105,
      "length": 9,
      "value": "\"invalid\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/ProxySocket\/HTTPProxySocket.swift",
      "kind": "StringLiteral",
      "offset": 1180,
      "length": 37,
      "value": "\"sending response header for CONNECT\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/ProxySocket\/HTTPProxySocket.swift",
      "kind": "StringLiteral",
      "offset": 1271,
      "length": 34,
      "value": "\"waiting to begin forwarding data\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/ProxySocket\/HTTPProxySocket.swift",
      "kind": "StringLiteral",
      "offset": 1356,
      "length": 9,
      "value": "\"stopped\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/ProxySocket\/HTTPProxySocket.swift",
      "kind": "BooleanLiteral",
      "offset": 1838,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/ProxySocket\/HTTPProxySocket.swift",
      "kind": "IntegerLiteral",
      "offset": 2929,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/ProxySocket\/HTTPProxySocket.swift",
      "kind": "BooleanLiteral",
      "offset": 4516,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/ProxySocket\/HTTPProxySocket.swift",
      "kind": "StringLiteral",
      "offset": 4747,
      "length": 3,
      "value": "\".\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/ProxySocket\/HTTPProxySocket.swift",
      "kind": "BooleanLiteral",
      "offset": 4849,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/ProxySocket\/HTTPProxySocket.swift",
      "kind": "StringLiteral",
      "offset": 5060,
      "length": 13,
      "value": "\"example.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/ProxySocket\/HTTPProxySocket.swift",
      "kind": "StringLiteral",
      "offset": 5243,
      "length": 3,
      "value": "\".\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/StreamScanner.swift",
      "kind": "BooleanLiteral",
      "offset": 168,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/StreamScanner.swift",
      "kind": "BooleanLiteral",
      "offset": 778,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/StreamScanner.swift",
      "kind": "IntegerLiteral",
      "offset": 886,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/StreamScanner.swift",
      "kind": "BooleanLiteral",
      "offset": 1208,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/StreamScanner.swift",
      "kind": "BooleanLiteral",
      "offset": 1366,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/StreamScanner.swift",
      "kind": "IntegerLiteral",
      "offset": 1498,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/UserDefaults.swift",
      "kind": "StringLiteral",
      "offset": 205,
      "length": 21,
      "value": "\"group.com.confirmed\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/UserDefaults.swift",
      "kind": "StringLiteral",
      "offset": 262,
      "length": 29,
      "value": "\"user_wants_firewall_enabled\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/UserDefaults.swift",
      "kind": "StringLiteral",
      "offset": 319,
      "length": 24,
      "value": "\"user_wants_vpn_enabled\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/UserDefaults.swift",
      "kind": "StringLiteral",
      "offset": 432,
      "length": 35,
      "value": "\"kLatestKnowledgeIsFirewallEnabled\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/UserDefaults.swift",
      "kind": "StringLiteral",
      "offset": 522,
      "length": 30,
      "value": "\"kLatestKnowledgeIsVPNEnabled\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/Metrics.swift",
      "kind": "StringLiteral",
      "offset": 179,
      "length": 20,
      "value": "\"LockdownDayMetrics\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/Metrics.swift",
      "kind": "StringLiteral",
      "offset": 219,
      "length": 21,
      "value": "\"LockdownWeekMetrics\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/Metrics.swift",
      "kind": "StringLiteral",
      "offset": 261,
      "length": 22,
      "value": "\"LockdownTotalMetrics\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/Metrics.swift",
      "kind": "StringLiteral",
      "offset": 302,
      "length": 19,
      "value": "\"LockdownActiveDay\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/Metrics.swift",
      "kind": "StringLiteral",
      "offset": 340,
      "length": 20,
      "value": "\"LockdownActiveWeek\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/Metrics.swift",
      "kind": "BooleanLiteral",
      "offset": 484,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/Metrics.swift",
      "kind": "BooleanLiteral",
      "offset": 988,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/Metrics.swift",
      "kind": "StringLiteral",
      "offset": 1224,
      "length": 11,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/Metrics.swift",
      "kind": "StringLiteral",
      "offset": 1234,
      "length": 3,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/Metrics.swift",
      "kind": "IntegerLiteral",
      "offset": 1291,
      "length": 4,
      "value": "1000"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/Metrics.swift",
      "kind": "StringLiteral",
      "offset": 1313,
      "length": 11,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/Metrics.swift",
      "kind": "StringLiteral",
      "offset": 1323,
      "length": 1,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/Metrics.swift",
      "kind": "IntegerLiteral",
      "offset": 1352,
      "length": 7,
      "value": "1000000"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/Metrics.swift",
      "kind": "StringLiteral",
      "offset": 1377,
      "length": 24,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/Metrics.swift",
      "kind": "IntegerLiteral",
      "offset": 1393,
      "length": 4,
      "value": "1000"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/Metrics.swift",
      "kind": "StringLiteral",
      "offset": 1399,
      "length": 1,
      "value": "\"k\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/Metrics.swift",
      "kind": "StringLiteral",
      "offset": 1434,
      "length": 64,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/Metrics.swift",
      "kind": "StringLiteral",
      "offset": 1452,
      "length": 6,
      "value": "\"%.2f\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/Metrics.swift",
      "kind": "IntegerLiteral",
      "offset": 1485,
      "length": 7,
      "value": "1000000"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/Metrics.swift",
      "kind": "StringLiteral",
      "offset": 1496,
      "length": 1,
      "value": "\"m\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Rule\/RuleManager.swift",
      "kind": "Array",
      "offset": 320,
      "length": 2,
      "value": "[]"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Rule\/RuleManager.swift",
      "kind": "BooleanLiteral",
      "offset": 338,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Rule\/RuleManager.swift",
      "kind": "Array",
      "offset": 392,
      "length": 2,
      "value": "[]"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Rule\/RuleManager.swift",
      "kind": "BooleanLiteral",
      "offset": 765,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Rule\/RuleManager.swift",
      "kind": "IntegerLiteral",
      "offset": 849,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 249,
      "length": 21,
      "value": "\"whitelisted_domains\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 301,
      "length": 26,
      "value": "\"whitelisted_domains_user\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "BooleanLiteral",
      "offset": 1282,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 1887,
      "length": 14,
      "value": "\"3stripes.net\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 1955,
      "length": 13,
      "value": "\"aiv-cdn.net\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 2022,
      "length": 14,
      "value": "\"akamaihd.net\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 2090,
      "length": 15,
      "value": "\"akamaized.net\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 2159,
      "length": 10,
      "value": "\"ally.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 2223,
      "length": 12,
      "value": "\"amazon.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 2497,
      "length": 21,
      "value": "\"americanexpress.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 2572,
      "length": 17,
      "value": "\"api.twitter.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 2643,
      "length": 20,
      "value": "\"apple-cloudkit.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 2717,
      "length": 11,
      "value": "\"apple.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 2782,
      "length": 12,
      "value": "\"apple.news\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 2848,
      "length": 12,
      "value": "\"archive.is\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 2914,
      "length": 9,
      "value": "\"att.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 2977,
      "length": 23,
      "value": "\"att.com.edgesuite.net\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 3054,
      "length": 9,
      "value": "\"att.net\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 3117,
      "length": 13,
      "value": "\"bamgrid.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 3184,
      "length": 13,
      "value": "\"bestbuy.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 3251,
      "length": 15,
      "value": "\"bitwarden.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 3320,
      "length": 16,
      "value": "\"brightcove.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 3390,
      "length": 9,
      "value": "\"cbs.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 3453,
      "length": 16,
      "value": "\"cbsaavideo.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 3523,
      "length": 10,
      "value": "\"cbsi.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 3587,
      "length": 12,
      "value": "\"cbsi.video\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 3653,
      "length": 13,
      "value": "\"cbsnews.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 3720,
      "length": 15,
      "value": "\"cdn-apple.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 3789,
      "length": 11,
      "value": "\"chase.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 3854,
      "length": 10,
      "value": "\"citi.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 3918,
      "length": 16,
      "value": "\"cloudfront.net\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 3988,
      "length": 14,
      "value": "\"coinbase.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 4056,
      "length": 13,
      "value": "\"comcast.net\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 4123,
      "length": 18,
      "value": "\"confirmedvpn.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 4195,
      "length": 17,
      "value": "\"creditkarma.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 4266,
      "length": 10,
      "value": "\"cwtv.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 4330,
      "length": 14,
      "value": "\"digicert.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 4398,
      "length": 17,
      "value": "\"disney-plus.net\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 4469,
      "length": 16,
      "value": "\"disneyplus.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 4539,
      "length": 13,
      "value": "\"ebtedge.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 4606,
      "length": 10,
      "value": "\"espn.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 4670,
      "length": 12,
      "value": "\"fastly.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 4736,
      "length": 12,
      "value": "\"fastly.net\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 4802,
      "length": 15,
      "value": "\"firstdata.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 4871,
      "length": 9,
      "value": "\"fubo.tv\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 4934,
      "length": 14,
      "value": "\"gamestop.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 5002,
      "length": 8,
      "value": "\"go.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 5064,
      "length": 17,
      "value": "\"googlevideo.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 5135,
      "length": 12,
      "value": "\"grindr.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 5201,
      "length": 9,
      "value": "\"hbc.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 5264,
      "length": 9,
      "value": "\"hbo.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 5327,
      "length": 12,
      "value": "\"hbomax.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 5393,
      "length": 13,
      "value": "\"hotstar.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 5460,
      "length": 11,
      "value": "\"houzz.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 5525,
      "length": 12,
      "value": "\"hopper.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 5591,
      "length": 10,
      "value": "\"hulu.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 5655,
      "length": 12,
      "value": "\"huluim.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 5721,
      "length": 20,
      "value": "\"icloud-content.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 5795,
      "length": 12,
      "value": "\"icloud.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 5861,
      "length": 12,
      "value": "\"kroger.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 5927,
      "length": 17,
      "value": "\"letsencrypt.org\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 5998,
      "length": 16,
      "value": "\"livenation.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 6068,
      "length": 11,
      "value": "\"lowes.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 6133,
      "length": 10,
      "value": "\"lync.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 6197,
      "length": 15,
      "value": "\"m.twitter.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 6266,
      "length": 14,
      "value": "\"marcopolo.me\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 6334,
      "length": 15,
      "value": "\"mastercard.ca\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 6403,
      "length": 16,
      "value": "\"mastercard.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 6473,
      "length": 15,
      "value": "\"mastercard.us\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 6542,
      "length": 24,
      "value": "\"mbanking-services.mobi\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 6620,
      "length": 8,
      "value": "\"me.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 6682,
      "length": 12,
      "value": "\"meijer.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 6748,
      "length": 15,
      "value": "\"microsoft.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 6817,
      "length": 21,
      "value": "\"microsoftonline.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 6892,
      "length": 20,
      "value": "\"mobile.twitter.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 6966,
      "length": 12,
      "value": "\"movetv.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 7032,
      "length": 14,
      "value": "\"mzstatic.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 7100,
      "length": 9,
      "value": "\"nba.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 7163,
      "length": 12,
      "value": "\"nbcuni.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 7229,
      "length": 13,
      "value": "\"netflix.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 7296,
      "length": 13,
      "value": "\"neulion.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 7363,
      "length": 15,
      "value": "\"nflxvideo.net\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 7432,
      "length": 10,
      "value": "\"nike.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 7496,
      "length": 12,
      "value": "\"office.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 7562,
      "length": 12,
      "value": "\"office.net\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 7628,
      "length": 15,
      "value": "\"office365.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 7697,
      "length": 15,
      "value": "\"opentable.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 7766,
      "length": 13,
      "value": "\"outlook.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 7833,
      "length": 15,
      "value": "\"peacocktv.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 7902,
      "length": 21,
      "value": "\"personalcapital.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 7977,
      "length": 11,
      "value": "\"philo.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 8042,
      "length": 11,
      "value": "\"quibi.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 8107,
      "length": 15,
      "value": "\"quickplay.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 8176,
      "length": 18,
      "value": "\"researchgate.net\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 8248,
      "length": 10,
      "value": "\"saks.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 8312,
      "length": 21,
      "value": "\"saksfifthavenue.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 8387,
      "length": 20,
      "value": "\"scholar.google.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 8461,
      "length": 11,
      "value": "\"skype.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 8526,
      "length": 22,
      "value": "\"skypeforbusiness.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 8602,
      "length": 16,
      "value": "\"slickdeals.net\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 8672,
      "length": 11,
      "value": "\"sling.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 8737,
      "length": 15,
      "value": "\"southwest.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 8806,
      "length": 13,
      "value": "\"spotify.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 8873,
      "length": 13,
      "value": "\"stan.com.au\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 8940,
      "length": 12,
      "value": "\"stan.video\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 9006,
      "length": 12,
      "value": "\"stripe.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 9072,
      "length": 13,
      "value": "\"syncbak.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 9139,
      "length": 6,
      "value": "\"t.co\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 9199,
      "length": 13,
      "value": "\"tapbots.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 9266,
      "length": 13,
      "value": "\"tapbots.net\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 9333,
      "length": 14,
      "value": "\"telegram.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 9401,
      "length": 17,
      "value": "\"teslamotors.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 9472,
      "length": 18,
      "value": "\"ticketmaster.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 9544,
      "length": 11,
      "value": "\"ttvnw.net\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 9609,
      "length": 11,
      "value": "\"twimg.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 9674,
      "length": 13,
      "value": "\"twitter.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 9741,
      "length": 12,
      "value": "\"uplynk.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 9807,
      "length": 12,
      "value": "\"usbank.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 9873,
      "length": 14,
      "value": "\"verisign.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 9941,
      "length": 9,
      "value": "\"visa.ca\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 10004,
      "length": 10,
      "value": "\"visa.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 10068,
      "length": 10,
      "value": "\"vudu.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 10132,
      "length": 13,
      "value": "\"xfinity.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 10199,
      "length": 13,
      "value": "\"youtube.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 10266,
      "length": 9,
      "value": "\"zoom.us\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "StringLiteral",
      "offset": 10330,
      "length": 17,
      "value": "\"nianticlabs.com\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "BooleanLiteral",
      "offset": 10598,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/WhitelistUtilities.swift",
      "kind": "BooleanLiteral",
      "offset": 10823,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/AdapterSocketEvent.swift",
      "kind": "StringLiteral",
      "offset": 203,
      "length": 79,
      "value": "\"Adatper socket \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/AdapterSocketEvent.swift",
      "kind": "StringLiteral",
      "offset": 228,
      "length": 6,
      "value": "\" starts to connect to remote with session \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/AdapterSocketEvent.swift",
      "kind": "StringLiteral",
      "offset": 280,
      "length": 1,
      "value": "\".\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/AdapterSocketEvent.swift",
      "kind": "StringLiteral",
      "offset": 346,
      "length": 56,
      "value": "\"Disconnect is just called on adapter socket \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/AdapterSocketEvent.swift",
      "kind": "StringLiteral",
      "offset": 400,
      "length": 1,
      "value": "\".\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/AdapterSocketEvent.swift",
      "kind": "StringLiteral",
      "offset": 471,
      "length": 62,
      "value": "\"Force disconnect is just called on adapter socket \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/AdapterSocketEvent.swift",
      "kind": "StringLiteral",
      "offset": 531,
      "length": 1,
      "value": "\".\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/AdapterSocketEvent.swift",
      "kind": "StringLiteral",
      "offset": 593,
      "length": 40,
      "value": "\"Adapter socket \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/AdapterSocketEvent.swift",
      "kind": "StringLiteral",
      "offset": 618,
      "length": 12,
      "value": "\" disconnected.\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/AdapterSocketEvent.swift",
      "kind": "StringLiteral",
      "offset": 699,
      "length": 64,
      "value": "\"Received \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/AdapterSocketEvent.swift",
      "kind": "StringLiteral",
      "offset": 722,
      "length": 5,
      "value": "\" bytes data on adatper socket \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/AdapterSocketEvent.swift",
      "kind": "StringLiteral",
      "offset": 761,
      "length": 1,
      "value": "\".\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/AdapterSocketEvent.swift",
      "kind": "StringLiteral",
      "offset": 867,
      "length": 60,
      "value": "\"Sent \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/AdapterSocketEvent.swift",
      "kind": "StringLiteral",
      "offset": 886,
      "length": 5,
      "value": "\" bytes data on adapter socket \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/AdapterSocketEvent.swift",
      "kind": "StringLiteral",
      "offset": 925,
      "length": 1,
      "value": "\".\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/AdapterSocketEvent.swift",
      "kind": "StringLiteral",
      "offset": 972,
      "length": 40,
      "value": "\"Sent data on adapter socket \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/AdapterSocketEvent.swift",
      "kind": "StringLiteral",
      "offset": 1010,
      "length": 1,
      "value": "\".\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/AdapterSocketEvent.swift",
      "kind": "StringLiteral",
      "offset": 1083,
      "length": 47,
      "value": "\"Adapter socket \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/AdapterSocketEvent.swift",
      "kind": "StringLiteral",
      "offset": 1108,
      "length": 9,
      "value": "\" connected to remote.\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/AdapterSocketEvent.swift",
      "kind": "StringLiteral",
      "offset": 1193,
      "length": 52,
      "value": "\"Adatper socket \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/AdapterSocketEvent.swift",
      "kind": "StringLiteral",
      "offset": 1218,
      "length": 2,
      "value": "\" is ready to forward data.\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/AdapterSocketEvent.swift",
      "kind": "StringLiteral",
      "offset": 1316,
      "length": 57,
      "value": "\"Adapter socket \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/AdapterSocketEvent.swift",
      "kind": "StringLiteral",
      "offset": 1341,
      "length": 11,
      "value": "\" encountered an error \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/Event\/AdapterSocketEvent.swift",
      "kind": "StringLiteral",
      "offset": 1371,
      "length": 1,
      "value": "\".\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/IPMask.swift",
      "kind": "IntegerLiteral",
      "offset": 249,
      "length": 2,
      "value": "32"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/IPMask.swift",
      "kind": "IntegerLiteral",
      "offset": 321,
      "length": 2,
      "value": "32"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/IPMask.swift",
      "kind": "IntegerLiteral",
      "offset": 401,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/IPMask.swift",
      "kind": "IntegerLiteral",
      "offset": 459,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/IPMask.swift",
      "kind": "IntegerLiteral",
      "offset": 537,
      "length": 2,
      "value": "32"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/IPMask.swift",
      "kind": "IntegerLiteral",
      "offset": 878,
      "length": 3,
      "value": "128"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/IPMask.swift",
      "kind": "IntegerLiteral",
      "offset": 951,
      "length": 3,
      "value": "128"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/IPMask.swift",
      "kind": "IntegerLiteral",
      "offset": 1032,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/IPMask.swift",
      "kind": "IntegerLiteral",
      "offset": 1090,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/IPMask.swift",
      "kind": "IntegerLiteral",
      "offset": 1169,
      "length": 3,
      "value": "128"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/DebugObserver.swift",
      "kind": "StringLiteral",
      "offset": 1096,
      "length": 10,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/DebugObserver.swift",
      "kind": "StringLiteral",
      "offset": 1105,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/DebugObserver.swift",
      "kind": "StringLiteral",
      "offset": 1225,
      "length": 10,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/DebugObserver.swift",
      "kind": "StringLiteral",
      "offset": 1234,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/DebugObserver.swift",
      "kind": "StringLiteral",
      "offset": 1500,
      "length": 10,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/DebugObserver.swift",
      "kind": "StringLiteral",
      "offset": 1509,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/DebugObserver.swift",
      "kind": "StringLiteral",
      "offset": 1730,
      "length": 10,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/DebugObserver.swift",
      "kind": "StringLiteral",
      "offset": 1739,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/DebugObserver.swift",
      "kind": "StringLiteral",
      "offset": 1823,
      "length": 10,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/DebugObserver.swift",
      "kind": "StringLiteral",
      "offset": 1832,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/DebugObserver.swift",
      "kind": "StringLiteral",
      "offset": 1952,
      "length": 10,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/DebugObserver.swift",
      "kind": "StringLiteral",
      "offset": 1961,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/DebugObserver.swift",
      "kind": "StringLiteral",
      "offset": 2105,
      "length": 10,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/DebugObserver.swift",
      "kind": "StringLiteral",
      "offset": 2114,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/DebugObserver.swift",
      "kind": "StringLiteral",
      "offset": 2341,
      "length": 10,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/DebugObserver.swift",
      "kind": "StringLiteral",
      "offset": 2350,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/DebugObserver.swift",
      "kind": "StringLiteral",
      "offset": 2428,
      "length": 10,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/DebugObserver.swift",
      "kind": "StringLiteral",
      "offset": 2437,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/DebugObserver.swift",
      "kind": "StringLiteral",
      "offset": 2524,
      "length": 10,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/DebugObserver.swift",
      "kind": "StringLiteral",
      "offset": 2533,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/DebugObserver.swift",
      "kind": "StringLiteral",
      "offset": 2677,
      "length": 10,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/DebugObserver.swift",
      "kind": "StringLiteral",
      "offset": 2686,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/DebugObserver.swift",
      "kind": "StringLiteral",
      "offset": 2924,
      "length": 10,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/DebugObserver.swift",
      "kind": "StringLiteral",
      "offset": 2933,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/DebugObserver.swift",
      "kind": "StringLiteral",
      "offset": 3022,
      "length": 10,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/DebugObserver.swift",
      "kind": "StringLiteral",
      "offset": 3031,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/DebugObserver.swift",
      "kind": "StringLiteral",
      "offset": 3270,
      "length": 10,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/DebugObserver.swift",
      "kind": "StringLiteral",
      "offset": 3279,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/DebugObserver.swift",
      "kind": "StringLiteral",
      "offset": 3331,
      "length": 10,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Event\/DebugObserver.swift",
      "kind": "StringLiteral",
      "offset": 3340,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/OneTimeActions.swift",
      "kind": "StringLiteral",
      "offset": 275,
      "length": 54,
      "value": "\"LockdownHasSeenNotificationAuthorizationRequestPopup\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/OneTimeActions.swift",
      "kind": "StringLiteral",
      "offset": 391,
      "length": 67,
      "value": "\"LockdownHasScheduledOneHundredTrackingAttemptsBlockedNotification\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/OneTimeActions.swift",
      "kind": "StringLiteral",
      "offset": 275,
      "length": 54,
      "value": "\"LockdownHasSeenNotificationAuthorizationRequestPopup\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/OneTimeActions.swift",
      "kind": "StringLiteral",
      "offset": 391,
      "length": 67,
      "value": "\"LockdownHasScheduledOneHundredTrackingAttemptsBlockedNotification\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/LockdownClonedFiles\/OneTimeActions.swift",
      "kind": "BooleanLiteral",
      "offset": 645,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/SOCKS5Adapter.swift",
      "kind": "Array",
      "offset": 408,
      "length": 18,
      "value": "[0x05, 0x01, 0x00]"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/SOCKS5Adapter.swift",
      "kind": "IntegerLiteral",
      "offset": 490,
      "length": 6,
      "value": "-20000"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/SOCKS5Adapter.swift",
      "kind": "IntegerLiteral",
      "offset": 498,
      "length": 24,
      "value": "-19999"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/SOCKS5Adapter.swift",
      "kind": "IntegerLiteral",
      "offset": 524,
      "length": 25,
      "value": "-19998"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/SOCKS5Adapter.swift",
      "kind": "IntegerLiteral",
      "offset": 490,
      "length": 1,
      "value": "-20000"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/SOCKS5Adapter.swift",
      "kind": "IntegerLiteral",
      "offset": 498,
      "length": 24,
      "value": "-19999"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/SOCKS5Adapter.swift",
      "kind": "IntegerLiteral",
      "offset": 524,
      "length": 25,
      "value": "-19998"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/SOCKS5Adapter.swift",
      "kind": "IntegerLiteral",
      "offset": 490,
      "length": 1,
      "value": "-20000"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/SOCKS5Adapter.swift",
      "kind": "IntegerLiteral",
      "offset": 498,
      "length": 24,
      "value": "-19999"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/SOCKS5Adapter.swift",
      "kind": "IntegerLiteral",
      "offset": 524,
      "length": 25,
      "value": "-19998"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/SOCKS5Adapter.swift",
      "kind": "IntegerLiteral",
      "offset": 609,
      "length": 6,
      "value": "-21000"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/SOCKS5Adapter.swift",
      "kind": "IntegerLiteral",
      "offset": 617,
      "length": 11,
      "value": "-20999"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/SOCKS5Adapter.swift",
      "kind": "IntegerLiteral",
      "offset": 630,
      "length": 11,
      "value": "-20998"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/SOCKS5Adapter.swift",
      "kind": "IntegerLiteral",
      "offset": 643,
      "length": 19,
      "value": "-20997"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/SOCKS5Adapter.swift",
      "kind": "IntegerLiteral",
      "offset": 664,
      "length": 11,
      "value": "-20996"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/SOCKS5Adapter.swift",
      "kind": "IntegerLiteral",
      "offset": 609,
      "length": 1,
      "value": "-21000"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/SOCKS5Adapter.swift",
      "kind": "IntegerLiteral",
      "offset": 617,
      "length": 11,
      "value": "-20999"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/SOCKS5Adapter.swift",
      "kind": "IntegerLiteral",
      "offset": 630,
      "length": 11,
      "value": "-20998"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/SOCKS5Adapter.swift",
      "kind": "IntegerLiteral",
      "offset": 643,
      "length": 19,
      "value": "-20997"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/SOCKS5Adapter.swift",
      "kind": "IntegerLiteral",
      "offset": 664,
      "length": 11,
      "value": "-20996"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/SOCKS5Adapter.swift",
      "kind": "IntegerLiteral",
      "offset": 609,
      "length": 1,
      "value": "-21000"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/SOCKS5Adapter.swift",
      "kind": "IntegerLiteral",
      "offset": 617,
      "length": 11,
      "value": "-20999"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/SOCKS5Adapter.swift",
      "kind": "IntegerLiteral",
      "offset": 630,
      "length": 11,
      "value": "-20998"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/SOCKS5Adapter.swift",
      "kind": "IntegerLiteral",
      "offset": 643,
      "length": 19,
      "value": "-20997"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/SOCKS5Adapter.swift",
      "kind": "IntegerLiteral",
      "offset": 664,
      "length": 11,
      "value": "-20996"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/SOCKS5Adapter.swift",
      "kind": "BooleanLiteral",
      "offset": 1153,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/SOCKS5Adapter.swift",
      "kind": "IntegerLiteral",
      "offset": 1435,
      "length": 1,
      "value": "2"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/SOCKS5Adapter.swift",
      "kind": "Array",
      "offset": 1740,
      "length": 24,
      "value": "[0x05, 0x01, 0x00, 0x01]"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/SOCKS5Adapter.swift",
      "kind": "Array",
      "offset": 1964,
      "length": 24,
      "value": "[0x05, 0x01, 0x00, 0x04]"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/SOCKS5Adapter.swift",
      "kind": "Array",
      "offset": 2168,
      "length": 24,
      "value": "[0x05, 0x01, 0x00, 0x03]"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/SOCKS5Adapter.swift",
      "kind": "IntegerLiteral",
      "offset": 2600,
      "length": 1,
      "value": "5"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/SOCKS5Adapter.swift",
      "kind": "IntegerLiteral",
      "offset": 2672,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/SOCKS5Adapter.swift",
      "kind": "IntegerLiteral",
      "offset": 2698,
      "length": 1,
      "value": "3"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/SOCKS5Adapter.swift",
      "kind": "IntegerLiteral",
      "offset": 2720,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/SOCKS5Adapter.swift",
      "kind": "IntegerLiteral",
      "offset": 2752,
      "length": 1,
      "value": "3"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/SOCKS5Adapter.swift",
      "kind": "IntegerLiteral",
      "offset": 2756,
      "length": 1,
      "value": "2"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/SOCKS5Adapter.swift",
      "kind": "IntegerLiteral",
      "offset": 2775,
      "length": 1,
      "value": "3"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/SOCKS5Adapter.swift",
      "kind": "IntegerLiteral",
      "offset": 2816,
      "length": 1,
      "value": "4"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/SOCKS5Adapter.swift",
      "kind": "IntegerLiteral",
      "offset": 2822,
      "length": 1,
      "value": "2"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/SOCKS5Adapter.swift",
      "kind": "IntegerLiteral",
      "offset": 2841,
      "length": 1,
      "value": "4"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/SOCKS5Adapter.swift",
      "kind": "IntegerLiteral",
      "offset": 2873,
      "length": 2,
      "value": "15"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/SOCKS5Adapter.swift",
      "kind": "IntegerLiteral",
      "offset": 2878,
      "length": 1,
      "value": "2"
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Socket\/AdapterSocket\/SOCKS5Adapter.swift",
      "kind": "StringLiteral",
      "offset": 32,
      "length": 13,
      "value": "\"NEKit.SOCKS5Adapter\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/HTTPAuthentication.swift",
      "kind": "StringLiteral",
      "offset": 835,
      "length": 25,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/HTTPAuthentication.swift",
      "kind": "StringLiteral",
      "offset": 847,
      "length": 1,
      "value": "\":\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/HTTPAuthentication.swift",
      "kind": "StringLiteral",
      "offset": 859,
      "length": 1,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/HTTPAuthentication.swift",
      "kind": "StringLiteral",
      "offset": 1221,
      "length": 22,
      "value": "\"Basic \""
    },
    {
      "filePath": "\/Users\/pavelvilbik\/Developer\/Softteco\/lockdown-ios-2.0\/Carthage\/Checkouts\/NEKit\/src\/Utils\/HTTPAuthentication.swift",
      "kind": "StringLiteral",
      "offset": 1242,
      "length": 1,
      "value": "\"\""
    }
  ]
}